// Code generated by /workspaces/terraform-provider-vyos/tools/build-resource-terraform-schemas/main.go. DO NOT EDIT.

package vyosinterface

import (
	"encoding/xml"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/vyos/schema/interfacedefinition"
)

func https() interfacedefinition.InterfaceDefinition {
	return interfacedefinition.InterfaceDefinition{
		XMLName: xml.Name{Local: "interfaceDefinition"},
		Node: []*interfacedefinition.Node{{
			XMLName: xml.Name{Local: "node"}, NodeNameAttr: "service",
			Children: []*interfacedefinition.Children{{
				XMLName: xml.Name{Local: "children"},
				Node: []*interfacedefinition.Node{{
					XMLName: xml.Name{Local: "node"}, NodeNameAttr: "https", OwnerAttr: "${vyos_conf_scripts_dir}/https.py",
					Properties: []*interfacedefinition.Properties{{
						XMLName:  xml.Name{Local: "properties"},
						Help:     []string{"HTTPS configuration"},
						Priority: []string{"1001"},
					}},
					Children: []*interfacedefinition.Children{{
						XMLName: xml.Name{Local: "children"},
						Node: []*interfacedefinition.Node{{
							XMLName: xml.Name{Local: "node"}, NodeNameAttr: "api", OwnerAttr: "${vyos_conf_scripts_dir}/http-api.py",
							Properties: []*interfacedefinition.Properties{{
								XMLName:  xml.Name{Local: "properties"},
								Help:     []string{"VyOS HTTP API configuration"},
								Priority: []string{"1002"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								Node: []*interfacedefinition.Node{{
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "keys",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"HTTP API keys"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										TagNode: []*interfacedefinition.TagNode{{
											XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "id",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"HTTP API id"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "key",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"HTTP API plaintext key"},
													}},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "graphql",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"GraphQL support"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										Node: []*interfacedefinition.Node{{
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "authentication",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"GraphQL authentication"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "type",
													DefaultValue: []string{"key"},
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Authentication type"},
														Constraint: []*interfacedefinition.Constraint{{
															XMLName: xml.Name{Local: "constraint"},
															Regex:   []string{"(key|token)"},
														}},
														ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "key", Description: "Use API keys"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "token", Description: "Use JWT token"}},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															List:    []string{"key token"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "expiration",
													DefaultValue: []string{"3600"},
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Token time to expire in seconds"},
														Constraint: []*interfacedefinition.Constraint{{
															XMLName:   xml.Name{Local: "constraint"},
															Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 60-31536000"}},
														}},
														ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:60-31536000", Description: "Token lifetime in seconds"}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "secret-length",
													DefaultValue: []string{"32"},
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Length of shared secret in bytes"},
														Constraint: []*interfacedefinition.Constraint{{
															XMLName:   xml.Name{Local: "constraint"},
															Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 16-65535"}},
														}},
														ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:16-65535", Description: "Byte length of generated shared secret"}},
													}},
												}},
											}},
										}},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "introspection",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Schema introspection"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "cors",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Set CORS options"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "allow-origin",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Allow resource request from origin"},
												Multi:   []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
											}},
										}},
									}},
								}},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Port number used by connection"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 1-65535"}},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Numeric IP port"}},
										ConstraintErrorMessage: []string{"Port number must be in range 1 to 65535"},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "strict",
									Properties: []*interfacedefinition.Properties{{
										XMLName:   xml.Name{Local: "properties"},
										Help:      []string{"Enforce strict path checking"},
										Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "debug",
									Properties: []*interfacedefinition.Properties{{
										XMLName:   xml.Name{Local: "properties"},
										Help:      []string{"Debug"},
										Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
										Hidden:    []*interfacedefinition.Hidden{{XMLName: xml.Name{Local: "hidden"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "socket",
									Properties: []*interfacedefinition.Properties{{
										XMLName:   xml.Name{Local: "properties"},
										Help:      []string{"Run server on Unix domain socket"},
										Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "node"}, NodeNameAttr: "api-restrict",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Restrict api proxy to subset of virtual hosts"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "virtual-host",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Restrict proxy to virtual host(s)"},
										Multi:   []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "node"}, NodeNameAttr: "certificates",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"TLS certificates"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								Node: []*interfacedefinition.Node{{
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "certbot", OwnerAttr: "${vyos_conf_scripts_dir}/le_cert.py",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Request or apply a letsencrypt certificate for domain-name"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "domain-name",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Domain name(s) for which to obtain certificate"},
												Multi:   []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "email",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Email address to associate with certificate"},
											}},
										}},
									}},
								}},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ca-certificate",
									Properties: []*interfacedefinition.Properties{{
										XMLName:   xml.Name{Local: "properties"},
										Help:      []string{"Certificate Authority in PKI configuration"},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Name of CA in PKI configuration"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"pki ca"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "certificate",
									Properties: []*interfacedefinition.Properties{{
										XMLName:   xml.Name{Local: "properties"},
										Help:      []string{"Certificate in PKI configuration"},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Name of certificate in PKI configuration"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"pki certificate"},
										}},
									}},
								}},
							}},
						}},
						TagNode: []*interfacedefinition.TagNode{{
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "virtual-host",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Identifier for virtual host"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[a-zA-Z0-9-_.:]{1,255}"},
								}},
								ConstraintErrorMessage: []string{"illegal characters in identifier or identifier longer than 255 characters"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "listen-address",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Address to listen for HTTPS requests"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Regex:     []string{"\\&"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6-address"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4", Description: "HTTPS IPv4 address"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6", Description: "HTTPS IPv6 address"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "'&'", Description: "any"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Script:  []string{"${vyos_completion_dir}/list_local_ips.sh --both"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "listen-port",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Port to listen for HTTPS requests; default 443"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 1-65535"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Numeric IP port"}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "server-name",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Server names: exact, wildcard, or regex"},
										Multi:   []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}},
							}},
						}},
						LeafNode: []*interfacedefinition.LeafNode{{
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "vrf",
							Properties: []*interfacedefinition.Properties{{
								XMLName:   xml.Name{Local: "properties"},
								Help:      []string{"VRF instance name"},
								ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "VRF instance name"}},
								CompletionHelp: []*interfacedefinition.CompletionHelp{{
									XMLName: xml.Name{Local: "completionHelp"},
									Path:    []string{"vrf name"},
								}},
							}},
						}},
					}},
				}},
			}},
		}},
	}
}
