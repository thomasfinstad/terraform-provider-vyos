// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// ProtocolsBgpParametersDampening describes the resource data model.
type ProtocolsBgpParametersDampening struct {
	ID types.String `tfsdk:"id" vyos:"_,tfsdk-id"`

	// LeafNodes
	LeafProtocolsBgpParametersDampeningHalfLife          types.Number `tfsdk:"half_life" vyos:"half-life,omitempty"`
	LeafProtocolsBgpParametersDampeningMaxSuppressTime   types.Number `tfsdk:"max_suppress_time" vyos:"max-suppress-time,omitempty"`
	LeafProtocolsBgpParametersDampeningReUse             types.Number `tfsdk:"re_use" vyos:"re-use,omitempty"`
	LeafProtocolsBgpParametersDampeningStartSuppressTime types.Number `tfsdk:"start_suppress_time" vyos:"start-suppress-time,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes (Bools that show if child resources have been configured)
}

// SetID configures the resource ID
func (o *ProtocolsBgpParametersDampening) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ProtocolsBgpParametersDampening) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"protocols",

		"bgp",

		"parameters",

		"dampening",
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsBgpParametersDampening) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},

		// LeafNodes

		"half_life": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Half-life time for dampening

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-45  &emsp; |  Half-life penalty in minutes  |

`,
		},

		"max_suppress_time": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Maximum duration to suppress a stable route

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-255  &emsp; |  Maximum suppress duration in minutes  |

`,
		},

		"re_use": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Threshold to start reusing a route

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-20000  &emsp; |  Re-use penalty points  |

`,
		},

		"start_suppress_time": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `When to start suppressing a route

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-20000  &emsp; |  Start-suppress penalty points  |

`,
		},
	}
}
