// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// VpnSstpPppOptions describes the resource data model.
type VpnSstpPppOptions struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	// LeafNodes
	LeafVpnSstpPppOptionsMppe            types.String `tfsdk:"mppe" vyos:"mppe,omitempty"`
	LeafVpnSstpPppOptionsIPvfour         types.String `tfsdk:"ipv4" vyos:"ipv4,omitempty"`
	LeafVpnSstpPppOptionsIPvsix          types.String `tfsdk:"ipv6" vyos:"ipv6,omitempty"`
	LeafVpnSstpPppOptionsLcpEchoInterval types.String `tfsdk:"lcp_echo_interval" vyos:"lcp-echo-interval,omitempty"`
	LeafVpnSstpPppOptionsLcpEchoFailure  types.String `tfsdk:"lcp_echo_failure" vyos:"lcp-echo-failure,omitempty"`
	LeafVpnSstpPppOptionsLcpEchoTimeout  types.String `tfsdk:"lcp_echo_timeout" vyos:"lcp-echo-timeout,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes (Bools that show if child resources have been configured)
}

// SetID configures the resource ID
func (o *VpnSstpPppOptions) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *VpnSstpPppOptions) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"vpn",

		"sstp",

		"ppp-options",
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VpnSstpPppOptions) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},

		// LeafNodes

		"mppe": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Specifies mppe negotiation preferences

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  require  &emsp; |  send mppe request, if client rejects, drop the connection  |
    |  prefer  &emsp; |  send mppe request, if client rejects continue  |
    |  deny  &emsp; |  drop all mppe  |

`,

			// Default:          stringdefault.StaticString(`prefer`),
			Computed: true,
		},

		"ipv4": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `IPv4 negotiation algorithm

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  deny  &emsp; |  Do not negotiate IPv4  |
    |  allow  &emsp; |  Negotiate IPv4 only if client requests  |

`,

			// Default:          stringdefault.StaticString(`allow`),
			Computed: true,
		},

		"ipv6": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `IPv6 (IPCP6) negotiation algorithm

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  deny  &emsp; |  Do not negotiate IPv6  |
    |  allow  &emsp; |  Negotiate IPv6 only if client requests  |
    |  prefer  &emsp; |  Ask client for IPv6 negotiation, do not fail if it rejects  |
    |  require  &emsp; |  Require IPv6 negotiation  |

`,

			// Default:          stringdefault.StaticString(`deny`),
			Computed: true,
		},

		"lcp_echo_interval": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `LCP echo-requests/sec

`,

			// Default:          stringdefault.StaticString(`30`),
			Computed: true,
		},

		"lcp_echo_failure": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Maximum number of Echo-Requests may be sent without valid reply

`,

			// Default:          stringdefault.StaticString(`3`),
			Computed: true,
		},

		"lcp_echo_timeout": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Timeout in seconds to wait for any peer activity. If this option specified it turns on adaptive lcp echo functionality and "lcp-echo-failure" is not used.

`,

			// Default:          stringdefault.StaticString(`0`),
			Computed: true,
		},
	}
}
