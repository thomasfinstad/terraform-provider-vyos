// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// FirewallStatePolicyRelated describes the resource data model.
type FirewallStatePolicyRelated struct {
	ID types.String `tfsdk:"id" vyos:"_,tfsdk-id"`

	// LeafNodes
	LeafFirewallStatePolicyRelatedAction   types.String `tfsdk:"action" vyos:"action,omitempty"`
	LeafFirewallStatePolicyRelatedLogLevel types.String `tfsdk:"log_level" vyos:"log-level,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes (Bools that show if child resources have been configured)
	ExistsNodeFirewallStatePolicyRelatedLog bool `tfsdk:"-" vyos:"log,ignore,omitempty"`
}

// SetID configures the resource ID
func (o *FirewallStatePolicyRelated) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *FirewallStatePolicyRelated) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"firewall",

		"state-policy",

		"related",
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o FirewallStatePolicyRelated) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},

		// LeafNodes

		"action": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Action for packets

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  accept  &emsp; |  Action to accept  |
    |  drop  &emsp; |  Action to drop  |
    |  reject  &emsp; |  Action to reject  |

`,
		},

		"log_level": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Set log-level. Log must be enable.

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  emerg  &emsp; |  Emerg log level  |
    |  alert  &emsp; |  Alert log level  |
    |  crit  &emsp; |  Critical log level  |
    |  err  &emsp; |  Error log level  |
    |  warn  &emsp; |  Warning log level  |
    |  notice  &emsp; |  Notice log level  |
    |  info  &emsp; |  Info log level  |
    |  debug  &emsp; |  Debug log level  |

`,
		},
	}
}
