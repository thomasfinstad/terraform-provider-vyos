// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// SystemConntrackModules describes the resource data model.
type SystemConntrackModules struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	// LeafNodes
	LeafSystemConntrackModulesFtp            types.Bool `tfsdk:"ftp" vyos:"ftp,omitempty"`
	LeafSystemConntrackModulesHthreetwothree types.Bool `tfsdk:"h323" vyos:"h323,omitempty"`
	LeafSystemConntrackModulesNfs            types.Bool `tfsdk:"nfs" vyos:"nfs,omitempty"`
	LeafSystemConntrackModulesPptp           types.Bool `tfsdk:"pptp" vyos:"pptp,omitempty"`
	LeafSystemConntrackModulesSIP            types.Bool `tfsdk:"sip" vyos:"sip,omitempty"`
	LeafSystemConntrackModulesSqlnet         types.Bool `tfsdk:"sqlnet" vyos:"sqlnet,omitempty"`
	LeafSystemConntrackModulesTftp           types.Bool `tfsdk:"tftp" vyos:"tftp,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes (Bools that show if child resources have been configured)
}

// SetID configures the resource ID
func (o *SystemConntrackModules) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *SystemConntrackModules) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"system",

		"conntrack",

		"modules",
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o SystemConntrackModules) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},

		// LeafNodes

		"ftp": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `FTP connection tracking

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"h323": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `H.323 connection tracking

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"nfs": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `NFS connection tracking

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"pptp": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `PPTP connection tracking

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"sip": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `SIP connection tracking

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"sqlnet": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `SQLnet connection tracking

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"tftp": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `TFTP connection tracking

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},
	}
}
