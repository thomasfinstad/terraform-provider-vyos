// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// SystemConfigManagementCommitArchive describes the resource data model.
type SystemConfigManagementCommitArchive struct {
	ID types.String `tfsdk:"id" vyos:"_,tfsdk-id"`

	// LeafNodes
	LeafSystemConfigManagementCommitArchiveLocation      types.List   `tfsdk:"location" vyos:"location,omitempty"`
	LeafSystemConfigManagementCommitArchiveSourceAddress types.String `tfsdk:"source_address" vyos:"source-address,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes (Bools that show if child resources have been configured)
}

// SetID configures the resource ID
func (o *SystemConfigManagementCommitArchive) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *SystemConfigManagementCommitArchive) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"system",

		"config-management",

		"commit-archive",
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o SystemConfigManagementCommitArchive) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},

		// LeafNodes

		"location": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Commit archive location

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  uri  &emsp; |  Uniform Resource Identifier  |

`,
		},

		"source_address": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Source address or interface for archive server connections

`,
		},
	}
}
