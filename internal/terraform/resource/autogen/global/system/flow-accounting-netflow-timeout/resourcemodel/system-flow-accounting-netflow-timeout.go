// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// SystemFlowAccountingNetflowTimeout describes the resource data model.
type SystemFlowAccountingNetflowTimeout struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	// LeafNodes
	LeafSystemFlowAccountingNetflowTimeoutExpiryInterval types.Number `tfsdk:"expiry_interval" vyos:"expiry-interval,omitempty"`
	LeafSystemFlowAccountingNetflowTimeoutFlowGeneric    types.Number `tfsdk:"flow_generic" vyos:"flow-generic,omitempty"`
	LeafSystemFlowAccountingNetflowTimeoutIcmp           types.Number `tfsdk:"icmp" vyos:"icmp,omitempty"`
	LeafSystemFlowAccountingNetflowTimeoutMaxActiveLife  types.Number `tfsdk:"max_active_life" vyos:"max-active-life,omitempty"`
	LeafSystemFlowAccountingNetflowTimeoutTCPFin         types.Number `tfsdk:"tcp_fin" vyos:"tcp-fin,omitempty"`
	LeafSystemFlowAccountingNetflowTimeoutTCPGeneric     types.Number `tfsdk:"tcp_generic" vyos:"tcp-generic,omitempty"`
	LeafSystemFlowAccountingNetflowTimeoutTCPRst         types.Number `tfsdk:"tcp_rst" vyos:"tcp-rst,omitempty"`
	LeafSystemFlowAccountingNetflowTimeoutUDP            types.Number `tfsdk:"udp" vyos:"udp,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes (Bools that show if child resources have been configured)
}

// SetID configures the resource ID
func (o *SystemFlowAccountingNetflowTimeout) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *SystemFlowAccountingNetflowTimeout) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"system",

		"flow-accounting",

		"netflow",

		"timeout",
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o SystemFlowAccountingNetflowTimeout) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},

		// LeafNodes

		"expiry_interval": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Expiry scan interval

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-2147483647  &emsp; |  Expiry scan interval  |

`,

			// Default:          stringdefault.StaticString(`60`),
			Computed: true,
		},

		"flow_generic": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Generic flow timeout value

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-2147483647  &emsp; |  Generic flow timeout in seconds  |

`,

			// Default:          stringdefault.StaticString(`3600`),
			Computed: true,
		},

		"icmp": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `ICMP timeout value

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-2147483647  &emsp; |  ICMP timeout in seconds  |

`,

			// Default:          stringdefault.StaticString(`300`),
			Computed: true,
		},

		"max_active_life": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Max active timeout value

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-2147483647  &emsp; |  Max active timeout in seconds  |

`,

			// Default:          stringdefault.StaticString(`604800`),
			Computed: true,
		},

		"tcp_fin": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `TCP finish timeout value

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-2147483647  &emsp; |  TCP FIN timeout in seconds  |

`,

			// Default:          stringdefault.StaticString(`300`),
			Computed: true,
		},

		"tcp_generic": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `TCP generic timeout value

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-2147483647  &emsp; |  TCP generic timeout in seconds  |

`,

			// Default:          stringdefault.StaticString(`3600`),
			Computed: true,
		},

		"tcp_rst": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `TCP reset timeout value

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-2147483647  &emsp; |  TCP RST timeout in seconds  |

`,

			// Default:          stringdefault.StaticString(`120`),
			Computed: true,
		},

		"udp": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `UDP timeout value

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-2147483647  &emsp; |  UDP timeout in seconds  |

`,

			// Default:          stringdefault.StaticString(`300`),
			Computed: true,
		},
	}
}
