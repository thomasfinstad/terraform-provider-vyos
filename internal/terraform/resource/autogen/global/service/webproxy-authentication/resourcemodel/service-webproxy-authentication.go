// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// ServiceWebproxyAuthentication describes the resource data model.
type ServiceWebproxyAuthentication struct {
	ID types.String `tfsdk:"id" vyos:"_,tfsdk-id"`

	// LeafNodes
	LeafServiceWebproxyAuthenticationChildren       types.String `tfsdk:"children" vyos:"children,omitempty"`
	LeafServiceWebproxyAuthenticationCredentialsTTL types.String `tfsdk:"credentials_ttl" vyos:"credentials-ttl,omitempty"`
	LeafServiceWebproxyAuthenticationMethod         types.String `tfsdk:"method" vyos:"method,omitempty"`
	LeafServiceWebproxyAuthenticationRealm          types.String `tfsdk:"realm" vyos:"realm,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes (Bools that show if child resources have been configured)
	ExistsNodeServiceWebproxyAuthenticationLdap bool `tfsdk:"-" vyos:"ldap,ignore,omitempty"`
}

// SetID configures the resource ID
func (o *ServiceWebproxyAuthentication) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ServiceWebproxyAuthentication) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"service",

		"webproxy",

		"authentication",
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceWebproxyAuthentication) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},

		// LeafNodes

		"children": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Number of authentication helper processes

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  n  &emsp; |  Number of authentication helper processes  |

`,

			// Default:          stringdefault.StaticString(`5`),
			Computed: true,
		},

		"credentials_ttl": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Authenticated session time to live in minutes

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  n  &emsp; |  Authenticated session timeout  |

`,

			// Default:          stringdefault.StaticString(`60`),
			Computed: true,
		},

		"method": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Authentication Method

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ldap  &emsp; |  Lightweight Directory Access Protocol  |

`,
		},

		"realm": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Name of authentication realm (e.g. "My Company proxy server")

`,
		},
	}
}
