// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// ServiceTCPDynamicProtection describes the resource data model.
type ServiceTCPDynamicProtection struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	// LeafNodes
	LeafServiceTCPDynamicProtectionBlockTime  types.Number `tfsdk:"block_time" vyos:"block-time,omitempty"`
	LeafServiceTCPDynamicProtectionDetectTime types.Number `tfsdk:"detect_time" vyos:"detect-time,omitempty"`
	LeafServiceTCPDynamicProtectionThreshold  types.Number `tfsdk:"threshold" vyos:"threshold,omitempty"`
	LeafServiceTCPDynamicProtectionAllowFrom  types.List   `tfsdk:"allow_from" vyos:"allow-from,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes (Bools that show if child resources have been configured)
}

// SetID configures the resource ID
func (o *ServiceTCPDynamicProtection) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ServiceTCPDynamicProtection) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"service",

		"ssh",

		"dynamic-protection",
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceTCPDynamicProtection) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},

		// LeafNodes

		"block_time": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Block source IP in seconds. Subsequent blocks increase by a factor of 1.5

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-65535  &emsp; |  Time interval in seconds for blocking  |

`,

			// Default:          stringdefault.StaticString(`120`),
			Computed: true,
		},

		"detect_time": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Remember source IP in seconds before reset their score

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-65535  &emsp; |  Time interval in seconds  |

`,

			// Default:          stringdefault.StaticString(`1800`),
			Computed: true,
		},

		"threshold": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Block source IP when their cumulative attack score exceeds threshold

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-65535  &emsp; |  Threshold score  |

`,

			// Default:          stringdefault.StaticString(`30`),
			Computed: true,
		},

		"allow_from": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Always allow inbound connections from these systems

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv4  &emsp; |  Address to match against  |
    |  ipv4net  &emsp; |  IPv4 address and prefix length  |
    |  ipv6  &emsp; |  IPv6 address to match against  |
    |  ipv6net  &emsp; |  IPv6 address and prefix length  |

`,
		},
	}
}
