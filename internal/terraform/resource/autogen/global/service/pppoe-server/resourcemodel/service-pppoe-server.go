// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// ServicePppoeServer describes the resource data model.
type ServicePppoeServer struct {
	ID types.String `tfsdk:"id" vyos:"_,tfsdk-id"`

	// LeafNodes
	LeafServicePppoeServerAccessConcentrator types.String `tfsdk:"access_concentrator" vyos:"access-concentrator,omitempty"`
	LeafServicePppoeServerNameServer         types.List   `tfsdk:"name_server" vyos:"name-server,omitempty"`
	LeafServicePppoeServerGatewayAddress     types.String `tfsdk:"gateway_address" vyos:"gateway-address,omitempty"`
	LeafServicePppoeServerMtu                types.String `tfsdk:"mtu" vyos:"mtu,omitempty"`
	LeafServicePppoeServerServiceName        types.List   `tfsdk:"service_name" vyos:"service-name,omitempty"`
	LeafServicePppoeServerWinsServer         types.List   `tfsdk:"wins_server" vyos:"wins-server,omitempty"`
	LeafServicePppoeServerSessionControl     types.String `tfsdk:"session_control" vyos:"session-control,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	ExistsTagServicePppoeServerInterface bool `tfsdk:"-" vyos:"interface,ignore,child"`
	ExistsTagServicePppoeServerPadoDelay bool `tfsdk:"-" vyos:"pado-delay,ignore,child"`

	// Nodes (Bools that show if child resources have been configured)
	ExistsNodeServicePppoeServerAuthentication   bool `tfsdk:"-" vyos:"authentication,ignore,omitempty"`
	ExistsNodeServicePppoeServerClientIPPool     bool `tfsdk:"-" vyos:"client-ip-pool,ignore,omitempty"`
	ExistsNodeServicePppoeServerClientIPvsixPool bool `tfsdk:"-" vyos:"client-ipv6-pool,ignore,omitempty"`
	ExistsNodeServicePppoeServerLimits           bool `tfsdk:"-" vyos:"limits,ignore,omitempty"`
	ExistsNodeServicePppoeServerPppOptions       bool `tfsdk:"-" vyos:"ppp-options,ignore,omitempty"`
	ExistsNodeServicePppoeServerShaper           bool `tfsdk:"-" vyos:"shaper,ignore,omitempty"`
	ExistsNodeServicePppoeServerSnmp             bool `tfsdk:"-" vyos:"snmp,ignore,omitempty"`
	ExistsNodeServicePppoeServerExtendedScrIPts  bool `tfsdk:"-" vyos:"extended-scripts,ignore,omitempty"`
}

// SetID configures the resource ID
func (o *ServicePppoeServer) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ServicePppoeServer) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"service",

		"pppoe-server",
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServicePppoeServer) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},

		// LeafNodes

		"access_concentrator": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Access concentrator name

`,

			// Default:          stringdefault.StaticString(`vyos-ac`),
			Computed: true,
		},

		"name_server": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Domain Name Servers (DNS) addresses

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv4  &emsp; |  Domain Name Server (DNS) IPv4 address  |
    |  ipv6  &emsp; |  Domain Name Server (DNS) IPv6 address  |

`,
		},

		"gateway_address": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Gateway IP address

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv4  &emsp; |  Default Gateway send to the client  |

`,
		},

		"mtu": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Maximum Transmission Unit (MTU) - default 1492

`,

			// Default:          stringdefault.StaticString(`1492`),
			Computed: true,
		},

		"service_name": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Service name

`,
		},

		"wins_server": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Windows Internet Name Service (WINS) servers propagated to client

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv4  &emsp; |  Domain Name Server (DNS) IPv4 address  |

`,
		},

		"session_control": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `control sessions count

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  disable  &emsp; |  Disables session control  |
    |  deny  &emsp; |  Deny second session authorization  |
    |  replace  &emsp; |  Terminate first session when second is authorized  |

`,

			// Default:          stringdefault.StaticString(`replace`),
			Computed: true,
		},
	}
}
