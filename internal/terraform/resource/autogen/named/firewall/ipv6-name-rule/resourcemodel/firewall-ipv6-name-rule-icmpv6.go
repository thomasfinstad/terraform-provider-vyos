// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// FirewallIPvsixNameRuleIcmpvsix describes the resource data model.
type FirewallIPvsixNameRuleIcmpvsix struct {
	// LeafNodes
	LeafFirewallIPvsixNameRuleIcmpvsixCode     types.Number `tfsdk:"code" vyos:"code,omitempty"`
	LeafFirewallIPvsixNameRuleIcmpvsixType     types.Number `tfsdk:"type" vyos:"type,omitempty"`
	LeafFirewallIPvsixNameRuleIcmpvsixTypeName types.String `tfsdk:"type_name" vyos:"type-name,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o FirewallIPvsixNameRuleIcmpvsix) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"code": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `ICMPv6 code

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:0-255  |  ICMPv6 code (0-255)  |

`,
		},

		"type": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `ICMPv6 type

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:0-255  |  ICMPv6 type (0-255)  |

`,
		},

		"type_name": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `ICMPv6 type-name

    |  Format  |  Description  |
    |----------|---------------|
    |  destination-unreachable  |  ICMPv6 type 1: destination-unreachable  |
    |  packet-too-big  |  ICMPv6 type 2: packet-too-big  |
    |  time-exceeded  |  ICMPv6 type 3: time-exceeded  |
    |  echo-request  |  ICMPv6 type 128: echo-request  |
    |  echo-reply  |  ICMPv6 type 129: echo-reply  |
    |  mld-listener-query  |  ICMPv6 type 130: mld-listener-query  |
    |  mld-listener-report  |  ICMPv6 type 131: mld-listener-report  |
    |  mld-listener-reduction  |  ICMPv6 type 132: mld-listener-reduction  |
    |  nd-router-solicit  |  ICMPv6 type 133: nd-router-solicit  |
    |  nd-router-advert  |  ICMPv6 type 134: nd-router-advert  |
    |  nd-neighbor-solicit  |  ICMPv6 type 135: nd-neighbor-solicit  |
    |  nd-neighbor-advert  |  ICMPv6 type 136: nd-neighbor-advert  |
    |  nd-redirect  |  ICMPv6 type 137: nd-redirect  |
    |  parameter-problem  |  ICMPv6 type 4: parameter-problem  |
    |  router-renumbering  |  ICMPv6 type 138: router-renumbering  |
    |  ind-neighbor-solicit  |  ICMPv6 type 141: ind-neighbor-solicit  |
    |  ind-neighbor-advert  |  ICMPv6 type 142: ind-neighbor-advert  |
    |  mld2-listener-report  |  ICMPv6 type 143: mld2-listener-report  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *FirewallIPvsixNameRuleIcmpvsix) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *FirewallIPvsixNameRuleIcmpvsix) UnmarshalJSON(_ []byte) error {
	return nil
}
