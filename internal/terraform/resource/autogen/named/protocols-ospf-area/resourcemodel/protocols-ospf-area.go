// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// ProtocolsOspfArea describes the resource data model.
type ProtocolsOspfArea struct {
	// LeafNodes
	ProtocolsOspfAreaAuthentication customtypes.CustomStringValue `tfsdk:"authentication" json:"authentication,omitempty"`
	ProtocolsOspfAreaNetwork        customtypes.CustomStringValue `tfsdk:"network" json:"network,omitempty"`
	ProtocolsOspfAreaShortcut       customtypes.CustomStringValue `tfsdk:"shortcut" json:"shortcut,omitempty"`
	ProtocolsOspfAreaExportList     customtypes.CustomStringValue `tfsdk:"export_list" json:"export-list,omitempty"`
	ProtocolsOspfAreaImportList     customtypes.CustomStringValue `tfsdk:"import_list" json:"import-list,omitempty"`

	// TagNodes
	ProtocolsOspfAreaRange       types.Map `tfsdk:"range" json:"range,omitempty"`
	ProtocolsOspfAreaVirtualLink types.Map `tfsdk:"virtual_link" json:"virtual-link,omitempty"`

	// Nodes
	ProtocolsOspfAreaAreaType types.Object `tfsdk:"area_type" json:"area-type,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o ProtocolsOspfArea) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"authentication": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `OSPF area authentication type

|  Format  |  Description  |
|----------|---------------|
|  plaintext-password  |  Use plain-text authentication  |
|  md5  |  Use MD5 authentication  |
`,
		},

		"network": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `OSPF network

|  Format  |  Description  |
|----------|---------------|
|  ipv4net  |  OSPF network  |
`,
		},

		"shortcut": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Area shortcut mode

|  Format  |  Description  |
|----------|---------------|
|  default  |  Set default  |
|  disable  |  Disable shortcutting mode  |
|  enable  |  Enable shortcutting mode  |
`,
		},

		"export_list": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Set the filter for networks announced to other areas

|  Format  |  Description  |
|----------|---------------|
|  u32  |  Access-list number  |
`,
		},

		"import_list": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Set the filter for networks from other areas announced

|  Format  |  Description  |
|----------|---------------|
|  u32  |  Access-list number  |
`,
		},

		// TagNodes

		"range": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: ProtocolsOspfAreaRange{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Summarize routes matching a prefix (border routers only)

|  Format  |  Description  |
|----------|---------------|
|  ipv4net  |  Area range prefix  |
`,
		},

		"virtual_link": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: ProtocolsOspfAreaVirtualLink{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Virtual link

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  OSPF area in dotted decimal notation  |
`,
		},

		// Nodes

		"area_type": schema.SingleNestedAttribute{
			Attributes: ProtocolsOspfAreaAreaType{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Area type

`,
		},
	}
}
