// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"encoding/json"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// ProtocolsOspfAreaRange describes the resource data model.
type ProtocolsOspfAreaRange struct {
	// LeafNodes
	LeafProtocolsOspfAreaRangeCost         types.String `tfsdk:"cost" json:"cost,omitempty"`
	LeafProtocolsOspfAreaRangeNotAdvertise types.String `tfsdk:"not_advertise" json:"not-advertise,omitempty"`
	LeafProtocolsOspfAreaRangeSubstitute   types.String `tfsdk:"substitute" json:"substitute,omitempty"`

	// TagNodes

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsOspfAreaRange) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"cost": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Metric for this range

|  Format  |  Description  |
|----------|---------------|
|  u32:0-16777215  |  Metric for this range  |

`,
		},

		"not_advertise": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Do not advertise this range

`,
		},

		"substitute": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Advertise area range as another prefix

|  Format  |  Description  |
|----------|---------------|
|  ipv4net  |  Advertise area range as another prefix  |

`,
		},

		// TagNodes

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ProtocolsOspfAreaRange) MarshalJSON() ([]byte, error) {
	jsonData := make(map[string]interface{})

	// Leafs

	if !o.LeafProtocolsOspfAreaRangeCost.IsNull() && !o.LeafProtocolsOspfAreaRangeCost.IsUnknown() {
		jsonData["cost"] = o.LeafProtocolsOspfAreaRangeCost.ValueString()
	}

	if !o.LeafProtocolsOspfAreaRangeNotAdvertise.IsNull() && !o.LeafProtocolsOspfAreaRangeNotAdvertise.IsUnknown() {
		jsonData["not-advertise"] = o.LeafProtocolsOspfAreaRangeNotAdvertise.ValueString()
	}

	if !o.LeafProtocolsOspfAreaRangeSubstitute.IsNull() && !o.LeafProtocolsOspfAreaRangeSubstitute.IsUnknown() {
		jsonData["substitute"] = o.LeafProtocolsOspfAreaRangeSubstitute.ValueString()
	}

	// Tags

	// Nodes

	// Return compiled data
	ret, err := json.Marshal(jsonData)
	if err != nil {
		return nil, err
	}
	return ret, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ProtocolsOspfAreaRange) UnmarshalJSON(jsonStr []byte) error {
	jsonData := make(map[string]interface{})
	err := json.Unmarshal(jsonStr, &jsonData)
	if err != nil {
		return err
	}

	// Leafs

	if value, ok := jsonData["cost"]; ok {
		o.LeafProtocolsOspfAreaRangeCost = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsOspfAreaRangeCost = basetypes.NewStringNull()
	}

	if value, ok := jsonData["not-advertise"]; ok {
		o.LeafProtocolsOspfAreaRangeNotAdvertise = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsOspfAreaRangeNotAdvertise = basetypes.NewStringNull()
	}

	if value, ok := jsonData["substitute"]; ok {
		o.LeafProtocolsOspfAreaRangeSubstitute = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsOspfAreaRangeSubstitute = basetypes.NewStringNull()
	}

	// Tags

	// Nodes

	return nil
}
