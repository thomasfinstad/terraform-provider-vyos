// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// ProtocolsOspfSegmentRoutingPrefix describes the resource data model.
type ProtocolsOspfSegmentRoutingPrefix struct {
	ID types.String `tfsdk:"id" vyos:"_,tfsdk-id"`

	SelfIdentifier types.String `tfsdk:"prefix_id" vyos:",self-id"`

	// LeafNodes

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
	NodeProtocolsOspfSegmentRoutingPrefixIndex *ProtocolsOspfSegmentRoutingPrefixIndex `tfsdk:"index" vyos:"index,omitempty"`
}

// GetID returns the resource ID
func (o ProtocolsOspfSegmentRoutingPrefix) GetID() *types.String {
	return &o.ID
}

// SetID configures the resource ID
func (o ProtocolsOspfSegmentRoutingPrefix) SetID(id types.String) {
	o.ID = id
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ProtocolsOspfSegmentRoutingPrefix) GetVyosPath() []string {
	return []string{
		"protocols",

		"ospf",

		"segment-routing",

		"prefix",
		o.SelfIdentifier.ValueString(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsOspfSegmentRoutingPrefix) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},
		"prefix_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Static IPv4 prefix segment/label mapping

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv4net  &emsp; |  IPv4 prefix segment  |

`,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},

		// LeafNodes

		// Nodes

		"index": schema.SingleNestedAttribute{
			Attributes: ProtocolsOspfSegmentRoutingPrefixIndex{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Specify the index value of prefix segment/label ID

`,
		},
	}
}
