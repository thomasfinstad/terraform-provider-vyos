// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// ProtocolsRIPInterfaceAuthenticationMdfive describes the resource data model.
type ProtocolsRIPInterfaceAuthenticationMdfive struct {
	SelfIdentifier types.Number `tfsdk:"md5_id" vyos:",self-id"`

	ParentIDProtocolsRIPInterface types.String `tfsdk:"interface" vyos:"interface,parent-id"`

	// LeafNodes
	LeafProtocolsRIPInterfaceAuthenticationMdfivePassword types.String `tfsdk:"password" vyos:"password,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ProtocolsRIPInterfaceAuthenticationMdfive) GetVyosPath() []string {
	return []string{
		"protocols",

		"rip",

		"interface",
		o.ParentIDProtocolsRIPInterface.ValueString(),

		"authentication",

		"md5",
		o.SelfIdentifier.ValueBigFloat().String(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsRIPInterfaceAuthenticationMdfive) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, an amalgamation of the `md5_id` and the parents `*_id` fields seperated by dunder `__` starting with top level ancestor.",
		},
		"md5_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `MD5 key id

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-255  &emsp; |  OSPF key id  |

`,
		},

		"interface_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Interface name

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Interface name  |

`,
		},

		// LeafNodes

		"password": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Authentication password

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  MD5 Key (16 characters or less)  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ProtocolsRIPInterfaceAuthenticationMdfive) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ProtocolsRIPInterfaceAuthenticationMdfive) UnmarshalJSON(_ []byte) error {
	return nil
}
