// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"encoding/json"
	"reflect"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// ProtocolsBgpPeerGroupLocalAs describes the resource data model.
type ProtocolsBgpPeerGroupLocalAs struct {
	ID types.String `tfsdk:"identifier" vyos:",self-id"`

	ParentIDProtocolsBgpPeerGroup any `tfsdk:"peer_group" vyos:"peer-group,parent-id"`

	// LeafNodes

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
	NodeProtocolsBgpPeerGroupLocalAsNoPrepend *ProtocolsBgpPeerGroupLocalAsNoPrepend `tfsdk:"no_prepend" vyos:"no-prepend,omitempty"`
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ProtocolsBgpPeerGroupLocalAs) GetVyosPath() []string {
	return []string{
		"protocols",
		"bgp",
		"peer-group",
		"local-as",
		o.ID.ValueString(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsBgpPeerGroupLocalAs) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"identifier": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Specify alternate ASN for this BGP process

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-4294967294  |  Autonomous System Number (ASN)  |

`,
		},

		// LeafNodes

		// Nodes

		"no_prepend": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpPeerGroupLocalAsNoPrepend{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Disable prepending local-as from/to updates for eBGP peers

`,
		},
	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ProtocolsBgpPeerGroupLocalAs) MarshalJSON() ([]byte, error) {
	jsonData := make(map[string]interface{})

	// Leafs

	// Nodes

	if !reflect.ValueOf(o.NodeProtocolsBgpPeerGroupLocalAsNoPrepend).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpPeerGroupLocalAsNoPrepend)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["no-prepend"] = subData
	}

	// Return compiled data
	ret, err := json.Marshal(jsonData)
	if err != nil {
		return nil, err
	}
	return ret, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ProtocolsBgpPeerGroupLocalAs) UnmarshalJSON(jsonStr []byte) error {
	jsonData := make(map[string]interface{})
	err := json.Unmarshal(jsonStr, &jsonData)
	if err != nil {
		return err
	}

	// Leafs

	// Nodes
	if value, ok := jsonData["no-prepend"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpPeerGroupLocalAsNoPrepend = &ProtocolsBgpPeerGroupLocalAsNoPrepend{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpPeerGroupLocalAsNoPrepend)
		if err != nil {
			return err
		}
	}

	return nil
}
