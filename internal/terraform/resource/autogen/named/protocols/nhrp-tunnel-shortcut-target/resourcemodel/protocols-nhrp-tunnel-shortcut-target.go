// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// ProtocolsNhrpTunnelShortcutTarget describes the resource data model.
type ProtocolsNhrpTunnelShortcutTarget struct {
	SelfIdentifier types.String `tfsdk:"shortcut_target_id" vyos:",self-id"`

	ParentIDProtocolsNhrpTunnel types.String `tfsdk:"tunnel" vyos:"tunnel,parent-id"`

	// LeafNodes
	LeafProtocolsNhrpTunnelShortcutTargetHoldingTime types.String `tfsdk:"holding_time" vyos:"holding-time,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ProtocolsNhrpTunnelShortcutTarget) GetVyosPath() []string {
	return []string{
		"protocols",

		"nhrp",

		"tunnel",
		o.ParentIDProtocolsNhrpTunnel.ValueString(),

		"shortcut-target",
		o.SelfIdentifier.ValueString(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsNhrpTunnelShortcutTarget) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"shortcut_target_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Defines an off-NBMA network prefix for which the GRE interface will act as a gateway

`,
		},

		"tunnel_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Tunnel for NHRP

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  tunN  &emsp; |  NHRP tunnel name  |

`,
		},

		// LeafNodes

		"holding_time": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Holding time in seconds

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ProtocolsNhrpTunnelShortcutTarget) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ProtocolsNhrpTunnelShortcutTarget) UnmarshalJSON(_ []byte) error {
	return nil
}
