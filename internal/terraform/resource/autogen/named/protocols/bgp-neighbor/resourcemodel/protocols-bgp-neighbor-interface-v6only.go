// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"encoding/json"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// ProtocolsBgpNeighborInterfaceVsixonly describes the resource data model.
type ProtocolsBgpNeighborInterfaceVsixonly struct {
	// LeafNodes
	LeafProtocolsBgpNeighborInterfaceVsixonlyPeerGroup types.String `tfsdk:"peer_group" vyos:"peer-group,omitempty"`
	LeafProtocolsBgpNeighborInterfaceVsixonlyRemoteAs  types.String `tfsdk:"remote_as" vyos:"remote-as,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsBgpNeighborInterfaceVsixonly) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"peer_group": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Peer group for this peer

    |  Format  |  Description  |
    |----------|---------------|
    |  txt  |  Peer-group name  |

`,
		},

		"remote_as": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Neighbor BGP AS number

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-4294967294  |  Neighbor AS number  |
    |  external  |  Any AS different from the local AS  |
    |  internal  |  Neighbor AS number  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ProtocolsBgpNeighborInterfaceVsixonly) MarshalJSON() ([]byte, error) {
	jsonData := make(map[string]interface{})

	// Leafs

	if !o.LeafProtocolsBgpNeighborInterfaceVsixonlyPeerGroup.IsNull() && !o.LeafProtocolsBgpNeighborInterfaceVsixonlyPeerGroup.IsUnknown() {
		jsonData["peer-group"] = o.LeafProtocolsBgpNeighborInterfaceVsixonlyPeerGroup.ValueString()
	}

	if !o.LeafProtocolsBgpNeighborInterfaceVsixonlyRemoteAs.IsNull() && !o.LeafProtocolsBgpNeighborInterfaceVsixonlyRemoteAs.IsUnknown() {
		jsonData["remote-as"] = o.LeafProtocolsBgpNeighborInterfaceVsixonlyRemoteAs.ValueString()
	}

	// Nodes

	// Return compiled data
	ret, err := json.Marshal(jsonData)
	if err != nil {
		return nil, err
	}
	return ret, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ProtocolsBgpNeighborInterfaceVsixonly) UnmarshalJSON(jsonStr []byte) error {
	jsonData := make(map[string]interface{})
	err := json.Unmarshal(jsonStr, &jsonData)
	if err != nil {
		return err
	}

	// Leafs

	if value, ok := jsonData["peer-group"]; ok {
		o.LeafProtocolsBgpNeighborInterfaceVsixonlyPeerGroup = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborInterfaceVsixonlyPeerGroup = basetypes.NewStringNull()
	}

	if value, ok := jsonData["remote-as"]; ok {
		o.LeafProtocolsBgpNeighborInterfaceVsixonlyRemoteAs = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborInterfaceVsixonlyRemoteAs = basetypes.NewStringNull()
	}

	// Nodes

	return nil
}
