// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// ProtocolsFailoverRouteNextHopCheck describes the resource data model.
type ProtocolsFailoverRouteNextHopCheck struct {
	// LeafNodes
	LeafProtocolsFailoverRouteNextHopCheckPort    types.Number `tfsdk:"port" vyos:"port,omitempty"`
	LeafProtocolsFailoverRouteNextHopCheckTarget  types.String `tfsdk:"target" vyos:"target,omitempty"`
	LeafProtocolsFailoverRouteNextHopCheckTimeout types.Number `tfsdk:"timeout" vyos:"timeout,omitempty"`
	LeafProtocolsFailoverRouteNextHopCheckType    types.String `tfsdk:"type" vyos:"type,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsFailoverRouteNextHopCheck) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"port": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Port number used by connection

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-65535  &emsp; |  Numeric IP port  |

`,
		},

		"target": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Check target address

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv4  &emsp; |  Address to check  |

`,
		},

		"timeout": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Timeout between checks

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-300  &emsp; |  Timeout in seconds between checks  |

`,

			// Default:          stringdefault.StaticString(`10`),
			Computed: true,
		},

		"type": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Check type

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  arp  &emsp; |  Check target by ARP  |
    |  icmp  &emsp; |  Check target by ICMP  |
    |  tcp  &emsp; |  Check target by TCP  |

`,

			// Default:          stringdefault.StaticString(`icmp`),
			Computed: true,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ProtocolsFailoverRouteNextHopCheck) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ProtocolsFailoverRouteNextHopCheck) UnmarshalJSON(_ []byte) error {
	return nil
}
