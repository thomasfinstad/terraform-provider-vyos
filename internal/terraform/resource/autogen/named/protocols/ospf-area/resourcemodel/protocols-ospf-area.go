// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// ProtocolsOspfArea describes the resource data model.
type ProtocolsOspfArea struct {
	SelfIdentifier types.String `tfsdk:"area_id" vyos:",self-id"`

	// LeafNodes
	LeafProtocolsOspfAreaAuthentication types.String `tfsdk:"authentication" vyos:"authentication,omitempty"`
	LeafProtocolsOspfAreaNetwork        types.List   `tfsdk:"network" vyos:"network,omitempty"`
	LeafProtocolsOspfAreaShortcut       types.String `tfsdk:"shortcut" vyos:"shortcut,omitempty"`
	LeafProtocolsOspfAreaExportList     types.Number `tfsdk:"export_list" vyos:"export-list,omitempty"`
	LeafProtocolsOspfAreaImportList     types.Number `tfsdk:"import_list" vyos:"import-list,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	ExistsTagProtocolsOspfAreaRange       bool `tfsdk:"range" vyos:"range,child"`
	ExistsTagProtocolsOspfAreaVirtualLink bool `tfsdk:"virtual_link" vyos:"virtual-link,child"`

	// Nodes
	NodeProtocolsOspfAreaAreaType *ProtocolsOspfAreaAreaType `tfsdk:"area_type" vyos:"area-type,omitempty"`
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ProtocolsOspfArea) GetVyosPath() []string {
	return []string{
		"protocols",

		"ospf",

		"area",
		o.SelfIdentifier.ValueString(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsOspfArea) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, an amalgamation of the `area_id` and the parents `*_id` fields seperated by dunder `__` starting with top level ancestor.",
		},
		"area_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `OSPF area settings

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  u32  &emsp; |  OSPF area number in decimal notation  |
    |  ipv4  &emsp; |  OSPF area number in dotted decimal notation  |

`,
		},

		// LeafNodes

		"authentication": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `OSPF area authentication type

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  plaintext-password  &emsp; |  Use plain-text authentication  |
    |  md5  &emsp; |  Use MD5 authentication  |

`,
		},

		"network": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `OSPF network

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv4net  &emsp; |  OSPF network  |

`,
		},

		"shortcut": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Area shortcut mode

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  default  &emsp; |  Set default  |
    |  disable  &emsp; |  Disable shortcutting mode  |
    |  enable  &emsp; |  Enable shortcutting mode  |

`,
		},

		"export_list": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Set the filter for networks announced to other areas

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  u32  &emsp; |  Access-list number  |

`,
		},

		"import_list": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Set the filter for networks from other areas announced

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  u32  &emsp; |  Access-list number  |

`,
		},

		// Nodes

		"area_type": schema.SingleNestedAttribute{
			Attributes: ProtocolsOspfAreaAreaType{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Area type

`,
		},
	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ProtocolsOspfArea) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ProtocolsOspfArea) UnmarshalJSON(_ []byte) error {
	return nil
}
