// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// LoadBalancingWanRule describes the resource data model.
type LoadBalancingWanRule struct {
	ID types.Number `tfsdk:"identifier" vyos:",self-id"`

	// LeafNodes
	LeafLoadBalancingWanRuleDescrIPtion        types.String `tfsdk:"description" vyos:"description,omitempty"`
	LeafLoadBalancingWanRuleExclude            types.Bool   `tfsdk:"exclude" vyos:"exclude,omitempty"`
	LeafLoadBalancingWanRuleFailover           types.Bool   `tfsdk:"failover" vyos:"failover,omitempty"`
	LeafLoadBalancingWanRuleInboundInterface   types.String `tfsdk:"inbound_interface" vyos:"inbound-interface,omitempty"`
	LeafLoadBalancingWanRulePerPacketBalancing types.Bool   `tfsdk:"per_packet_balancing" vyos:"per-packet-balancing,omitempty"`
	LeafLoadBalancingWanRuleProtocol           types.String `tfsdk:"protocol" vyos:"protocol,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	ExistsTagLoadBalancingWanRuleInterface bool `tfsdk:"interface" vyos:"interface,child"`

	// Nodes
	NodeLoadBalancingWanRuleDestination *LoadBalancingWanRuleDestination `tfsdk:"destination" vyos:"destination,omitempty"`
	NodeLoadBalancingWanRuleLimit       *LoadBalancingWanRuleLimit       `tfsdk:"limit" vyos:"limit,omitempty"`
	NodeLoadBalancingWanRuleSource      *LoadBalancingWanRuleSource      `tfsdk:"source" vyos:"source,omitempty"`
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *LoadBalancingWanRule) GetVyosPath() []string {
	return []string{
		"load-balancing",

		"wan",

		"rule",
		o.ID.ValueBigFloat().String(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o LoadBalancingWanRule) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"identifier": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Rule number (1-9999)

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-9999  |  Rule number  |

`,
		},

		// LeafNodes

		"description": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Description for this rule

    |  Format  |  Description  |
    |----------|---------------|
    |  txt  |  Description for this rule  |

`,
		},

		"exclude": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Exclude packets matching this rule from WAN load balance

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"failover": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Enable failover for packets matching this rule from WAN load balance

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"inbound_interface": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Inbound interface name (e.g., "eth0") [REQUIRED]

`,
		},

		"per_packet_balancing": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Option to match traffic per-packet instead of the default, per-flow

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"protocol": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Protocol to match (protocol name, number, or "all")

    |  Format  |  Description  |
    |----------|---------------|
    |  all  |  All IP protocols  |
    |  tcp_udp  |  Both TCP and UDP  |
    |  u32:0-255  |  IP protocol number  |
    |  <protocol>  |  IP protocol name  |
    |  !<protocol>  |  IP protocol name  |

`,
		},

		// Nodes

		"destination": schema.SingleNestedAttribute{
			Attributes: LoadBalancingWanRuleDestination{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Destination

`,
		},

		"limit": schema.SingleNestedAttribute{
			Attributes: LoadBalancingWanRuleLimit{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Enable packet limit for this rule

`,
		},

		"source": schema.SingleNestedAttribute{
			Attributes: LoadBalancingWanRuleSource{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Source information

`,
		},
	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *LoadBalancingWanRule) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *LoadBalancingWanRule) UnmarshalJSON(_ []byte) error {
	return nil
}
