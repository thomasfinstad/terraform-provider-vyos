// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// LoadBalancingWanRuleLimit describes the resource data model.
type LoadBalancingWanRuleLimit struct {
	// LeafNodes
	LeafLoadBalancingWanRuleLimitBurst     types.Number `tfsdk:"burst" vyos:"burst,omitempty"`
	LeafLoadBalancingWanRuleLimitPeriod    types.String `tfsdk:"period" vyos:"period,omitempty"`
	LeafLoadBalancingWanRuleLimitRate      types.Number `tfsdk:"rate" vyos:"rate,omitempty"`
	LeafLoadBalancingWanRuleLimitThreshold types.String `tfsdk:"threshold" vyos:"threshold,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o LoadBalancingWanRuleLimit) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"burst": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Burst limit for matching packets

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-4294967295  &emsp; |  Burst limit for matching packets  |

`,
		},

		"period": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Time window for rate calculation

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  hour  &emsp; |  hour  |
    |  minute  &emsp; |  minute  |
    |  second  &emsp; |  second  |

`,
		},

		"rate": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Number of packets used for rate limit

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-4294967295  &emsp; |  Number of packets used for rate limit  |

`,
		},

		"threshold": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Threshold behavior for limit

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  above  &emsp; |  Above limit  |
    |  below  &emsp; |  Below limit  |

`,
		},

		// Nodes

	}
}
