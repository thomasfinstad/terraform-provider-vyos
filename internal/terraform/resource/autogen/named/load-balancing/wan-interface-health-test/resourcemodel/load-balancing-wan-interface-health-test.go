// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// LoadBalancingWanInterfaceHealthTest describes the resource data model.
type LoadBalancingWanInterfaceHealthTest struct {
	ID types.Number `tfsdk:"identifier" vyos:",self-id"`

	ParentIDLoadBalancingWanInterfaceHealth types.String `tfsdk:"interface_health" vyos:"interface-health_identifier,parent-id"`

	// LeafNodes
	LeafLoadBalancingWanInterfaceHealthTestRespTime   types.Number `tfsdk:"resp_time" vyos:"resp-time,omitempty"`
	LeafLoadBalancingWanInterfaceHealthTestTarget     types.String `tfsdk:"target" vyos:"target,omitempty"`
	LeafLoadBalancingWanInterfaceHealthTestTestScrIPt types.String `tfsdk:"test_script" vyos:"test-script,omitempty"`
	LeafLoadBalancingWanInterfaceHealthTestTTLLimit   types.Number `tfsdk:"ttl_limit" vyos:"ttl-limit,omitempty"`
	LeafLoadBalancingWanInterfaceHealthTestType       types.String `tfsdk:"type" vyos:"type,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *LoadBalancingWanInterfaceHealthTest) GetVyosPath() []string {
	return []string{
		"load-balancing",

		"wan",

		"interface-health",
		o.ParentIDLoadBalancingWanInterfaceHealth.ValueString(),

		"test",
		o.ID.ValueBigFloat().String(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o LoadBalancingWanInterfaceHealthTest) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"identifier": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Rule number

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:0-4294967295  |  Rule number  |

`,
		},

		"interface_health_identifier": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Interface name

`,
		},

		// LeafNodes

		"resp_time": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Ping response time (seconds)

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-30  |  Response time (seconds)  |

`,
		},

		"target": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Health target address

    |  Format  |  Description  |
    |----------|---------------|
    |  ipv4  |  Health target address  |

`,
		},

		"test_script": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Path to user-defined script

    |  Format  |  Description  |
    |----------|---------------|
    |  txt  |  Script in /config/scripts  |

`,
		},

		"ttl_limit": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `TTL limit (hop count)

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-254  |  Number of hops  |

`,
		},

		"type": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `WLB test type

    |  Format  |  Description  |
    |----------|---------------|
    |  ping  |  Test with ICMP echo response  |
    |  ttl  |  Test with UDP TTL expired response  |
    |  user-defined  |  User-defined test script  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *LoadBalancingWanInterfaceHealthTest) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *LoadBalancingWanInterfaceHealthTest) UnmarshalJSON(_ []byte) error {
	return nil
}
