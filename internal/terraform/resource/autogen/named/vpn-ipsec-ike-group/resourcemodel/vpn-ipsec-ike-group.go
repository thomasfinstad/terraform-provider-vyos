// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// VpnIPsecIkeGroup describes the resource data model.
type VpnIPsecIkeGroup struct {
	// LeafNodes
	VpnIPsecIkeGroupCloseAction   customtypes.CustomStringValue `tfsdk:"close_action" json:"close-action,omitempty"`
	VpnIPsecIkeGroupIkevtwoReauth customtypes.CustomStringValue `tfsdk:"ikev2_reauth" json:"ikev2-reauth,omitempty"`
	VpnIPsecIkeGroupKeyExchange   customtypes.CustomStringValue `tfsdk:"key_exchange" json:"key-exchange,omitempty"`
	VpnIPsecIkeGroupLifetime      customtypes.CustomStringValue `tfsdk:"lifetime" json:"lifetime,omitempty"`
	VpnIPsecIkeGroupDisableMobike customtypes.CustomStringValue `tfsdk:"disable_mobike" json:"disable-mobike,omitempty"`
	VpnIPsecIkeGroupMode          customtypes.CustomStringValue `tfsdk:"mode" json:"mode,omitempty"`

	// TagNodes
	VpnIPsecIkeGroupProposal types.Map `tfsdk:"proposal" json:"proposal,omitempty"`

	// Nodes
	VpnIPsecIkeGroupDeadPeerDetection types.Object `tfsdk:"dead_peer_detection" json:"dead-peer-detection,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o VpnIPsecIkeGroup) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"close_action": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Action to take if a child SA is unexpectedly closed

|  Format  |  Description  |
|----------|---------------|
|  none  |  Do nothing  |
|  hold  |  Attempt to re-negotiate when matching traffic is seen  |
|  restart  |  Attempt to re-negotiate the connection immediately  |
`,

			// Default:          stringdefault.StaticString(`none`),
			Computed: true,
		},

		"ikev2_reauth": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Re-authentication of the remote peer during an IKE re-key (IKEv2 only)

`,
		},

		"key_exchange": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IKE version

|  Format  |  Description  |
|----------|---------------|
|  ikev1  |  Use IKEv1 for key exchange  |
|  ikev2  |  Use IKEv2 for key exchange  |
`,
		},

		"lifetime": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IKE lifetime

|  Format  |  Description  |
|----------|---------------|
|  u32:30-86400  |  IKE lifetime in seconds  |
`,

			// Default:          stringdefault.StaticString(`28800`),
			Computed: true,
		},

		"disable_mobike": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Disable MOBIKE Support (IKEv2 only)

`,
		},

		"mode": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IKEv1 phase 1 mode

|  Format  |  Description  |
|----------|---------------|
|  main  |  Use the main mode (recommended)  |
|  aggressive  |  Use the aggressive mode (insecure, not recommended)  |
`,

			// Default:          stringdefault.StaticString(`main`),
			Computed: true,
		},

		// TagNodes

		"proposal": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: VpnIPsecIkeGroupProposal{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `IKE proposal

|  Format  |  Description  |
|----------|---------------|
|  u32:1-65535  |  IKE group proposal  |
`,
		},

		// Nodes

		"dead_peer_detection": schema.SingleNestedAttribute{
			Attributes: VpnIPsecIkeGroupDeadPeerDetection{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Dead Peer Detection (DPD)

`,
		},
	}
}
