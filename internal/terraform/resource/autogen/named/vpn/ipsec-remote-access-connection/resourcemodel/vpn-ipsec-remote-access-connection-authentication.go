// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// VpnIPsecRemoteAccessConnectionAuthentication describes the resource data model.
type VpnIPsecRemoteAccessConnectionAuthentication struct {
	// LeafNodes
	LeafVpnIPsecRemoteAccessConnectionAuthenticationLocalID         types.String `tfsdk:"local_id" vyos:"local-id,omitempty"`
	LeafVpnIPsecRemoteAccessConnectionAuthenticationClientMode      types.String `tfsdk:"client_mode" vyos:"client-mode,omitempty"`
	LeafVpnIPsecRemoteAccessConnectionAuthenticationServerMode      types.String `tfsdk:"server_mode" vyos:"server-mode,omitempty"`
	LeafVpnIPsecRemoteAccessConnectionAuthenticationPreSharedSecret types.String `tfsdk:"pre_shared_secret" vyos:"pre-shared-secret,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
	NodeVpnIPsecRemoteAccessConnectionAuthenticationXfivezeronine *VpnIPsecRemoteAccessConnectionAuthenticationXfivezeronine `tfsdk:"x509" vyos:"x509,omitempty"`
	NodeVpnIPsecRemoteAccessConnectionAuthenticationLocalUsers    *VpnIPsecRemoteAccessConnectionAuthenticationLocalUsers    `tfsdk:"local_users" vyos:"local-users,omitempty"`
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VpnIPsecRemoteAccessConnectionAuthentication) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"local_id": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Local ID for peer authentication

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Local ID used for peer authentication  |

`,
		},

		"client_mode": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Client authentication mode

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  eap-tls  &emsp; |  Use EAP-TLS authentication  |
    |  eap-mschapv2  &emsp; |  Use EAP-MSCHAPv2 authentication  |
    |  eap-radius  &emsp; |  Use EAP-RADIUS authentication  |

`,

			// Default:          stringdefault.StaticString(`eap-mschapv2`),
			Computed: true,
		},

		"server_mode": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Server authentication mode

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  pre-shared-secret  &emsp; |  Use a pre-shared secret key  |
    |  x509  &emsp; |  Use x.509 certificate  |

`,

			// Default:          stringdefault.StaticString(`x509`),
			Computed: true,
		},

		"pre_shared_secret": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Pre-shared secret key

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Pre-shared secret key  |

`,
		},

		// Nodes

		"x509": schema.SingleNestedAttribute{
			Attributes: VpnIPsecRemoteAccessConnectionAuthenticationXfivezeronine{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `X.509 certificate

`,
		},

		"local_users": schema.SingleNestedAttribute{
			Attributes: VpnIPsecRemoteAccessConnectionAuthenticationLocalUsers{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Local user authentication

`,
		},
	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *VpnIPsecRemoteAccessConnectionAuthentication) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *VpnIPsecRemoteAccessConnectionAuthentication) UnmarshalJSON(_ []byte) error {
	return nil
}
