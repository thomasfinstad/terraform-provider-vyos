// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// VpnIPsecRemoteAccessConnection describes the resource data model.
type VpnIPsecRemoteAccessConnection struct {
	ID types.String `tfsdk:"id" vyos:"_,tfsdk-id"`

	SelfIdentifier types.String `tfsdk:"connection_id" vyos:",self-id"`

	// LeafNodes
	LeafVpnIPsecRemoteAccessConnectionDescrIPtion  types.String `tfsdk:"description" vyos:"description,omitempty"`
	LeafVpnIPsecRemoteAccessConnectionDisable      types.Bool   `tfsdk:"disable" vyos:"disable,omitempty"`
	LeafVpnIPsecRemoteAccessConnectionEspGroup     types.String `tfsdk:"esp_group" vyos:"esp-group,omitempty"`
	LeafVpnIPsecRemoteAccessConnectionIkeGroup     types.String `tfsdk:"ike_group" vyos:"ike-group,omitempty"`
	LeafVpnIPsecRemoteAccessConnectionLocalAddress types.String `tfsdk:"local_address" vyos:"local-address,omitempty"`
	LeafVpnIPsecRemoteAccessConnectionTimeout      types.Number `tfsdk:"timeout" vyos:"timeout,omitempty"`
	LeafVpnIPsecRemoteAccessConnectionPool         types.List   `tfsdk:"pool" vyos:"pool,omitempty"`
	LeafVpnIPsecRemoteAccessConnectionUnique       types.String `tfsdk:"unique" vyos:"unique,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
	NodeVpnIPsecRemoteAccessConnectionAuthentication *VpnIPsecRemoteAccessConnectionAuthentication `tfsdk:"authentication" vyos:"authentication,omitempty"`
	NodeVpnIPsecRemoteAccessConnectionLocal          *VpnIPsecRemoteAccessConnectionLocal          `tfsdk:"local" vyos:"local,omitempty"`
}

// SetID configures the resource ID
func (o *VpnIPsecRemoteAccessConnection) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *VpnIPsecRemoteAccessConnection) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"vpn",

		"ipsec",

		"remote-access",

		"connection",
		o.SelfIdentifier.ValueString(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VpnIPsecRemoteAccessConnection) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},
		"connection_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `IKEv2 VPN connection name

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Connection name  |

`,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},

		// LeafNodes

		"description": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Description

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Description  |

`,
		},

		"disable": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Disable instance

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"esp_group": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Encapsulating Security Payloads (ESP) group name

`,
		},

		"ike_group": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Internet Key Exchange (IKE) group name

`,
		},

		"local_address": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `IPv4 or IPv6 address of a local interface to use for VPN

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv4  &emsp; |  IPv4 address of a local interface for VPN  |
    |  ipv6  &emsp; |  IPv6 address of a local interface for VPN  |
    |  any  &emsp; |  Allow any IPv4 address present on the system to be used for VPN  |

`,
		},

		"timeout": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Timeout to close connection if no data is transmitted

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0  &emsp; |  Disable inactivity checks  |
    |  number: 1-86400  &emsp; |  Timeout in seconds  |

`,

			// Default:          stringdefault.StaticString(`28800`),
			Computed: true,
		},

		"pool": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `IP address pool

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Predefined IP pool name  |
    |  dhcp  &emsp; |  Forward requests for virtual IP addresses to a DHCP server  |
    |  radius  &emsp; |  Forward requests for virtual IP addresses to a RADIUS server  |

`,
		},

		"unique": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Connection uniqueness enforcement policy

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  never  &emsp; |  Never enforce connection uniqueness  |
    |  keep  &emsp; |  Reject new connection attempts if the same user already has an active connection  |
    |  replace  &emsp; |  Delete any existing connection if a new one for the same user gets established  |

`,
		},

		// Nodes

		"authentication": schema.SingleNestedAttribute{
			Attributes: VpnIPsecRemoteAccessConnectionAuthentication{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Authentication for remote access

`,
		},

		"local": schema.SingleNestedAttribute{
			Attributes: VpnIPsecRemoteAccessConnectionLocal{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Local parameters for interesting traffic

`,
		},
	}
}
