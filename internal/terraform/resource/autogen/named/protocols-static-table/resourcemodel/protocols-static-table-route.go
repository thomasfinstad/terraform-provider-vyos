// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// ProtocolsStaticTableRoute describes the resource data model.
type ProtocolsStaticTableRoute struct {
	// LeafNodes
	ProtocolsStaticTableRouteDhcpInterface customtypes.CustomStringValue `tfsdk:"dhcp_interface" json:"dhcp-interface,omitempty"`
	ProtocolsStaticTableRouteDescrIPtion   customtypes.CustomStringValue `tfsdk:"description" json:"description,omitempty"`

	// TagNodes
	ProtocolsStaticTableRouteInterface types.Map `tfsdk:"interface" json:"interface,omitempty"`
	ProtocolsStaticTableRouteNextHop   types.Map `tfsdk:"next_hop" json:"next-hop,omitempty"`

	// Nodes
	ProtocolsStaticTableRouteBlackhole types.Object `tfsdk:"blackhole" json:"blackhole,omitempty"`
	ProtocolsStaticTableRouteReject    types.Object `tfsdk:"reject" json:"reject,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o ProtocolsStaticTableRoute) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"dhcp_interface": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `DHCP interface supplying next-hop IP address

|  Format  |  Description  |
|----------|---------------|
|  txt  |  DHCP interface name  |
`,
		},

		"description": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Description

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Description  |
`,
		},

		// TagNodes

		"interface": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: ProtocolsStaticTableRouteInterface{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Next-hop IPv4 router interface

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Gateway interface name  |
`,
		},

		"next_hop": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: ProtocolsStaticTableRouteNextHop{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Next-hop IPv4 router address

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  Next-hop router address  |
`,
		},

		// Nodes

		"blackhole": schema.SingleNestedAttribute{
			Attributes: ProtocolsStaticTableRouteBlackhole{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Silently discard pkts when matched

`,
		},

		"reject": schema.SingleNestedAttribute{
			Attributes: ProtocolsStaticTableRouteReject{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Emit an ICMP unreachable when matched

`,
		},
	}
}
