// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// ServiceSnmpVthreeTrapTarget describes the resource data model.
type ServiceSnmpVthreeTrapTarget struct {
	// LeafNodes
	ServiceSnmpVthreeTrapTargetPort     customtypes.CustomStringValue `tfsdk:"port" json:"port,omitempty"`
	ServiceSnmpVthreeTrapTargetProtocol customtypes.CustomStringValue `tfsdk:"protocol" json:"protocol,omitempty"`
	ServiceSnmpVthreeTrapTargetType     customtypes.CustomStringValue `tfsdk:"type" json:"type,omitempty"`
	ServiceSnmpVthreeTrapTargetUser     customtypes.CustomStringValue `tfsdk:"user" json:"user,omitempty"`

	// TagNodes

	// Nodes
	ServiceSnmpVthreeTrapTargetAuth    types.Object `tfsdk:"auth" json:"auth,omitempty"`
	ServiceSnmpVthreeTrapTargetPrivacy types.Object `tfsdk:"privacy" json:"privacy,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o ServiceSnmpVthreeTrapTarget) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"port": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Port number used by connection

|  Format  |  Description  |
|----------|---------------|
|  u32:1-65535  |  Numeric IP port  |

`,

			// Default:          stringdefault.StaticString(`162`),
			Computed: true,
		},

		"protocol": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Protocol to be used (TCP/UDP)

|  Format  |  Description  |
|----------|---------------|
|  udp  |  Listen protocol UDP  |
|  tcp  |  Listen protocol TCP  |

`,

			// Default:          stringdefault.StaticString(`udp`),
			Computed: true,
		},

		"type": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Specifies the type of notification between inform and trap

|  Format  |  Description  |
|----------|---------------|
|  inform  |  Use INFORM  |
|  trap  |  Use TRAP  |

`,

			// Default:          stringdefault.StaticString(`inform`),
			Computed: true,
		},

		"user": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Defines username for authentication

`,
		},

		// TagNodes

		// Nodes

		"auth": schema.SingleNestedAttribute{
			Attributes: ServiceSnmpVthreeTrapTargetAuth{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Defines the privacy

`,
		},

		"privacy": schema.SingleNestedAttribute{
			Attributes: ServiceSnmpVthreeTrapTargetPrivacy{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Defines the privacy

`,
		},
	}
}
