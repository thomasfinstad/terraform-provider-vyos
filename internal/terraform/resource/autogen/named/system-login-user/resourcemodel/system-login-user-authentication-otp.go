// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// SystemLoginUserAuthenticationOtp describes the resource data model.
type SystemLoginUserAuthenticationOtp struct {
	// LeafNodes
	SystemLoginUserAuthenticationOtpRateLimit  customtypes.CustomStringValue `tfsdk:"rate_limit" json:"rate-limit,omitempty"`
	SystemLoginUserAuthenticationOtpRateTime   customtypes.CustomStringValue `tfsdk:"rate_time" json:"rate-time,omitempty"`
	SystemLoginUserAuthenticationOtpWindowSize customtypes.CustomStringValue `tfsdk:"window_size" json:"window-size,omitempty"`
	SystemLoginUserAuthenticationOtpKey        customtypes.CustomStringValue `tfsdk:"key" json:"key,omitempty"`

	// TagNodes

	// Nodes
}

// ResourceAttributes generates the attributes for the resource at this level
func (o SystemLoginUserAuthenticationOtp) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"rate_limit": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Limit number of logins (rate-limit) per rate-time

|  Format  |  Description  |
|----------|---------------|
|  u32:1-10  |  Number of attempts  |
`,

			// Default:          stringdefault.StaticString(`3`),
			Computed: true,
		},

		"rate_time": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Limit number of logins (rate-limit) per rate-time

|  Format  |  Description  |
|----------|---------------|
|  u32:15-600  |  Time interval  |
`,

			// Default:          stringdefault.StaticString(`30`),
			Computed: true,
		},

		"window_size": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Set window of concurrently valid codes

|  Format  |  Description  |
|----------|---------------|
|  u32:1-21  |  Window size  |
`,

			// Default:          stringdefault.StaticString(`3`),
			Computed: true,
		},

		"key": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Key/secret the token algorithm (see RFC4226)

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Base32 encoded key/token  |
`,
		},

		// TagNodes

		// Nodes

	}
}
