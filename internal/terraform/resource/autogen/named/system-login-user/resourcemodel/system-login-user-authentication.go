// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// SystemLoginUserAuthentication describes the resource data model.
type SystemLoginUserAuthentication struct {
	// LeafNodes
	SystemLoginUserAuthenticationEncryptedPassword customtypes.CustomStringValue `tfsdk:"encrypted_password" json:"encrypted-password,omitempty"`
	SystemLoginUserAuthenticationPlaintextPassword customtypes.CustomStringValue `tfsdk:"plaintext_password" json:"plaintext-password,omitempty"`

	// TagNodes
	SystemLoginUserAuthenticationPublicKeys types.Map `tfsdk:"public_keys" json:"public-keys,omitempty"`

	// Nodes
	SystemLoginUserAuthenticationOtp types.Object `tfsdk:"otp" json:"otp,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o SystemLoginUserAuthentication) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"encrypted_password": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Encrypted password

`,

			// Default:          stringdefault.StaticString(`!`),
			Computed: true,
		},

		"plaintext_password": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Plaintext password used for encryption

`,
		},

		// TagNodes

		"public_keys": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: SystemLoginUserAuthenticationPublicKeys{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Remote access public keys

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Key identifier used by ssh-keygen (usually of form user@host)  |
`,
		},

		// Nodes

		"otp": schema.SingleNestedAttribute{
			Attributes: SystemLoginUserAuthenticationOtp{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `One-Time-Pad (two-factor) authentication parameters

`,
		},
	}
}
