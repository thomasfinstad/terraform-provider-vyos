// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// VrfNameProtocolsBgp describes the resource data model.
type VrfNameProtocolsBgp struct {
	// LeafNodes
	VrfNameProtocolsBgpSystemAs customtypes.CustomStringValue `tfsdk:"system_as" json:"system-as,omitempty"`
	VrfNameProtocolsBgpRouteMap customtypes.CustomStringValue `tfsdk:"route_map" json:"route-map,omitempty"`

	// TagNodes
	VrfNameProtocolsBgpNeighbor  types.Map `tfsdk:"neighbor" json:"neighbor,omitempty"`
	VrfNameProtocolsBgpPeerGroup types.Map `tfsdk:"peer_group" json:"peer-group,omitempty"`

	// Nodes
	VrfNameProtocolsBgpAddressFamily types.Object `tfsdk:"address_family" json:"address-family,omitempty"`
	VrfNameProtocolsBgpListen        types.Object `tfsdk:"listen" json:"listen,omitempty"`
	VrfNameProtocolsBgpParameters    types.Object `tfsdk:"parameters" json:"parameters,omitempty"`
	VrfNameProtocolsBgpTimers        types.Object `tfsdk:"timers" json:"timers,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o VrfNameProtocolsBgp) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"system_as": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Autonomous System Number (ASN)

|  Format  |  Description  |
|----------|---------------|
|  u32:1-4294967294  |  Autonomous System Number  |
`,
		},

		"route_map": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Specify route-map name to use

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Route map name  |
`,
		},

		// TagNodes

		"neighbor": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: VrfNameProtocolsBgpNeighbor{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `BGP neighbor

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  BGP neighbor IP address  |
|  ipv6  |  BGP neighbor IPv6 address  |
|  txt  |  Interface name  |
`,
		},

		"peer_group": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: VrfNameProtocolsBgpPeerGroup{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Name of peer-group

`,
		},

		// Nodes

		"address_family": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamily{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `BGP address-family parameters

`,
		},

		"listen": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpListen{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Listen for and accept BGP dynamic neighbors from range

`,
		},

		"parameters": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpParameters{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `BGP parameters

`,
		},

		"timers": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpTimers{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `BGP protocol timers

`,
		},
	}
}
