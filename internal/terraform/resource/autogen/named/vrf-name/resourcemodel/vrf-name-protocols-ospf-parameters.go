// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// VrfNameProtocolsOspfParameters describes the resource data model.
type VrfNameProtocolsOspfParameters struct {
	// LeafNodes
	VrfNameProtocolsOspfParametersAbrType                           customtypes.CustomStringValue `tfsdk:"abr_type" json:"abr-type,omitempty"`
	VrfNameProtocolsOspfParametersOpaqueLsa                         customtypes.CustomStringValue `tfsdk:"opaque_lsa" json:"opaque-lsa,omitempty"`
	VrfNameProtocolsOspfParametersRfconefiveeightthreeCompatibility customtypes.CustomStringValue `tfsdk:"rfc1583_compatibility" json:"rfc1583-compatibility,omitempty"`
	VrfNameProtocolsOspfParametersRouterID                          customtypes.CustomStringValue `tfsdk:"router_id" json:"router-id,omitempty"`

	// TagNodes

	// Nodes
}

// ResourceAttributes generates the attributes for the resource at this level
func (o VrfNameProtocolsOspfParameters) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"abr_type": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `OSPF ABR type

|  Format  |  Description  |
|----------|---------------|
|  cisco  |  Cisco ABR type  |
|  ibm  |  IBM ABR type  |
|  shortcut  |  Shortcut ABR type  |
|  standard  |  Standard ABR type  |

`,

			// Default:          stringdefault.StaticString(`cisco`),
			Computed: true,
		},

		"opaque_lsa": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Enable the Opaque-LSA capability (rfc2370)

`,
		},

		"rfc1583_compatibility": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Enable RFC1583 criteria for handling AS external routes

`,
		},

		"router_id": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Override default router identifier

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  Router-ID in IP address format  |

`,
		},

		// TagNodes

		// Nodes

	}
}
