// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// VrfNameProtocolsOspf describes the resource data model.
type VrfNameProtocolsOspf struct {
	// LeafNodes
	VrfNameProtocolsOspfDefaultMetric    customtypes.CustomStringValue `tfsdk:"default_metric" json:"default-metric,omitempty"`
	VrfNameProtocolsOspfMaximumPaths     customtypes.CustomStringValue `tfsdk:"maximum_paths" json:"maximum-paths,omitempty"`
	VrfNameProtocolsOspfPassiveInterface customtypes.CustomStringValue `tfsdk:"passive_interface" json:"passive-interface,omitempty"`
	VrfNameProtocolsOspfRouteMap         customtypes.CustomStringValue `tfsdk:"route_map" json:"route-map,omitempty"`

	// TagNodes
	VrfNameProtocolsOspfAccessList types.Map `tfsdk:"access_list" json:"access-list,omitempty"`
	VrfNameProtocolsOspfArea       types.Map `tfsdk:"area" json:"area,omitempty"`
	VrfNameProtocolsOspfInterface  types.Map `tfsdk:"interface" json:"interface,omitempty"`
	VrfNameProtocolsOspfNeighbor   types.Map `tfsdk:"neighbor" json:"neighbor,omitempty"`

	// Nodes
	VrfNameProtocolsOspfAutoCost            types.Object `tfsdk:"auto_cost" json:"auto-cost,omitempty"`
	VrfNameProtocolsOspfDefaultInformation  types.Object `tfsdk:"default_information" json:"default-information,omitempty"`
	VrfNameProtocolsOspfDistance            types.Object `tfsdk:"distance" json:"distance,omitempty"`
	VrfNameProtocolsOspfLogAdjacencyChanges types.Object `tfsdk:"log_adjacency_changes" json:"log-adjacency-changes,omitempty"`
	VrfNameProtocolsOspfMaxMetric           types.Object `tfsdk:"max_metric" json:"max-metric,omitempty"`
	VrfNameProtocolsOspfMplsTe              types.Object `tfsdk:"mpls_te" json:"mpls-te,omitempty"`
	VrfNameProtocolsOspfParameters          types.Object `tfsdk:"parameters" json:"parameters,omitempty"`
	VrfNameProtocolsOspfSegmentRouting      types.Object `tfsdk:"segment_routing" json:"segment-routing,omitempty"`
	VrfNameProtocolsOspfRedistribute        types.Object `tfsdk:"redistribute" json:"redistribute,omitempty"`
	VrfNameProtocolsOspfRefresh             types.Object `tfsdk:"refresh" json:"refresh,omitempty"`
	VrfNameProtocolsOspfTimers              types.Object `tfsdk:"timers" json:"timers,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o VrfNameProtocolsOspf) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"default_metric": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Metric of redistributed routes

|  Format  |  Description  |
|----------|---------------|
|  u32:0-16777214  |  Metric of redistributed routes  |

`,
		},

		"maximum_paths": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Maximum multiple paths (ECMP)

|  Format  |  Description  |
|----------|---------------|
|  u32:1-64  |  Maximum multiple paths (ECMP)  |

`,
		},

		"passive_interface": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Suppress routing updates on an interface

|  Format  |  Description  |
|----------|---------------|
|  default  |  Default to suppress routing updates on all interfaces  |

`,
		},

		"route_map": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Specify route-map name to use

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Route map name  |

`,
		},

		// TagNodes

		"access_list": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: VrfNameProtocolsOspfAccessList{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Access list to filter networks in routing updates

|  Format  |  Description  |
|----------|---------------|
|  u32  |  Access-list number  |

`,
		},

		"area": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: VrfNameProtocolsOspfArea{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `OSPF area settings

|  Format  |  Description  |
|----------|---------------|
|  u32  |  OSPF area number in decimal notation  |
|  ipv4  |  OSPF area number in dotted decimal notation  |

`,
		},

		"interface": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: VrfNameProtocolsOspfInterface{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Interface configuration

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Interface name  |

`,
		},

		"neighbor": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: VrfNameProtocolsOspfNeighbor{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Specify neighbor router

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  Neighbor IP address  |

`,
		},

		// Nodes

		"auto_cost": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsOspfAutoCost{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Calculate interface cost according to bandwidth

`,
		},

		"default_information": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsOspfDefaultInformation{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Default route advertisment settings

`,
		},

		"distance": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsOspfDistance{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Administrative distance

`,
		},

		"log_adjacency_changes": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsOspfLogAdjacencyChanges{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Log adjacency state changes

`,
		},

		"max_metric": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsOspfMaxMetric{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `OSPF maximum and infinite-distance metric

`,
		},

		"mpls_te": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsOspfMplsTe{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `MultiProtocol Label Switching-Traffic Engineering (MPLS-TE) parameters

`,
		},

		"parameters": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsOspfParameters{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `OSPF specific parameters

`,
		},

		"segment_routing": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsOspfSegmentRouting{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Segment-Routing (SPRING) settings

`,
		},

		"redistribute": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsOspfRedistribute{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Redistribute information from another routing protocol

`,
		},

		"refresh": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsOspfRefresh{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Adjust refresh parameters

`,
		},

		"timers": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsOspfTimers{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Adjust routing timers

`,
		},
	}
}
