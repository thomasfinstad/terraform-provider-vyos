// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"encoding/json"
	"reflect"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// VrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistance describes the resource data model.
type VrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistance struct {
	// LeafNodes
	LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceExternal types.String `tfsdk:"external" json:"external,omitempty"`
	LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceInternal types.String `tfsdk:"internal" json:"internal,omitempty"`
	LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceLocal    types.String `tfsdk:"local" json:"local,omitempty"`

	// TagNodes
	TagVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistancePrefix *map[string]VrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistancePrefix `tfsdk:"prefix" json:"prefix,omitempty"`

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistance) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"external": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `eBGP routes administrative distance

|  Format  |  Description  |
|----------|---------------|
|  u32:1-255  |  eBGP routes administrative distance  |

`,
		},

		"internal": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `iBGP routes administrative distance

|  Format  |  Description  |
|----------|---------------|
|  u32:1-255  |  iBGP routes administrative distance  |

`,
		},

		"local": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Locally originated BGP routes administrative distance

|  Format  |  Description  |
|----------|---------------|
|  u32:1-255  |  Locally originated BGP routes administrative distance  |

`,
		},

		// TagNodes

		"prefix": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistancePrefix{}.ResourceSchemaAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Administrative distance for a specific BGP prefix

|  Format  |  Description  |
|----------|---------------|
|  ipv6net  |  Administrative distance for a specific BGP prefix  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *VrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistance) MarshalJSON() ([]byte, error) {
	jsonData := make(map[string]interface{})

	// Leafs

	if !o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceExternal.IsNull() && !o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceExternal.IsUnknown() {
		jsonData["external"] = o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceExternal.ValueString()
	}

	if !o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceInternal.IsNull() && !o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceInternal.IsUnknown() {
		jsonData["internal"] = o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceInternal.ValueString()
	}

	if !o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceLocal.IsNull() && !o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceLocal.IsUnknown() {
		jsonData["local"] = o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceLocal.ValueString()
	}

	// Tags

	if !reflect.ValueOf(o.TagVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistancePrefix).IsZero() {
		subJSONStr, err := json.Marshal(o.TagVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistancePrefix)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["prefix"] = subData
	}

	// Nodes

	// Return compiled data
	ret, err := json.Marshal(jsonData)
	if err != nil {
		return nil, err
	}
	return ret, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *VrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistance) UnmarshalJSON(jsonStr []byte) error {
	jsonData := make(map[string]interface{})
	err := json.Unmarshal(jsonStr, &jsonData)
	if err != nil {
		return err
	}

	// Leafs

	if value, ok := jsonData["external"]; ok {
		o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceExternal = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceExternal = basetypes.NewStringNull()
	}

	if value, ok := jsonData["internal"]; ok {
		o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceInternal = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceInternal = basetypes.NewStringNull()
	}

	if value, ok := jsonData["local"]; ok {
		o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceLocal = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistanceLocal = basetypes.NewStringNull()
	}

	// Tags
	if value, ok := jsonData["prefix"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.TagVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistancePrefix = &map[string]VrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistancePrefix{}

		err = json.Unmarshal(subJSONStr, o.TagVrfNameProtocolsBgpAddressFamilyIPvsixMulticastDistancePrefix)
		if err != nil {
			return err
		}
	}

	// Nodes

	return nil
}
