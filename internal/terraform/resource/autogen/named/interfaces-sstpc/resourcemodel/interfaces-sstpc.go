// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// InterfacesSstpc describes the resource data model.
type InterfacesSstpc struct {
	// LeafNodes
	InterfacesSstpcDescrIPtion          customtypes.CustomStringValue `tfsdk:"description" json:"description,omitempty"`
	InterfacesSstpcDisable              customtypes.CustomStringValue `tfsdk:"disable" json:"disable,omitempty"`
	InterfacesSstpcNoDefaultRoute       customtypes.CustomStringValue `tfsdk:"no_default_route" json:"no-default-route,omitempty"`
	InterfacesSstpcDefaultRouteDistance customtypes.CustomStringValue `tfsdk:"default_route_distance" json:"default-route-distance,omitempty"`
	InterfacesSstpcNoPeerDNS            customtypes.CustomStringValue `tfsdk:"no_peer_dns" json:"no-peer-dns,omitempty"`
	InterfacesSstpcMtu                  customtypes.CustomStringValue `tfsdk:"mtu" json:"mtu,omitempty"`
	InterfacesSstpcServer               customtypes.CustomStringValue `tfsdk:"server" json:"server,omitempty"`
	InterfacesSstpcPort                 customtypes.CustomStringValue `tfsdk:"port" json:"port,omitempty"`
	InterfacesSstpcVrf                  customtypes.CustomStringValue `tfsdk:"vrf" json:"vrf,omitempty"`

	// TagNodes

	// Nodes
	InterfacesSstpcAuthentication types.Object `tfsdk:"authentication" json:"authentication,omitempty"`
	InterfacesSstpcSsl            types.Object `tfsdk:"ssl" json:"ssl,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o InterfacesSstpc) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"description": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Description

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Description  |

`,
		},

		"disable": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Administratively disable interface

`,
		},

		"no_default_route": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Do not install default route to system

`,
		},

		"default_route_distance": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Distance for installed default route

|  Format  |  Description  |
|----------|---------------|
|  u32:1-255  |  Distance for the default route from DHCP server  |

`,

			// Default:          stringdefault.StaticString(`210`),
			Computed: true,
		},

		"no_peer_dns": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Do not use DNS servers provided by the peer

`,
		},

		"mtu": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Maximum Transmission Unit (MTU)

|  Format  |  Description  |
|----------|---------------|
|  u32:68-1500  |  Maximum Transmission Unit in byte  |

`,

			// Default:          stringdefault.StaticString(`1452`),
			Computed: true,
		},

		"server": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Remote server to connect to

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  Server IPv4 address  |
|  hostname  |  Server hostname/FQDN  |

`,
		},

		"port": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Port number used by connection

|  Format  |  Description  |
|----------|---------------|
|  u32:1-65535  |  Numeric IP port  |

`,

			// Default:          stringdefault.StaticString(`443`),
			Computed: true,
		},

		"vrf": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `VRF instance name

|  Format  |  Description  |
|----------|---------------|
|  txt  |  VRF instance name  |

`,
		},

		// TagNodes

		// Nodes

		"authentication": schema.SingleNestedAttribute{
			Attributes: InterfacesSstpcAuthentication{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Authentication settings

`,
		},

		"ssl": schema.SingleNestedAttribute{
			Attributes: InterfacesSstpcSsl{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Secure Sockets Layer (SSL) configuration

`,
		},
	}
}
