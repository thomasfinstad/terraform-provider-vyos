// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// InterfacesOpenvpnTLS describes the resource data model.
type InterfacesOpenvpnTLS struct {
	// LeafNodes
	InterfacesOpenvpnTLSAuthKey       customtypes.CustomStringValue `tfsdk:"auth_key" json:"auth-key,omitempty"`
	InterfacesOpenvpnTLSCertificate   customtypes.CustomStringValue `tfsdk:"certificate" json:"certificate,omitempty"`
	InterfacesOpenvpnTLSCaCertificate customtypes.CustomStringValue `tfsdk:"ca_certificate" json:"ca-certificate,omitempty"`
	InterfacesOpenvpnTLSDhParams      customtypes.CustomStringValue `tfsdk:"dh_params" json:"dh-params,omitempty"`
	InterfacesOpenvpnTLSCryptKey      customtypes.CustomStringValue `tfsdk:"crypt_key" json:"crypt-key,omitempty"`
	InterfacesOpenvpnTLSTLSVersionMin customtypes.CustomStringValue `tfsdk:"tls_version_min" json:"tls-version-min,omitempty"`
	InterfacesOpenvpnTLSRole          customtypes.CustomStringValue `tfsdk:"role" json:"role,omitempty"`

	// TagNodes

	// Nodes
}

// ResourceAttributes generates the attributes for the resource at this level
func (o InterfacesOpenvpnTLS) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"auth_key": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `TLS shared secret key for tls-auth

`,
		},

		"certificate": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Certificate in PKI configuration

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Name of certificate in PKI configuration  |

`,
		},

		"ca_certificate": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Certificate Authority chain in PKI configuration

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Name of CA in PKI configuration  |

`,
		},

		"dh_params": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Diffie Hellman parameters (server only)

`,
		},

		"crypt_key": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Static key to use to authenticate control channel

`,
		},

		"tls_version_min": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Specify the minimum required TLS version

|  Format  |  Description  |
|----------|---------------|
|  1.0  |  TLS v1.0  |
|  1.1  |  TLS v1.1  |
|  1.2  |  TLS v1.2  |
|  1.3  |  TLS v1.3  |

`,
		},

		"role": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `TLS negotiation role

|  Format  |  Description  |
|----------|---------------|
|  active  |  Initiate TLS negotiation actively  |
|  passive  |  Wait for incoming TLS connection  |

`,
		},

		// TagNodes

		// Nodes

	}
}
