// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// InterfacesOpenvpnServerClientIPPool describes the resource data model.
type InterfacesOpenvpnServerClientIPPool struct {
	// LeafNodes
	InterfacesOpenvpnServerClientIPPoolDisable    customtypes.CustomStringValue `tfsdk:"disable" json:"disable,omitempty"`
	InterfacesOpenvpnServerClientIPPoolStart      customtypes.CustomStringValue `tfsdk:"start" json:"start,omitempty"`
	InterfacesOpenvpnServerClientIPPoolStop       customtypes.CustomStringValue `tfsdk:"stop" json:"stop,omitempty"`
	InterfacesOpenvpnServerClientIPPoolSubnetMask customtypes.CustomStringValue `tfsdk:"subnet_mask" json:"subnet-mask,omitempty"`

	// TagNodes

	// Nodes
}

// ResourceAttributes generates the attributes for the resource at this level
func (o InterfacesOpenvpnServerClientIPPool) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"disable": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Disable instance

`,
		},

		"start": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `First IP address in the pool

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  IPv4 address  |
`,
		},

		"stop": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Last IP address in the pool

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  IPv4 address  |
`,
		},

		"subnet_mask": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Subnet mask pushed to dynamic clients. If not set the server subnet mask will be used. Only used with topology subnet or device type tap. Not used with bridged interfaces.

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  IPv4 subnet mask  |
`,
		},

		// TagNodes

		// Nodes

	}
}
