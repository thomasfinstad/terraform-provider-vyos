// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// PolicyRoutesixRule describes the resource data model.
type PolicyRoutesixRule struct {
	ID types.Number `tfsdk:"identifier" vyos:",self-id"`

	ParentIDPolicyRoutesix types.String `tfsdk:"route6" vyos:"route6_identifier,parent-id"`

	// LeafNodes
	LeafPolicyRoutesixRuleAction              types.String `tfsdk:"action" vyos:"action,omitempty"`
	LeafPolicyRoutesixRuleDescrIPtion         types.String `tfsdk:"description" vyos:"description,omitempty"`
	LeafPolicyRoutesixRuleDisable             types.Bool   `tfsdk:"disable" vyos:"disable,omitempty"`
	LeafPolicyRoutesixRuleLog                 types.String `tfsdk:"log" vyos:"log,omitempty"`
	LeafPolicyRoutesixRuleProtocol            types.String `tfsdk:"protocol" vyos:"protocol,omitempty"`
	LeafPolicyRoutesixRuleDscp                types.List   `tfsdk:"dscp" vyos:"dscp,omitempty"`
	LeafPolicyRoutesixRuleDscpExclude         types.List   `tfsdk:"dscp_exclude" vyos:"dscp-exclude,omitempty"`
	LeafPolicyRoutesixRulePacketLength        types.List   `tfsdk:"packet_length" vyos:"packet-length,omitempty"`
	LeafPolicyRoutesixRulePacketLengthExclude types.List   `tfsdk:"packet_length_exclude" vyos:"packet-length-exclude,omitempty"`
	LeafPolicyRoutesixRulePacketType          types.String `tfsdk:"packet_type" vyos:"packet-type,omitempty"`
	LeafPolicyRoutesixRuleConnectionMark      types.List   `tfsdk:"connection_mark" vyos:"connection-mark,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
	NodePolicyRoutesixRuleDestination *PolicyRoutesixRuleDestination `tfsdk:"destination" vyos:"destination,omitempty"`
	NodePolicyRoutesixRuleSource      *PolicyRoutesixRuleSource      `tfsdk:"source" vyos:"source,omitempty"`
	NodePolicyRoutesixRuleFragment    *PolicyRoutesixRuleFragment    `tfsdk:"fragment" vyos:"fragment,omitempty"`
	NodePolicyRoutesixRuleIPsec       *PolicyRoutesixRuleIPsec       `tfsdk:"ipsec" vyos:"ipsec,omitempty"`
	NodePolicyRoutesixRuleLimit       *PolicyRoutesixRuleLimit       `tfsdk:"limit" vyos:"limit,omitempty"`
	NodePolicyRoutesixRuleRecent      *PolicyRoutesixRuleRecent      `tfsdk:"recent" vyos:"recent,omitempty"`
	NodePolicyRoutesixRuleSet         *PolicyRoutesixRuleSet         `tfsdk:"set" vyos:"set,omitempty"`
	NodePolicyRoutesixRuleState       *PolicyRoutesixRuleState       `tfsdk:"state" vyos:"state,omitempty"`
	NodePolicyRoutesixRuleTCP         *PolicyRoutesixRuleTCP         `tfsdk:"tcp" vyos:"tcp,omitempty"`
	NodePolicyRoutesixRuleTime        *PolicyRoutesixRuleTime        `tfsdk:"time" vyos:"time,omitempty"`
	NodePolicyRoutesixRuleIcmpvsix    *PolicyRoutesixRuleIcmpvsix    `tfsdk:"icmpv6" vyos:"icmpv6,omitempty"`
	NodePolicyRoutesixRuleHopLimit    *PolicyRoutesixRuleHopLimit    `tfsdk:"hop_limit" vyos:"hop-limit,omitempty"`
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *PolicyRoutesixRule) GetVyosPath() []string {
	return []string{
		"policy",

		"route6",
		o.ParentIDPolicyRoutesix.ValueString(),

		"rule",
		o.ID.ValueBigFloat().String(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o PolicyRoutesixRule) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"identifier": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Policy rule number

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-999999  |  Number of policy rule  |

`,
		},

		"route6_identifier": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Policy route rule set name for IPv6

`,
		},

		// LeafNodes

		"action": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Rule action

    |  Format  |  Description  |
    |----------|---------------|
    |  accept  |  Accept matching entries  |
    |  reject  |  Reject matching entries  |
    |  return  |  Return from the current chain and continue at the next rule of the last chain  |
    |  drop  |  Drop matching entries  |

`,
		},

		"description": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Description

    |  Format  |  Description  |
    |----------|---------------|
    |  txt  |  Description  |

`,
		},

		"disable": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Option to disable firewall rule

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"log": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Option to log packets matching rule

    |  Format  |  Description  |
    |----------|---------------|
    |  enable  |  Enable log  |
    |  disable  |  Disable log  |

`,
		},

		"protocol": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Protocol to match (protocol name, number, or "all")

    |  Format  |  Description  |
    |----------|---------------|
    |  all  |  All IP protocols  |
    |  tcp_udp  |  Both TCP and UDP  |
    |  0-255  |  IP protocol number  |
    |  !<protocol>  |  IP protocol number  |

`,

			// Default:          stringdefault.StaticString(`all`),
			Computed: true,
		},

		"dscp": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `DSCP value

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:0-63  |  DSCP value to match  |
    |  <start-end>  |  DSCP range to match  |

`,
		},

		"dscp_exclude": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `DSCP value not to match

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:0-63  |  DSCP value not to match  |
    |  <start-end>  |  DSCP range not to match  |

`,
		},

		"packet_length": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Payload size in bytes, including header and data to match

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-65535  |  Packet length to match  |
    |  <start-end>  |  Packet length range to match  |

`,
		},

		"packet_length_exclude": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Payload size in bytes, including header and data not to match

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-65535  |  Packet length not to match  |
    |  <start-end>  |  Packet length range not to match  |

`,
		},

		"packet_type": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Packet type

    |  Format  |  Description  |
    |----------|---------------|
    |  broadcast  |  Match broadcast packet type  |
    |  host  |  Match host packet type, addressed to local host  |
    |  multicast  |  Match multicast packet type  |
    |  other  |  Match packet addressed to another host  |

`,
		},

		"connection_mark": schema.ListAttribute{
			ElementType: types.NumberType,
			Optional:    true,
			MarkdownDescription: `Connection mark

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:0-2147483647  |  Connection-mark to match  |

`,
		},

		// Nodes

		"destination": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleDestination{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Destination parameters

`,
		},

		"source": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleSource{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Source parameters

`,
		},

		"fragment": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleFragment{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `IP fragment match

`,
		},

		"ipsec": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleIPsec{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Inbound IPsec packets

`,
		},

		"limit": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleLimit{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Rate limit using a token bucket filter

`,
		},

		"recent": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleRecent{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Parameters for matching recently seen sources

`,
		},

		"set": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleSet{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Packet modifications

`,
		},

		"state": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleState{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Session state

`,
		},

		"tcp": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleTCP{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `TCP flags to match

`,
		},

		"time": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleTime{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Time to match rule

`,
		},

		"icmpv6": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleIcmpvsix{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `ICMPv6 type and code information

`,
		},

		"hop_limit": schema.SingleNestedAttribute{
			Attributes: PolicyRoutesixRuleHopLimit{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Hop limit

`,
		},
	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *PolicyRoutesixRule) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *PolicyRoutesixRule) UnmarshalJSON(_ []byte) error {
	return nil
}
