// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// PolicyRouteMapRuleMatch describes the resource data model.
type PolicyRouteMapRuleMatch struct {
	// LeafNodes
	LeafPolicyRouteMapRuleMatchAsPath          types.String `tfsdk:"as_path" vyos:"as-path,omitempty"`
	LeafPolicyRouteMapRuleMatchExtcommunity    types.String `tfsdk:"extcommunity" vyos:"extcommunity,omitempty"`
	LeafPolicyRouteMapRuleMatchInterface       types.String `tfsdk:"interface" vyos:"interface,omitempty"`
	LeafPolicyRouteMapRuleMatchLocalPreference types.Number `tfsdk:"local_preference" vyos:"local-preference,omitempty"`
	LeafPolicyRouteMapRuleMatchMetric          types.Number `tfsdk:"metric" vyos:"metric,omitempty"`
	LeafPolicyRouteMapRuleMatchOrigin          types.String `tfsdk:"origin" vyos:"origin,omitempty"`
	LeafPolicyRouteMapRuleMatchPeer            types.String `tfsdk:"peer" vyos:"peer,omitempty"`
	LeafPolicyRouteMapRuleMatchRpki            types.String `tfsdk:"rpki" vyos:"rpki,omitempty"`
	LeafPolicyRouteMapRuleMatchTag             types.Number `tfsdk:"tag" vyos:"tag,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
	NodePolicyRouteMapRuleMatchCommunity      *PolicyRouteMapRuleMatchCommunity      `tfsdk:"community" vyos:"community,omitempty"`
	NodePolicyRouteMapRuleMatchEvpn           *PolicyRouteMapRuleMatchEvpn           `tfsdk:"evpn" vyos:"evpn,omitempty"`
	NodePolicyRouteMapRuleMatchIP             *PolicyRouteMapRuleMatchIP             `tfsdk:"ip" vyos:"ip,omitempty"`
	NodePolicyRouteMapRuleMatchIPvsix         *PolicyRouteMapRuleMatchIPvsix         `tfsdk:"ipv6" vyos:"ipv6,omitempty"`
	NodePolicyRouteMapRuleMatchLargeCommunity *PolicyRouteMapRuleMatchLargeCommunity `tfsdk:"large_community" vyos:"large-community,omitempty"`
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o PolicyRouteMapRuleMatch) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"as_path": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `BGP as-path-list to match

`,
		},

		"extcommunity": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `BGP extended community to match

`,
		},

		"interface": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Interface to use

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Interface name  |

`,
		},

		"local_preference": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Local Preference

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-4294967295  &emsp; |  Local Preference  |

`,
		},

		"metric": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Metric of route to match

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-65535  &emsp; |  Route metric  |

`,
		},

		"origin": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `BGP origin code to match

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  egp  &emsp; |  Exterior gateway protocol origin  |
    |  igp  &emsp; |  Interior gateway protocol origin  |
    |  incomplete  &emsp; |  Incomplete origin  |

`,
		},

		"peer": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Peer address to match

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv4  &emsp; |  Peer IP address  |
    |  ipv6  &emsp; |  Peer IPv6 address  |

`,
		},

		"rpki": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Match RPKI validation result

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  invalid  &emsp; |  Match invalid entries  |
    |  notfound  &emsp; |  Match notfound entries  |
    |  valid  &emsp; |  Match valid entries  |

`,
		},

		"tag": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Route tag to match

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-65535  &emsp; |  Route tag  |

`,
		},

		// Nodes

		"community": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleMatchCommunity{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `BGP community-list to match

`,
		},

		"evpn": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleMatchEvpn{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Ethernet Virtual Private Network

`,
		},

		"ip": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleMatchIP{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `IP prefix parameters to match

`,
		},

		"ipv6": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleMatchIPvsix{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `IPv6 prefix parameters to match

`,
		},

		"large_community": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleMatchLargeCommunity{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Match BGP large communities

`,
		},
	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *PolicyRouteMapRuleMatch) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *PolicyRouteMapRuleMatch) UnmarshalJSON(_ []byte) error {
	return nil
}
