// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// PolicyExtcommunityListRule describes the resource data model.
type PolicyExtcommunityListRule struct {
	SelfIdentifier types.Number `tfsdk:"rule_id" vyos:",self-id"`

	ParentIDPolicyExtcommunityList types.String `tfsdk:"extcommunity_list" vyos:"extcommunity-list,parent-id"`

	// LeafNodes
	LeafPolicyExtcommunityListRuleAction      types.String `tfsdk:"action" vyos:"action,omitempty"`
	LeafPolicyExtcommunityListRuleDescrIPtion types.String `tfsdk:"description" vyos:"description,omitempty"`
	LeafPolicyExtcommunityListRuleRegex       types.String `tfsdk:"regex" vyos:"regex,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *PolicyExtcommunityListRule) GetVyosPath() []string {
	return []string{
		"policy",

		"extcommunity-list",
		o.ParentIDPolicyExtcommunityList.ValueString(),

		"rule",
		o.SelfIdentifier.ValueBigFloat().String(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o PolicyExtcommunityListRule) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"rule_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Rule for this BGP extended community list

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-65535  &emsp; |  Extended community-list rule number  |

`,
		},

		"extcommunity_list_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Add a BGP extended community list entry

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  BGP extended community-list name  |

`,
		},

		// LeafNodes

		"action": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Action to take on entries matching this rule

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  permit  &emsp; |  Permit matching entries  |
    |  deny  &emsp; |  Deny matching entries  |

`,
		},

		"description": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Description

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Description  |

`,
		},

		"regex": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Regular expression to match against an extended community list

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  <aa:nn:nn>  &emsp; |  Extended community list regular expression  |
    |  <rt aa:nn:nn>  &emsp; |  Route Target regular expression  |
    |  <soo aa:nn:nn>  &emsp; |  Site of Origin regular expression  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *PolicyExtcommunityListRule) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *PolicyExtcommunityListRule) UnmarshalJSON(_ []byte) error {
	return nil
}
