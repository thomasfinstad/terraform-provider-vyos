// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// PolicyPrefixListsixRule describes the resource data model.
type PolicyPrefixListsixRule struct {
	SelfIdentifier types.Number `tfsdk:"rule_id" vyos:",self-id"`

	ParentIDPolicyPrefixListsix types.String `tfsdk:"prefix_list6" vyos:"prefix-list6,parent-id"`

	// LeafNodes
	LeafPolicyPrefixListsixRuleAction      types.String `tfsdk:"action" vyos:"action,omitempty"`
	LeafPolicyPrefixListsixRuleDescrIPtion types.String `tfsdk:"description" vyos:"description,omitempty"`
	LeafPolicyPrefixListsixRuleGe          types.Number `tfsdk:"ge" vyos:"ge,omitempty"`
	LeafPolicyPrefixListsixRuleLe          types.Number `tfsdk:"le" vyos:"le,omitempty"`
	LeafPolicyPrefixListsixRulePrefix      types.String `tfsdk:"prefix" vyos:"prefix,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *PolicyPrefixListsixRule) GetVyosPath() []string {
	return []string{
		"policy",

		"prefix-list6",
		o.ParentIDPolicyPrefixListsix.ValueString(),

		"rule",
		o.SelfIdentifier.ValueBigFloat().String(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o PolicyPrefixListsixRule) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"rule_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Rule for this prefix-list6

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-65535  &emsp; |  Prefix-list rule number  |

`,
		},

		"prefix_list6_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `IPv6 prefix-list filter

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Name of IPv6 prefix-list  |

`,
		},

		// LeafNodes

		"action": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Action to take on entries matching this rule

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  permit  &emsp; |  Permit matching entries  |
    |  deny  &emsp; |  Deny matching entries  |

`,
		},

		"description": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Description

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Description  |

`,
		},

		"ge": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Prefix length to match a netmask greater than or equal to it

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-128  &emsp; |  Netmask greater than length  |

`,
		},

		"le": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Prefix length to match a netmask less than or equal to it

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-128  &emsp; |  Netmask less than length  |

`,
		},

		"prefix": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Prefix to match

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv6net  &emsp; |  IPv6 prefix  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *PolicyPrefixListsixRule) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *PolicyPrefixListsixRule) UnmarshalJSON(_ []byte) error {
	return nil
}
