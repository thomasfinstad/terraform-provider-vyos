// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// InterfacesMacsecSecURIty describes the resource data model.
type InterfacesMacsecSecURIty struct {
	// LeafNodes
	InterfacesMacsecSecURItyCIPher       customtypes.CustomStringValue `tfsdk:"cipher" json:"cipher,omitempty"`
	InterfacesMacsecSecURItyEncrypt      customtypes.CustomStringValue `tfsdk:"encrypt" json:"encrypt,omitempty"`
	InterfacesMacsecSecURItyReplayWindow customtypes.CustomStringValue `tfsdk:"replay_window" json:"replay-window,omitempty"`

	// TagNodes

	// Nodes
	InterfacesMacsecSecURItyMka types.Object `tfsdk:"mka" json:"mka,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o InterfacesMacsecSecURIty) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"cipher": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Cipher suite used

|  Format  |  Description  |
|----------|---------------|
|  gcm-aes-128  |  Galois/Counter Mode of AES cipher with 128-bit key  |
|  gcm-aes-256  |  Galois/Counter Mode of AES cipher with 256-bit key  |
`,
		},

		"encrypt": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Enable optional MACsec encryption

`,
		},

		"replay_window": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IEEE 802.1X/MACsec replay protection window

|  Format  |  Description  |
|----------|---------------|
|  u32:0  |  No replay window, strict check  |
|  u32:1-4294967295  |  Number of packets that could be misordered  |
`,
		},

		// TagNodes

		// Nodes

		"mka": schema.SingleNestedAttribute{
			Attributes: InterfacesMacsecSecURItyMka{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `MACsec Key Agreement protocol (MKA)

`,
		},
	}
}
