// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-plugin-log/tflog"
)

// InterfacesMacsecSecURItyMka describes the resource data model.
type InterfacesMacsecSecURItyMka struct {
	// LeafNodes
	LeafInterfacesMacsecSecURItyMkaCak      types.String `tfsdk:"cak"`
	LeafInterfacesMacsecSecURItyMkaCkn      types.String `tfsdk:"ckn"`
	LeafInterfacesMacsecSecURItyMkaPriority types.String `tfsdk:"priority"`

	// TagNodes

	// Nodes
}

// TerraformToVyos converts terraform data to vyos data
func (o *InterfacesMacsecSecURItyMka) TerraformToVyos(ctx context.Context, diags *diag.Diagnostics) map[string]interface{} {
	tflog.Error(ctx, "TerraformToVyos", map[string]interface{}{"Path": []string{"interfaces", "macsec", "security", "mka"}})

	vyosData := make(map[string]interface{})

	// Leafs
	if !(o.LeafInterfacesMacsecSecURItyMkaCak.IsNull() || o.LeafInterfacesMacsecSecURItyMkaCak.IsUnknown()) {
		vyosData["cak"] = o.LeafInterfacesMacsecSecURItyMkaCak.ValueString()
	}
	if !(o.LeafInterfacesMacsecSecURItyMkaCkn.IsNull() || o.LeafInterfacesMacsecSecURItyMkaCkn.IsUnknown()) {
		vyosData["ckn"] = o.LeafInterfacesMacsecSecURItyMkaCkn.ValueString()
	}
	if !(o.LeafInterfacesMacsecSecURItyMkaPriority.IsNull() || o.LeafInterfacesMacsecSecURItyMkaPriority.IsUnknown()) {
		vyosData["priority"] = o.LeafInterfacesMacsecSecURItyMkaPriority.ValueString()
	}

	// Tags

	// Nodes

	// Return compiled data
	return vyosData
}

// VyosToTerraform converts vyos data to terraform data
func (o *InterfacesMacsecSecURItyMka) VyosToTerraform(ctx context.Context, diags *diag.Diagnostics, vyosData map[string]interface{}) {
	tflog.Error(ctx, "VyosToTerraform begin", map[string]interface{}{"Path": []string{"interfaces", "macsec", "security", "mka"}})

	// Leafs
	if value, ok := vyosData["cak"]; ok {
		o.LeafInterfacesMacsecSecURItyMkaCak = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafInterfacesMacsecSecURItyMkaCak = basetypes.NewStringNull()
	}
	if value, ok := vyosData["ckn"]; ok {
		o.LeafInterfacesMacsecSecURItyMkaCkn = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafInterfacesMacsecSecURItyMkaCkn = basetypes.NewStringNull()
	}
	if value, ok := vyosData["priority"]; ok {
		o.LeafInterfacesMacsecSecURItyMkaPriority = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafInterfacesMacsecSecURItyMkaPriority = basetypes.NewStringNull()
	}

	// Tags

	// Nodes

	tflog.Error(ctx, "VyosToTerraform end", map[string]interface{}{"Path": []string{"interfaces", "macsec", "security", "mka"}})
}

// AttributeTypes generates the attribute types for the resource at this level
func (o InterfacesMacsecSecURItyMka) AttributeTypes() map[string]attr.Type {
	return map[string]attr.Type{
		// Leafs
		"cak":      types.StringType,
		"ckn":      types.StringType,
		"priority": types.StringType,

		// Tags

		// Nodes

	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o InterfacesMacsecSecURItyMka) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"cak": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Secure Connectivity Association Key

|  Format  |  Description  |
|----------|---------------|
|  txt  |  16-byte (128-bit) hex-string (32 hex-digits) for gcm-aes-128 or 32-byte (256-bit) hex-string (64 hex-digits) for gcm-aes-256  |

`,
		},

		"ckn": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Secure Connectivity Association Key Name

|  Format  |  Description  |
|----------|---------------|
|  txt  |  1..32-bytes (8..256 bit) hex-string (2..64 hex-digits)  |

`,
		},

		"priority": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Priority of MACsec Key Agreement protocol (MKA) actor

|  Format  |  Description  |
|----------|---------------|
|  u32:0-255  |  MACsec Key Agreement protocol (MKA) priority  |

`,

			// Default:          stringdefault.StaticString(`255`),
			Computed: true,
		},

		// TagNodes

		// Nodes

	}
}
