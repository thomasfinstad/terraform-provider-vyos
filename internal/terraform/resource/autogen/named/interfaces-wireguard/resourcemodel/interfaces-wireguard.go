// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// InterfacesWireguard describes the resource data model.
type InterfacesWireguard struct {
	// LeafNodes
	InterfacesWireguardAddress     customtypes.CustomStringValue `tfsdk:"address" json:"address,omitempty"`
	InterfacesWireguardDescrIPtion customtypes.CustomStringValue `tfsdk:"description" json:"description,omitempty"`
	InterfacesWireguardDisable     customtypes.CustomStringValue `tfsdk:"disable" json:"disable,omitempty"`
	InterfacesWireguardPort        customtypes.CustomStringValue `tfsdk:"port" json:"port,omitempty"`
	InterfacesWireguardMtu         customtypes.CustomStringValue `tfsdk:"mtu" json:"mtu,omitempty"`
	InterfacesWireguardFwmark      customtypes.CustomStringValue `tfsdk:"fwmark" json:"fwmark,omitempty"`
	InterfacesWireguardPrivateKey  customtypes.CustomStringValue `tfsdk:"private_key" json:"private-key,omitempty"`
	InterfacesWireguardRedirect    customtypes.CustomStringValue `tfsdk:"redirect" json:"redirect,omitempty"`
	InterfacesWireguardVrf         customtypes.CustomStringValue `tfsdk:"vrf" json:"vrf,omitempty"`

	// TagNodes
	InterfacesWireguardPeer types.Map `tfsdk:"peer" json:"peer,omitempty"`

	// Nodes
	InterfacesWireguardMirror types.Object `tfsdk:"mirror" json:"mirror,omitempty"`
	InterfacesWireguardIP     types.Object `tfsdk:"ip" json:"ip,omitempty"`
	InterfacesWireguardIPvsix types.Object `tfsdk:"ipv6" json:"ipv6,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o InterfacesWireguard) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"address": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IP address

|  Format  |  Description  |
|----------|---------------|
|  ipv4net  |  IPv4 address and prefix length  |
|  ipv6net  |  IPv6 address and prefix length  |
`,
		},

		"description": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Description

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Description  |
`,
		},

		"disable": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Administratively disable interface

`,
		},

		"port": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Port number used by connection

|  Format  |  Description  |
|----------|---------------|
|  u32:1-65535  |  Numeric IP port  |
`,
		},

		"mtu": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Maximum Transmission Unit (MTU)

|  Format  |  Description  |
|----------|---------------|
|  u32:68-16000  |  Maximum Transmission Unit in byte  |
`,

			// Default:          stringdefault.StaticString(`1420`),
			Computed: true,
		},

		"fwmark": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `A 32-bit fwmark value set on all outgoing packets

|  Format  |  Description  |
|----------|---------------|
|  number  |  value which marks the packet for QoS/shaper  |
`,

			// Default:          stringdefault.StaticString(`0`),
			Computed: true,
		},

		"private_key": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Base64 encoded private key

`,
		},

		"redirect": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Redirect incoming packet to destination

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Destination interface name  |
`,
		},

		"vrf": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `VRF instance name

|  Format  |  Description  |
|----------|---------------|
|  txt  |  VRF instance name  |
`,
		},

		// TagNodes

		"peer": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: InterfacesWireguardPeer{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `peer alias

`,
		},

		// Nodes

		"mirror": schema.SingleNestedAttribute{
			Attributes: InterfacesWireguardMirror{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Mirror ingress/egress packets

`,
		},

		"ip": schema.SingleNestedAttribute{
			Attributes: InterfacesWireguardIP{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `IPv4 routing parameters

`,
		},

		"ipv6": schema.SingleNestedAttribute{
			Attributes: InterfacesWireguardIPvsix{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `IPv6 routing parameters

`,
		},
	}
}
