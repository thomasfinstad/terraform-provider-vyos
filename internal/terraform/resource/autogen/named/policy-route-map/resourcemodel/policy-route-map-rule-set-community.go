// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"encoding/json"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// PolicyRouteMapRuleSetCommunity describes the resource data model.
type PolicyRouteMapRuleSetCommunity struct {
	// LeafNodes
	LeafPolicyRouteMapRuleSetCommunityAdd     types.String `tfsdk:"add" json:"add,omitempty"`
	LeafPolicyRouteMapRuleSetCommunityReplace types.String `tfsdk:"replace" json:"replace,omitempty"`
	LeafPolicyRouteMapRuleSetCommunityNone    types.String `tfsdk:"none" json:"none,omitempty"`
	LeafPolicyRouteMapRuleSetCommunityDelete  types.String `tfsdk:"delete" json:"delete,omitempty"`

	// TagNodes

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o PolicyRouteMapRuleSetCommunity) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"add": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Add communities to a prefix

|  Format  |  Description  |
|----------|---------------|
|  <AS:VAL>  |  Community number in <0-65535:0-65535> format  |
|  local-as  |  Well-known communities value NO_EXPORT_SUBCONFED 0xFFFFFF03  |
|  no-advertise  |  Well-known communities value NO_ADVERTISE 0xFFFFFF02  |
|  no-export  |  Well-known communities value NO_EXPORT 0xFFFFFF01  |
|  internet  |  Well-known communities value 0  |
|  graceful-shutdown  |  Well-known communities value GRACEFUL_SHUTDOWN 0xFFFF0000  |
|  accept-own  |  Well-known communities value ACCEPT_OWN 0xFFFF0001  |
|  route-filter-translated-v4  |  Well-known communities value ROUTE_FILTER_TRANSLATED_v4 0xFFFF0002  |
|  route-filter-v4  |  Well-known communities value ROUTE_FILTER_v4 0xFFFF0003  |
|  route-filter-translated-v6  |  Well-known communities value ROUTE_FILTER_TRANSLATED_v6 0xFFFF0004  |
|  route-filter-v6  |  Well-known communities value ROUTE_FILTER_v6 0xFFFF0005  |
|  llgr-stale  |  Well-known communities value LLGR_STALE 0xFFFF0006  |
|  no-llgr  |  Well-known communities value NO_LLGR 0xFFFF0007  |
|  accept-own-nexthop  |  Well-known communities value accept-own-nexthop 0xFFFF0008  |
|  blackhole  |  Well-known communities value BLACKHOLE 0xFFFF029A  |
|  no-peer  |  Well-known communities value NOPEER 0xFFFFFF04  |

`,
		},

		"replace": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Set communities for a prefix

|  Format  |  Description  |
|----------|---------------|
|  <AS:VAL>  |  Community number in <0-65535:0-65535> format  |
|  local-as  |  Well-known communities value NO_EXPORT_SUBCONFED 0xFFFFFF03  |
|  no-advertise  |  Well-known communities value NO_ADVERTISE 0xFFFFFF02  |
|  no-export  |  Well-known communities value NO_EXPORT 0xFFFFFF01  |
|  internet  |  Well-known communities value 0  |
|  graceful-shutdown  |  Well-known communities value GRACEFUL_SHUTDOWN 0xFFFF0000  |
|  accept-own  |  Well-known communities value ACCEPT_OWN 0xFFFF0001  |
|  route-filter-translated-v4  |  Well-known communities value ROUTE_FILTER_TRANSLATED_v4 0xFFFF0002  |
|  route-filter-v4  |  Well-known communities value ROUTE_FILTER_v4 0xFFFF0003  |
|  route-filter-translated-v6  |  Well-known communities value ROUTE_FILTER_TRANSLATED_v6 0xFFFF0004  |
|  route-filter-v6  |  Well-known communities value ROUTE_FILTER_v6 0xFFFF0005  |
|  llgr-stale  |  Well-known communities value LLGR_STALE 0xFFFF0006  |
|  no-llgr  |  Well-known communities value NO_LLGR 0xFFFF0007  |
|  accept-own-nexthop  |  Well-known communities value accept-own-nexthop 0xFFFF0008  |
|  blackhole  |  Well-known communities value BLACKHOLE 0xFFFF029A  |
|  no-peer  |  Well-known communities value NOPEER 0xFFFFFF04  |

`,
		},

		"none": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Completely remove communities attribute from a prefix

`,
		},

		"delete": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Remove communities defined in a list from a prefix

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Community-list  |

`,
		},

		// TagNodes

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *PolicyRouteMapRuleSetCommunity) MarshalJSON() ([]byte, error) {
	jsonData := make(map[string]interface{})

	// Leafs

	if !o.LeafPolicyRouteMapRuleSetCommunityAdd.IsNull() && !o.LeafPolicyRouteMapRuleSetCommunityAdd.IsUnknown() {
		jsonData["add"] = o.LeafPolicyRouteMapRuleSetCommunityAdd.ValueString()
	}

	if !o.LeafPolicyRouteMapRuleSetCommunityReplace.IsNull() && !o.LeafPolicyRouteMapRuleSetCommunityReplace.IsUnknown() {
		jsonData["replace"] = o.LeafPolicyRouteMapRuleSetCommunityReplace.ValueString()
	}

	if !o.LeafPolicyRouteMapRuleSetCommunityNone.IsNull() && !o.LeafPolicyRouteMapRuleSetCommunityNone.IsUnknown() {
		jsonData["none"] = o.LeafPolicyRouteMapRuleSetCommunityNone.ValueString()
	}

	if !o.LeafPolicyRouteMapRuleSetCommunityDelete.IsNull() && !o.LeafPolicyRouteMapRuleSetCommunityDelete.IsUnknown() {
		jsonData["delete"] = o.LeafPolicyRouteMapRuleSetCommunityDelete.ValueString()
	}

	// Tags

	// Nodes

	// Return compiled data
	ret, err := json.Marshal(jsonData)
	if err != nil {
		return nil, err
	}
	return ret, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *PolicyRouteMapRuleSetCommunity) UnmarshalJSON(jsonStr []byte) error {
	jsonData := make(map[string]interface{})
	err := json.Unmarshal(jsonStr, &jsonData)
	if err != nil {
		return err
	}

	// Leafs

	if value, ok := jsonData["add"]; ok {
		o.LeafPolicyRouteMapRuleSetCommunityAdd = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafPolicyRouteMapRuleSetCommunityAdd = basetypes.NewStringNull()
	}

	if value, ok := jsonData["replace"]; ok {
		o.LeafPolicyRouteMapRuleSetCommunityReplace = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafPolicyRouteMapRuleSetCommunityReplace = basetypes.NewStringNull()
	}

	if value, ok := jsonData["none"]; ok {
		o.LeafPolicyRouteMapRuleSetCommunityNone = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafPolicyRouteMapRuleSetCommunityNone = basetypes.NewStringNull()
	}

	if value, ok := jsonData["delete"]; ok {
		o.LeafPolicyRouteMapRuleSetCommunityDelete = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafPolicyRouteMapRuleSetCommunityDelete = basetypes.NewStringNull()
	}

	// Tags

	// Nodes

	return nil
}
