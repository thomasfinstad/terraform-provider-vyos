// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// PolicyRouteMapRule describes the resource data model.
type PolicyRouteMapRule struct {
	// LeafNodes
	PolicyRouteMapRuleAction      customtypes.CustomStringValue `tfsdk:"action" json:"action,omitempty"`
	PolicyRouteMapRuleCall        customtypes.CustomStringValue `tfsdk:"call" json:"call,omitempty"`
	PolicyRouteMapRuleContinue    customtypes.CustomStringValue `tfsdk:"continue" json:"continue,omitempty"`
	PolicyRouteMapRuleDescrIPtion customtypes.CustomStringValue `tfsdk:"description" json:"description,omitempty"`

	// TagNodes

	// Nodes
	PolicyRouteMapRuleMatch   types.Object `tfsdk:"match" json:"match,omitempty"`
	PolicyRouteMapRuleOnMatch types.Object `tfsdk:"on_match" json:"on-match,omitempty"`
	PolicyRouteMapRuleSet     types.Object `tfsdk:"set" json:"set,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o PolicyRouteMapRule) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"action": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Action to take on entries matching this rule

|  Format  |  Description  |
|----------|---------------|
|  permit  |  Permit matching entries  |
|  deny  |  Deny matching entries  |

`,
		},

		"call": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Call another route-map on match

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Route map name  |

`,
		},

		"continue": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Jump to a different rule in this route-map on a match

|  Format  |  Description  |
|----------|---------------|
|  u32:1-65535  |  Rule number  |

`,
		},

		"description": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Description

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Description  |

`,
		},

		// TagNodes

		// Nodes

		"match": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleMatch{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Route parameters to match

`,
		},

		"on_match": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleOnMatch{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Exit policy on matches

`,
		},

		"set": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleSet{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Route parameters

`,
		},
	}
}
