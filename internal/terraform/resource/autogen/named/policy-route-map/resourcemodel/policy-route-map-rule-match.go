// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// PolicyRouteMapRuleMatch describes the resource data model.
type PolicyRouteMapRuleMatch struct {
	// LeafNodes
	PolicyRouteMapRuleMatchAsPath          customtypes.CustomStringValue `tfsdk:"as_path" json:"as-path,omitempty"`
	PolicyRouteMapRuleMatchExtcommunity    customtypes.CustomStringValue `tfsdk:"extcommunity" json:"extcommunity,omitempty"`
	PolicyRouteMapRuleMatchInterface       customtypes.CustomStringValue `tfsdk:"interface" json:"interface,omitempty"`
	PolicyRouteMapRuleMatchLocalPreference customtypes.CustomStringValue `tfsdk:"local_preference" json:"local-preference,omitempty"`
	PolicyRouteMapRuleMatchMetric          customtypes.CustomStringValue `tfsdk:"metric" json:"metric,omitempty"`
	PolicyRouteMapRuleMatchOrigin          customtypes.CustomStringValue `tfsdk:"origin" json:"origin,omitempty"`
	PolicyRouteMapRuleMatchPeer            customtypes.CustomStringValue `tfsdk:"peer" json:"peer,omitempty"`
	PolicyRouteMapRuleMatchRpki            customtypes.CustomStringValue `tfsdk:"rpki" json:"rpki,omitempty"`
	PolicyRouteMapRuleMatchTag             customtypes.CustomStringValue `tfsdk:"tag" json:"tag,omitempty"`

	// TagNodes

	// Nodes
	PolicyRouteMapRuleMatchCommunity      types.Object `tfsdk:"community" json:"community,omitempty"`
	PolicyRouteMapRuleMatchEvpn           types.Object `tfsdk:"evpn" json:"evpn,omitempty"`
	PolicyRouteMapRuleMatchIP             types.Object `tfsdk:"ip" json:"ip,omitempty"`
	PolicyRouteMapRuleMatchIPvsix         types.Object `tfsdk:"ipv6" json:"ipv6,omitempty"`
	PolicyRouteMapRuleMatchLargeCommunity types.Object `tfsdk:"large_community" json:"large-community,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o PolicyRouteMapRuleMatch) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"as_path": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `BGP as-path-list to match

`,
		},

		"extcommunity": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `BGP extended community to match

`,
		},

		"interface": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Interface to use

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Interface name  |
`,
		},

		"local_preference": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Local Preference

|  Format  |  Description  |
|----------|---------------|
|  u32:0-4294967295  |  Local Preference  |
`,
		},

		"metric": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Metric of route to match

|  Format  |  Description  |
|----------|---------------|
|  u32:1-65535  |  Route metric  |
`,
		},

		"origin": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `BGP origin code to match

|  Format  |  Description  |
|----------|---------------|
|  egp  |  Exterior gateway protocol origin  |
|  igp  |  Interior gateway protocol origin  |
|  incomplete  |  Incomplete origin  |
`,
		},

		"peer": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Peer address to match

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  Peer IP address  |
|  ipv6  |  Peer IPv6 address  |
`,
		},

		"rpki": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Match RPKI validation result

|  Format  |  Description  |
|----------|---------------|
|  invalid  |  Match invalid entries  |
|  notfound  |  Match notfound entries  |
|  valid  |  Match valid entries  |
`,
		},

		"tag": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Route tag to match

|  Format  |  Description  |
|----------|---------------|
|  u32:1-65535  |  Route tag  |
`,
		},

		// TagNodes

		// Nodes

		"community": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleMatchCommunity{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `BGP community-list to match

`,
		},

		"evpn": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleMatchEvpn{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Ethernet Virtual Private Network

`,
		},

		"ip": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleMatchIP{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `IP prefix parameters to match

`,
		},

		"ipv6": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleMatchIPvsix{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `IPv6 prefix parameters to match

`,
		},

		"large_community": schema.SingleNestedAttribute{
			Attributes: PolicyRouteMapRuleMatchLargeCommunity{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Match BGP large communities

`,
		},
	}
}
