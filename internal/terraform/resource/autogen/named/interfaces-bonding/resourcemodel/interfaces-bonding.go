// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// InterfacesBonding describes the resource data model.
type InterfacesBonding struct {
	// LeafNodes
	InterfacesBondingAddress           customtypes.CustomStringValue `tfsdk:"address" json:"address,omitempty"`
	InterfacesBondingDescrIPtion       customtypes.CustomStringValue `tfsdk:"description" json:"description,omitempty"`
	InterfacesBondingDisableLinkDetect customtypes.CustomStringValue `tfsdk:"disable_link_detect" json:"disable-link-detect,omitempty"`
	InterfacesBondingDisable           customtypes.CustomStringValue `tfsdk:"disable" json:"disable,omitempty"`
	InterfacesBondingVrf               customtypes.CustomStringValue `tfsdk:"vrf" json:"vrf,omitempty"`
	InterfacesBondingHashPolicy        customtypes.CustomStringValue `tfsdk:"hash_policy" json:"hash-policy,omitempty"`
	InterfacesBondingMac               customtypes.CustomStringValue `tfsdk:"mac" json:"mac,omitempty"`
	InterfacesBondingMiiMonInterval    customtypes.CustomStringValue `tfsdk:"mii_mon_interval" json:"mii-mon-interval,omitempty"`
	InterfacesBondingMinLinks          customtypes.CustomStringValue `tfsdk:"min_links" json:"min-links,omitempty"`
	InterfacesBondingLacpRate          customtypes.CustomStringValue `tfsdk:"lacp_rate" json:"lacp-rate,omitempty"`
	InterfacesBondingMode              customtypes.CustomStringValue `tfsdk:"mode" json:"mode,omitempty"`
	InterfacesBondingMtu               customtypes.CustomStringValue `tfsdk:"mtu" json:"mtu,omitempty"`
	InterfacesBondingPrimary           customtypes.CustomStringValue `tfsdk:"primary" json:"primary,omitempty"`
	InterfacesBondingRedirect          customtypes.CustomStringValue `tfsdk:"redirect" json:"redirect,omitempty"`
	InterfacesBondingXdp               customtypes.CustomStringValue `tfsdk:"xdp" json:"xdp,omitempty"`

	// TagNodes
	InterfacesBondingVifS types.Map `tfsdk:"vif_s" json:"vif-s,omitempty"`
	InterfacesBondingVif  types.Map `tfsdk:"vif" json:"vif,omitempty"`

	// Nodes
	InterfacesBondingArpMonitor      types.Object `tfsdk:"arp_monitor" json:"arp-monitor,omitempty"`
	InterfacesBondingDhcpOptions     types.Object `tfsdk:"dhcp_options" json:"dhcp-options,omitempty"`
	InterfacesBondingDhcpvsixOptions types.Object `tfsdk:"dhcpv6_options" json:"dhcpv6-options,omitempty"`
	InterfacesBondingMirror          types.Object `tfsdk:"mirror" json:"mirror,omitempty"`
	InterfacesBondingIP              types.Object `tfsdk:"ip" json:"ip,omitempty"`
	InterfacesBondingIPvsix          types.Object `tfsdk:"ipv6" json:"ipv6,omitempty"`
	InterfacesBondingMember          types.Object `tfsdk:"member" json:"member,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o InterfacesBonding) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"address": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IP address

|  Format  |  Description  |
|----------|---------------|
|  ipv4net  |  IPv4 address and prefix length  |
|  ipv6net  |  IPv6 address and prefix length  |
|  dhcp  |  Dynamic Host Configuration Protocol  |
|  dhcpv6  |  Dynamic Host Configuration Protocol for IPv6  |

`,
		},

		"description": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Description

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Description  |

`,
		},

		"disable_link_detect": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Ignore link state changes

`,
		},

		"disable": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Administratively disable interface

`,
		},

		"vrf": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `VRF instance name

|  Format  |  Description  |
|----------|---------------|
|  txt  |  VRF instance name  |

`,
		},

		"hash_policy": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Bonding transmit hash policy

|  Format  |  Description  |
|----------|---------------|
|  layer2  |  use MAC addresses to generate the hash  |
|  layer2+3  |  combine MAC address and IP address to make hash  |
|  layer3+4  |  combine IP address and port to make hash  |
|  encap2+3  |  combine encapsulated MAC address and IP address to make hash  |
|  encap3+4  |  combine encapsulated IP address and port to make hash  |

`,

			// Default:          stringdefault.StaticString(`layer2`),
			Computed: true,
		},

		"mac": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Media Access Control (MAC) address

|  Format  |  Description  |
|----------|---------------|
|  macaddr  |  Hardware (MAC) address  |

`,
		},

		"mii_mon_interval": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Specifies the MII link monitoring frequency in milliseconds

|  Format  |  Description  |
|----------|---------------|
|  u32:0  |  Disable MII link monitoring  |
|  u32:50-1000  |  MII link monitoring frequency in milliseconds  |

`,

			// Default:          stringdefault.StaticString(`100`),
			Computed: true,
		},

		"min_links": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Minimum number of member interfaces required up before enabling bond

|  Format  |  Description  |
|----------|---------------|
|  u32:0-16  |  Minimum number of member interfaces required up before enabling bond  |

`,

			// Default:          stringdefault.StaticString(`0`),
			Computed: true,
		},

		"lacp_rate": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Rate in which we will ask our link partner to transmit LACPDU packets

|  Format  |  Description  |
|----------|---------------|
|  slow  |  Request partner to transmit LACPDUs every 30 seconds  |
|  fast  |  Request partner to transmit LACPDUs every 1 second  |

`,

			// Default:          stringdefault.StaticString(`slow`),
			Computed: true,
		},

		"mode": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Bonding mode

|  Format  |  Description  |
|----------|---------------|
|  802.3ad  |  IEEE 802.3ad Dynamic link aggregation  |
|  active-backup  |  Fault tolerant: only one slave in the bond is active  |
|  broadcast  |  Fault tolerant: transmits everything on all slave interfaces  |
|  round-robin  |  Load balance: transmit packets in sequential order  |
|  transmit-load-balance  |  Load balance: adapts based on transmit load and speed  |
|  adaptive-load-balance  |  Load balance: adapts based on transmit and receive plus ARP  |
|  xor-hash  |  Distribute based on MAC address  |

`,

			// Default:          stringdefault.StaticString(`802.3ad`),
			Computed: true,
		},

		"mtu": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Maximum Transmission Unit (MTU)

|  Format  |  Description  |
|----------|---------------|
|  u32:68-16000  |  Maximum Transmission Unit in byte  |

`,

			// Default:          stringdefault.StaticString(`1500`),
			Computed: true,
		},

		"primary": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Primary device interface

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Interface name  |

`,
		},

		"redirect": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Redirect incoming packet to destination

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Destination interface name  |

`,
		},

		"xdp": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Enable eXpress Data Path

`,
		},

		// TagNodes

		"vif_s": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: InterfacesBondingVifS{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `QinQ TAG-S Virtual Local Area Network (VLAN) ID

|  Format  |  Description  |
|----------|---------------|
|  u32:0-4094  |  QinQ Virtual Local Area Network (VLAN) ID  |

`,
		},

		"vif": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: InterfacesBondingVif{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Virtual Local Area Network (VLAN) ID

|  Format  |  Description  |
|----------|---------------|
|  u32:0-4094  |  Virtual Local Area Network (VLAN) ID  |

`,
		},

		// Nodes

		"arp_monitor": schema.SingleNestedAttribute{
			Attributes: InterfacesBondingArpMonitor{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `ARP link monitoring parameters

`,
		},

		"dhcp_options": schema.SingleNestedAttribute{
			Attributes: InterfacesBondingDhcpOptions{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `DHCP client settings/options

`,
		},

		"dhcpv6_options": schema.SingleNestedAttribute{
			Attributes: InterfacesBondingDhcpvsixOptions{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `DHCPv6 client settings/options

`,
		},

		"mirror": schema.SingleNestedAttribute{
			Attributes: InterfacesBondingMirror{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Mirror ingress/egress packets

`,
		},

		"ip": schema.SingleNestedAttribute{
			Attributes: InterfacesBondingIP{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `IPv4 routing parameters

`,
		},

		"ipv6": schema.SingleNestedAttribute{
			Attributes: InterfacesBondingIPvsix{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `IPv6 routing parameters

`,
		},

		"member": schema.SingleNestedAttribute{
			Attributes: InterfacesBondingMember{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Bridge member interfaces

`,
		},
	}
}
