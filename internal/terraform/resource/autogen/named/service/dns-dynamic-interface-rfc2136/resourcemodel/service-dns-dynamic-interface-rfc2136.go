// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// ServiceDNSDynamicInterfaceRfctwoonethreesix describes the resource data model.
type ServiceDNSDynamicInterfaceRfctwoonethreesix struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	SelfIdentifier types.String `tfsdk:"rfc2136_id" vyos:"-,self-id"`

	ParentIDServiceDNSDynamicInterface types.String `tfsdk:"interface" vyos:"interface,parent-id"`

	// LeafNodes
	LeafServiceDNSDynamicInterfaceRfctwoonethreesixKey    types.String `tfsdk:"key" vyos:"key,omitempty"`
	LeafServiceDNSDynamicInterfaceRfctwoonethreesixRecord types.List   `tfsdk:"record" vyos:"record,omitempty"`
	LeafServiceDNSDynamicInterfaceRfctwoonethreesixServer types.String `tfsdk:"server" vyos:"server,omitempty"`
	LeafServiceDNSDynamicInterfaceRfctwoonethreesixTTL    types.Number `tfsdk:"ttl" vyos:"ttl,omitempty"`
	LeafServiceDNSDynamicInterfaceRfctwoonethreesixZone   types.String `tfsdk:"zone" vyos:"zone,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// SetID configures the resource ID
func (o *ServiceDNSDynamicInterfaceRfctwoonethreesix) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ServiceDNSDynamicInterfaceRfctwoonethreesix) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"service",

		"dns",

		"dynamic",

		"interface",
		o.ParentIDServiceDNSDynamicInterface.ValueString(),

		"rfc2136",
		o.SelfIdentifier.ValueString(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceDNSDynamicInterfaceRfctwoonethreesix) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},
		"rfc2136_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `RFC2136 Update name

`,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},

		"interface_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Interface to send DDNS updates for

`,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},

		// LeafNodes

		"key": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `File containing the secret key shared with remote DNS server

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  filename  &emsp; |  File in /config/auth directory  |

`,
		},

		"record": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Record to be updated

`,
		},

		"server": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Server to be updated

`,
		},

		"ttl": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Time To Live (default: 600)

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-86400  &emsp; |  DNS forwarding cache size  |

`,

			// Default:          stringdefault.StaticString(`600`),
			Computed: true,
		},

		"zone": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Zone to be updated

`,
		},

		// Nodes

	}
}
