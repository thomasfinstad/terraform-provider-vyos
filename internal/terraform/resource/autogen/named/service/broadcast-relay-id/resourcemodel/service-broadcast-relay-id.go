// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// ServiceBroadcastRelayID describes the resource data model.
type ServiceBroadcastRelayID struct {
	ID types.Number `tfsdk:"identifier" vyos:",self-id"`

	// LeafNodes
	LeafServiceBroadcastRelayIDDisable     types.Bool   `tfsdk:"disable" vyos:"disable,omitempty"`
	LeafServiceBroadcastRelayIDAddress     types.String `tfsdk:"address" vyos:"address,omitempty"`
	LeafServiceBroadcastRelayIDDescrIPtion types.String `tfsdk:"description" vyos:"description,omitempty"`
	LeafServiceBroadcastRelayIDInterface   types.List   `tfsdk:"interface" vyos:"interface,omitempty"`
	LeafServiceBroadcastRelayIDPort        types.Number `tfsdk:"port" vyos:"port,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ServiceBroadcastRelayID) GetVyosPath() []string {
	return []string{
		"service",

		"broadcast-relay",

		"id",
		o.ID.ValueBigFloat().String(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceBroadcastRelayID) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"identifier": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Unique ID for each UDP port to forward

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-99  |  Broadcast relay instance ID  |

`,
		},

		// LeafNodes

		"disable": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Disable instance

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"address": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Set source IP of forwarded packets, otherwise original senders address is used

    |  Format  |  Description  |
    |----------|---------------|
    |  ipv4  |  Optional source address for forwarded packets  |

`,
		},

		"description": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Description

`,
		},

		"interface": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Interface to use

    |  Format  |  Description  |
    |----------|---------------|
    |  txt  |  Interface name  |

`,
		},

		"port": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Port number used by connection

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-65535  |  Numeric IP port  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ServiceBroadcastRelayID) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ServiceBroadcastRelayID) UnmarshalJSON(_ []byte) error {
	return nil
}
