// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// ServiceSnmpVthreeUser describes the resource data model.
type ServiceSnmpVthreeUser struct {
	SelfIdentifier types.String `tfsdk:"user_id" vyos:",self-id"`

	// LeafNodes
	LeafServiceSnmpVthreeUserGroup types.String `tfsdk:"group" vyos:"group,omitempty"`
	LeafServiceSnmpVthreeUserMode  types.String `tfsdk:"mode" vyos:"mode,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
	NodeServiceSnmpVthreeUserAuth    *ServiceSnmpVthreeUserAuth    `tfsdk:"auth" vyos:"auth,omitempty"`
	NodeServiceSnmpVthreeUserPrivacy *ServiceSnmpVthreeUserPrivacy `tfsdk:"privacy" vyos:"privacy,omitempty"`
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ServiceSnmpVthreeUser) GetVyosPath() []string {
	return []string{
		"service",

		"snmp",

		"v3",

		"user",
		o.SelfIdentifier.ValueString(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceSnmpVthreeUser) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, an amalgamation of the `user_id` and the parents `*_id` fields seperated by dunder `__` starting with top level ancestor.",
		},
		"user_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Specifies the user with name username

`,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},

		// LeafNodes

		"group": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Specifies group for user name

`,
		},

		"mode": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Define access permission

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ro  &emsp; |  Read-Only  |
    |  rw  &emsp; |  read write  |

`,

			// Default:          stringdefault.StaticString(`ro`),
			Computed: true,
		},

		// Nodes

		"auth": schema.SingleNestedAttribute{
			Attributes: ServiceSnmpVthreeUserAuth{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Specifies the auth

`,
		},

		"privacy": schema.SingleNestedAttribute{
			Attributes: ServiceSnmpVthreeUserPrivacy{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Defines the privacy

`,
		},
	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ServiceSnmpVthreeUser) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ServiceSnmpVthreeUser) UnmarshalJSON(_ []byte) error {
	return nil
}
