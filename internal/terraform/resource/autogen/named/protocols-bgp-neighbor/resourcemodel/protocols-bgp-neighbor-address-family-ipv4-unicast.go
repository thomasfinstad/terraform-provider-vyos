// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"encoding/json"
	"reflect"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// ProtocolsBgpNeighborAddressFamilyIPvfourUnicast describes the resource data model.
type ProtocolsBgpNeighborAddressFamilyIPvfourUnicast struct {
	// LeafNodes
	LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxAll         types.String `tfsdk:"addpath_tx_all" json:"addpath-tx-all,omitempty"`
	LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxPerAs       types.String `tfsdk:"addpath_tx_per_as" json:"addpath-tx-per-as,omitempty"`
	LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAsOverrIDe           types.String `tfsdk:"as_override" json:"as-override,omitempty"`
	LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefix        types.String `tfsdk:"maximum_prefix" json:"maximum-prefix,omitempty"`
	LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefixOut     types.String `tfsdk:"maximum_prefix_out" json:"maximum-prefix-out,omitempty"`
	LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRemovePrivateAs      types.String `tfsdk:"remove_private_as" json:"remove-private-as,omitempty"`
	LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteReflectorClient types.String `tfsdk:"route_reflector_client" json:"route-reflector-client,omitempty"`
	LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteServerClient    types.String `tfsdk:"route_server_client" json:"route-server-client,omitempty"`
	LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastUnsuppressMap        types.String `tfsdk:"unsuppress_map" json:"unsuppress-map,omitempty"`
	LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastWeight               types.String `tfsdk:"weight" json:"weight,omitempty"`

	// TagNodes

	// Nodes
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastCapability             *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastCapability             `tfsdk:"capability" json:"capability,omitempty"`
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastPrefixList             *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastPrefixList             `tfsdk:"prefix_list" json:"prefix-list,omitempty"`
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastConditionallyAdvertise *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastConditionallyAdvertise `tfsdk:"conditionally_advertise" json:"conditionally-advertise,omitempty"`
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastAllowasIn              *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastAllowasIn              `tfsdk:"allowas_in" json:"allowas-in,omitempty"`
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastAttributeUnchanged     *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastAttributeUnchanged     `tfsdk:"attribute_unchanged" json:"attribute-unchanged,omitempty"`
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDisableSendCommunity   *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastDisableSendCommunity   `tfsdk:"disable_send_community" json:"disable-send-community,omitempty"`
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDistributeList         *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastDistributeList         `tfsdk:"distribute_list" json:"distribute-list,omitempty"`
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastFilterList             *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastFilterList             `tfsdk:"filter_list" json:"filter-list,omitempty"`
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastNexthopSelf            *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastNexthopSelf            `tfsdk:"nexthop_self" json:"nexthop-self,omitempty"`
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteMap               *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteMap               `tfsdk:"route_map" json:"route-map,omitempty"`
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastSoftReconfiguration    *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastSoftReconfiguration    `tfsdk:"soft_reconfiguration" json:"soft-reconfiguration,omitempty"`
	NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDefaultOriginate       *ProtocolsBgpNeighborAddressFamilyIPvfourUnicastDefaultOriginate       `tfsdk:"default_originate" json:"default-originate,omitempty"`
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsBgpNeighborAddressFamilyIPvfourUnicast) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"addpath_tx_all": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Use addpath to advertise all paths to a neighbor

`,
		},

		"addpath_tx_per_as": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Use addpath to advertise the bestpath per each neighboring AS

`,
		},

		"as_override": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Override ASN in outbound updates to configured neighbor local-as

`,
		},

		"maximum_prefix": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Maximum number of prefixes to accept from this peer

|  Format  |  Description  |
|----------|---------------|
|  u32:1-4294967295  |  Prefix limit  |

`,
		},

		"maximum_prefix_out": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Maximum number of prefixes to be sent to this peer

|  Format  |  Description  |
|----------|---------------|
|  u32:1-4294967295  |  Prefix limit  |

`,
		},

		"remove_private_as": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Remove private AS numbers from AS path in outbound route updates

`,
		},

		"route_reflector_client": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Peer is a route reflector client

`,
		},

		"route_server_client": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Peer is a route server client

`,
		},

		"unsuppress_map": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Route-map to selectively unsuppress suppressed routes

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Route map name  |

`,
		},

		"weight": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Default weight for routes from this peer

|  Format  |  Description  |
|----------|---------------|
|  u32:1-65535  |  Default weight  |

`,
		},

		// TagNodes

		// Nodes

		"capability": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastCapability{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Advertise capabilities to this neighbor (IPv4)

`,
		},

		"prefix_list": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastPrefixList{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `IPv4-Prefix-list to filter route updates to/from this peer

`,
		},

		"conditionally_advertise": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastConditionallyAdvertise{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Use route-map to conditionally advertise routes

`,
		},

		"allowas_in": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastAllowasIn{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Accept route that contains the local-as in the as-path

`,
		},

		"attribute_unchanged": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastAttributeUnchanged{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `BGP attributes are sent unchanged

`,
		},

		"disable_send_community": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastDisableSendCommunity{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Disable sending community attributes to this peer

`,
		},

		"distribute_list": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastDistributeList{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Access-list to filter route updates to/from this peer-group

`,
		},

		"filter_list": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastFilterList{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `as-path-list to filter route updates to/from this peer

`,
		},

		"nexthop_self": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastNexthopSelf{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Disable the next hop calculation for this peer

`,
		},

		"route_map": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteMap{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Route-map to filter route updates to/from this peer

`,
		},

		"soft_reconfiguration": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastSoftReconfiguration{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Soft reconfiguration for peer

`,
		},

		"default_originate": schema.SingleNestedAttribute{
			Attributes: ProtocolsBgpNeighborAddressFamilyIPvfourUnicastDefaultOriginate{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Originate default route to this peer

`,
		},
	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ProtocolsBgpNeighborAddressFamilyIPvfourUnicast) MarshalJSON() ([]byte, error) {
	jsonData := make(map[string]interface{})

	// Leafs

	if !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxAll.IsNull() && !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxAll.IsUnknown() {
		jsonData["addpath-tx-all"] = o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxAll.ValueString()
	}

	if !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxPerAs.IsNull() && !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxPerAs.IsUnknown() {
		jsonData["addpath-tx-per-as"] = o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxPerAs.ValueString()
	}

	if !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAsOverrIDe.IsNull() && !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAsOverrIDe.IsUnknown() {
		jsonData["as-override"] = o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAsOverrIDe.ValueString()
	}

	if !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefix.IsNull() && !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefix.IsUnknown() {
		jsonData["maximum-prefix"] = o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefix.ValueString()
	}

	if !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefixOut.IsNull() && !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefixOut.IsUnknown() {
		jsonData["maximum-prefix-out"] = o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefixOut.ValueString()
	}

	if !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRemovePrivateAs.IsNull() && !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRemovePrivateAs.IsUnknown() {
		jsonData["remove-private-as"] = o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRemovePrivateAs.ValueString()
	}

	if !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteReflectorClient.IsNull() && !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteReflectorClient.IsUnknown() {
		jsonData["route-reflector-client"] = o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteReflectorClient.ValueString()
	}

	if !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteServerClient.IsNull() && !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteServerClient.IsUnknown() {
		jsonData["route-server-client"] = o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteServerClient.ValueString()
	}

	if !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastUnsuppressMap.IsNull() && !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastUnsuppressMap.IsUnknown() {
		jsonData["unsuppress-map"] = o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastUnsuppressMap.ValueString()
	}

	if !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastWeight.IsNull() && !o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastWeight.IsUnknown() {
		jsonData["weight"] = o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastWeight.ValueString()
	}

	// Tags

	// Nodes

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastCapability).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastCapability)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["capability"] = subData
	}

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastPrefixList).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastPrefixList)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["prefix-list"] = subData
	}

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastConditionallyAdvertise).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastConditionallyAdvertise)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["conditionally-advertise"] = subData
	}

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastAllowasIn).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastAllowasIn)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["allowas-in"] = subData
	}

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastAttributeUnchanged).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastAttributeUnchanged)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["attribute-unchanged"] = subData
	}

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDisableSendCommunity).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDisableSendCommunity)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["disable-send-community"] = subData
	}

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDistributeList).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDistributeList)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["distribute-list"] = subData
	}

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastFilterList).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastFilterList)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["filter-list"] = subData
	}

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastNexthopSelf).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastNexthopSelf)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["nexthop-self"] = subData
	}

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteMap).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteMap)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["route-map"] = subData
	}

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastSoftReconfiguration).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastSoftReconfiguration)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["soft-reconfiguration"] = subData
	}

	if !reflect.ValueOf(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDefaultOriginate).IsZero() {
		subJSONStr, err := json.Marshal(o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDefaultOriginate)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["default-originate"] = subData
	}

	// Return compiled data
	ret, err := json.Marshal(jsonData)
	if err != nil {
		return nil, err
	}
	return ret, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ProtocolsBgpNeighborAddressFamilyIPvfourUnicast) UnmarshalJSON(jsonStr []byte) error {
	jsonData := make(map[string]interface{})
	err := json.Unmarshal(jsonStr, &jsonData)
	if err != nil {
		return err
	}

	// Leafs

	if value, ok := jsonData["addpath-tx-all"]; ok {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxAll = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxAll = basetypes.NewStringNull()
	}

	if value, ok := jsonData["addpath-tx-per-as"]; ok {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxPerAs = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAddpathTxPerAs = basetypes.NewStringNull()
	}

	if value, ok := jsonData["as-override"]; ok {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAsOverrIDe = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastAsOverrIDe = basetypes.NewStringNull()
	}

	if value, ok := jsonData["maximum-prefix"]; ok {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefix = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefix = basetypes.NewStringNull()
	}

	if value, ok := jsonData["maximum-prefix-out"]; ok {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefixOut = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastMaximumPrefixOut = basetypes.NewStringNull()
	}

	if value, ok := jsonData["remove-private-as"]; ok {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRemovePrivateAs = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRemovePrivateAs = basetypes.NewStringNull()
	}

	if value, ok := jsonData["route-reflector-client"]; ok {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteReflectorClient = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteReflectorClient = basetypes.NewStringNull()
	}

	if value, ok := jsonData["route-server-client"]; ok {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteServerClient = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteServerClient = basetypes.NewStringNull()
	}

	if value, ok := jsonData["unsuppress-map"]; ok {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastUnsuppressMap = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastUnsuppressMap = basetypes.NewStringNull()
	}

	if value, ok := jsonData["weight"]; ok {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastWeight = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsBgpNeighborAddressFamilyIPvfourUnicastWeight = basetypes.NewStringNull()
	}

	// Tags

	// Nodes
	if value, ok := jsonData["capability"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastCapability = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastCapability{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastCapability)
		if err != nil {
			return err
		}
	}
	if value, ok := jsonData["prefix-list"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastPrefixList = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastPrefixList{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastPrefixList)
		if err != nil {
			return err
		}
	}
	if value, ok := jsonData["conditionally-advertise"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastConditionallyAdvertise = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastConditionallyAdvertise{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastConditionallyAdvertise)
		if err != nil {
			return err
		}
	}
	if value, ok := jsonData["allowas-in"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastAllowasIn = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastAllowasIn{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastAllowasIn)
		if err != nil {
			return err
		}
	}
	if value, ok := jsonData["attribute-unchanged"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastAttributeUnchanged = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastAttributeUnchanged{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastAttributeUnchanged)
		if err != nil {
			return err
		}
	}
	if value, ok := jsonData["disable-send-community"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDisableSendCommunity = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastDisableSendCommunity{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDisableSendCommunity)
		if err != nil {
			return err
		}
	}
	if value, ok := jsonData["distribute-list"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDistributeList = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastDistributeList{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDistributeList)
		if err != nil {
			return err
		}
	}
	if value, ok := jsonData["filter-list"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastFilterList = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastFilterList{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastFilterList)
		if err != nil {
			return err
		}
	}
	if value, ok := jsonData["nexthop-self"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastNexthopSelf = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastNexthopSelf{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastNexthopSelf)
		if err != nil {
			return err
		}
	}
	if value, ok := jsonData["route-map"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteMap = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteMap{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastRouteMap)
		if err != nil {
			return err
		}
	}
	if value, ok := jsonData["soft-reconfiguration"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastSoftReconfiguration = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastSoftReconfiguration{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastSoftReconfiguration)
		if err != nil {
			return err
		}
	}
	if value, ok := jsonData["default-originate"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDefaultOriginate = &ProtocolsBgpNeighborAddressFamilyIPvfourUnicastDefaultOriginate{}

		err = json.Unmarshal(subJSONStr, o.NodeProtocolsBgpNeighborAddressFamilyIPvfourUnicastDefaultOriginate)
		if err != nil {
			return err
		}
	}

	return nil
}
