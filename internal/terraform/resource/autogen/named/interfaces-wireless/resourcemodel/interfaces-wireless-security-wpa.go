// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// InterfacesWirelessSecURItyWpa describes the resource data model.
type InterfacesWirelessSecURItyWpa struct {
	// LeafNodes
	InterfacesWirelessSecURItyWpaCIPher      customtypes.CustomStringValue `tfsdk:"cipher" json:"cipher,omitempty"`
	InterfacesWirelessSecURItyWpaGroupCIPher customtypes.CustomStringValue `tfsdk:"group_cipher" json:"group-cipher,omitempty"`
	InterfacesWirelessSecURItyWpaMode        customtypes.CustomStringValue `tfsdk:"mode" json:"mode,omitempty"`
	InterfacesWirelessSecURItyWpaPassphrase  customtypes.CustomStringValue `tfsdk:"passphrase" json:"passphrase,omitempty"`

	// TagNodes

	// Nodes
	InterfacesWirelessSecURItyWpaRadius types.Object `tfsdk:"radius" json:"radius,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o InterfacesWirelessSecURItyWpa) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"cipher": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Cipher suite for WPA unicast packets

|  Format  |  Description  |
|----------|---------------|
|  GCMP-256  |  AES in Galois/counter mode with 256-bit key  |
|  GCMP  |  AES in Galois/counter mode with 128-bit key  |
|  CCMP-256  |  AES in Counter mode with CBC-MAC with 256-bit key  |
|  CCMP  |  AES in Counter mode with CBC-MAC [RFC 3610, IEEE 802.11i/D7.0] (supported on all WPA2 APs)  |
|  TKIP  |  Temporal Key Integrity Protocol [IEEE 802.11i/D7.0]  |

`,
		},

		"group_cipher": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Cipher suite for WPA multicast and broadcast packets

|  Format  |  Description  |
|----------|---------------|
|  GCMP-256  |  AES in Galois/counter mode with 256-bit key  |
|  GCMP  |  AES in Galois/counter mode with 128-bit key  |
|  CCMP-256  |  AES in Counter mode with CBC-MAC with 256-bit key  |
|  CCMP  |  AES in Counter mode with CBC-MAC [RFC 3610, IEEE 802.11i/D7.0] (supported on all WPA2 APs)  |
|  TKIP  |  Temporal Key Integrity Protocol [IEEE 802.11i/D7.0]  |

`,
		},

		"mode": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `WPA mode

|  Format  |  Description  |
|----------|---------------|
|  wpa  |  WPA (IEEE 802.11i/D3.0)  |
|  wpa2  |  WPA2 (full IEEE 802.11i/RSN)  |
|  wpa+wpa2  |  Allow both WPA and WPA2  |

`,

			// Default:          stringdefault.StaticString(`wpa+wpa2`),
			Computed: true,
		},

		"passphrase": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `WPA personal shared pass phrase. If you are using special characters in the WPA passphrase then single quotes are required.

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Passphrase of at least 8 but not more than 63 printable characters  |

`,
		},

		// TagNodes

		// Nodes

		"radius": schema.SingleNestedAttribute{
			Attributes: InterfacesWirelessSecURItyWpaRadius{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `RADIUS based user authentication

`,
		},
	}
}
