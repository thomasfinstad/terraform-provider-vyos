// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// InterfacesWirelessCapabilitiesVht describes the resource data model.
type InterfacesWirelessCapabilitiesVht struct {
	// LeafNodes
	InterfacesWirelessCapabilitiesVhtAntennaCount        customtypes.CustomStringValue `tfsdk:"antenna_count" json:"antenna-count,omitempty"`
	InterfacesWirelessCapabilitiesVhtAntennaPatternFixed customtypes.CustomStringValue `tfsdk:"antenna_pattern_fixed" json:"antenna-pattern-fixed,omitempty"`
	InterfacesWirelessCapabilitiesVhtBeamform            customtypes.CustomStringValue `tfsdk:"beamform" json:"beamform,omitempty"`
	InterfacesWirelessCapabilitiesVhtChannelSetWIDth     customtypes.CustomStringValue `tfsdk:"channel_set_width" json:"channel-set-width,omitempty"`
	InterfacesWirelessCapabilitiesVhtLdpc                customtypes.CustomStringValue `tfsdk:"ldpc" json:"ldpc,omitempty"`
	InterfacesWirelessCapabilitiesVhtLinkAdaptation      customtypes.CustomStringValue `tfsdk:"link_adaptation" json:"link-adaptation,omitempty"`
	InterfacesWirelessCapabilitiesVhtMaxMpduExp          customtypes.CustomStringValue `tfsdk:"max_mpdu_exp" json:"max-mpdu-exp,omitempty"`
	InterfacesWirelessCapabilitiesVhtMaxMpdu             customtypes.CustomStringValue `tfsdk:"max_mpdu" json:"max-mpdu,omitempty"`
	InterfacesWirelessCapabilitiesVhtShortGi             customtypes.CustomStringValue `tfsdk:"short_gi" json:"short-gi,omitempty"`
	InterfacesWirelessCapabilitiesVhtTxPowersave         customtypes.CustomStringValue `tfsdk:"tx_powersave" json:"tx-powersave,omitempty"`
	InterfacesWirelessCapabilitiesVhtVhtCf               customtypes.CustomStringValue `tfsdk:"vht_cf" json:"vht-cf,omitempty"`

	// TagNodes

	// Nodes
	InterfacesWirelessCapabilitiesVhtCenterChannelFreq types.Object `tfsdk:"center_channel_freq" json:"center-channel-freq,omitempty"`
	InterfacesWirelessCapabilitiesVhtStbc              types.Object `tfsdk:"stbc" json:"stbc,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o InterfacesWirelessCapabilitiesVht) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"antenna_count": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Number of antennas on this card

|  Format  |  Description  |
|----------|---------------|
|  u32:1-8  |  Number of antennas for this card  |
`,
		},

		"antenna_pattern_fixed": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Set if antenna pattern does not change during the lifetime of an association

`,
		},

		"beamform": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Beamforming capabilities

|  Format  |  Description  |
|----------|---------------|
|  single-user-beamformer  |  Support for operation as single user beamformer  |
|  single-user-beamformee  |  Support for operation as single user beamformee  |
|  multi-user-beamformer  |  Support for operation as multi user beamformer  |
|  multi-user-beamformee  |  Support for operation as multi user beamformee  |
`,
		},

		"channel_set_width": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `VHT operating Channel width

|  Format  |  Description  |
|----------|---------------|
|  0  |  20 or 40 MHz channel width  |
|  1  |  80 MHz channel width  |
|  2  |  160 MHz channel width  |
|  3  |  80+80 MHz channel width  |
`,
		},

		"ldpc": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Enable LDPC (Low Density Parity Check) coding capability

`,
		},

		"link_adaptation": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `VHT link adaptation capabilities

|  Format  |  Description  |
|----------|---------------|
|  unsolicited  |  Station provides only unsolicited VHT MFB  |
|  both  |  Station can provide VHT MFB in response to VHT MRQ and unsolicited VHT MFB  |
`,
		},

		"max_mpdu_exp": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Set the maximum length of A-MPDU pre-EOF padding that the station can receive

|  Format  |  Description  |
|----------|---------------|
|  u32:0-7  |  Maximum length of A-MPDU pre-EOF padding = 2 pow(13 + x) -1 octets  |
`,
		},

		"max_mpdu": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Increase Maximum MPDU length to 7991 or 11454 octets (otherwise: 3895 octets)

|  Format  |  Description  |
|----------|---------------|
|  7991  |  ncrease Maximum MPDU length to 7991 octets  |
|  11454  |  ncrease Maximum MPDU length to 11454 octets  |
`,
		},

		"short_gi": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Short GI capabilities

|  Format  |  Description  |
|----------|---------------|
|  80  |  Short GI for 80 MHz  |
|  160  |  Short GI for 160 MHz  |
`,
		},

		"tx_powersave": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Enable VHT TXOP Power Save Mode

`,
		},

		"vht_cf": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Station supports receiving VHT variant HT Control field

`,
		},

		// TagNodes

		// Nodes

		"center_channel_freq": schema.SingleNestedAttribute{
			Attributes: InterfacesWirelessCapabilitiesVhtCenterChannelFreq{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `VHT operating channel center frequency

`,
		},

		"stbc": schema.SingleNestedAttribute{
			Attributes: InterfacesWirelessCapabilitiesVhtStbc{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Support for sending and receiving PPDU using STBC (Space Time Block Coding)

`,
		},
	}
}
