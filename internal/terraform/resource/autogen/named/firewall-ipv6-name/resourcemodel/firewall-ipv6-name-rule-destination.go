// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// FirewallIPvsixNameRuleDestination describes the resource data model.
type FirewallIPvsixNameRuleDestination struct {
	// LeafNodes
	FirewallIPvsixNameRuleDestinationAddress     customtypes.CustomStringValue `tfsdk:"address" json:"address,omitempty"`
	FirewallIPvsixNameRuleDestinationFqdn        customtypes.CustomStringValue `tfsdk:"fqdn" json:"fqdn,omitempty"`
	FirewallIPvsixNameRuleDestinationPort        customtypes.CustomStringValue `tfsdk:"port" json:"port,omitempty"`
	FirewallIPvsixNameRuleDestinationAddressMask customtypes.CustomStringValue `tfsdk:"address_mask" json:"address-mask,omitempty"`
	FirewallIPvsixNameRuleDestinationMacAddress  customtypes.CustomStringValue `tfsdk:"mac_address" json:"mac-address,omitempty"`

	// TagNodes

	// Nodes
	FirewallIPvsixNameRuleDestinationGeoIP types.Object `tfsdk:"geoip" json:"geoip,omitempty"`
	FirewallIPvsixNameRuleDestinationGroup types.Object `tfsdk:"group" json:"group,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o FirewallIPvsixNameRuleDestination) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"address": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IP address, subnet, or range

|  Format  |  Description  |
|----------|---------------|
|  ipv6  |  IP address to match  |
|  ipv6net  |  Subnet to match  |
|  ipv6range  |  IP range to match  |
|  !ipv6  |  Match everything except the specified address  |
|  !ipv6net  |  Match everything except the specified prefix  |
|  !ipv6range  |  Match everything except the specified range  |
`,
		},

		"fqdn": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Fully qualified domain name

|  Format  |  Description  |
|----------|---------------|
|  <fqdn>  |  Fully qualified domain name  |
`,
		},

		"port": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Port

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Named port (any name in /etc/services, e.g., http)  |
|  u32:1-65535  |  Numbered port  |
|  <start-end>  |  Numbered port range (e.g. 1001-1005)  |
|     |  \n\n Multiple destination ports can be specified as a
                          comma-separated list.\n For example: 'telnet,http,123,1001-1005'  |
`,
		},

		"address_mask": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IP mask

|  Format  |  Description  |
|----------|---------------|
|  ipv6  |  IP mask to apply  |
`,
		},

		"mac_address": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `MAC address

|  Format  |  Description  |
|----------|---------------|
|  macaddr  |  MAC address to match  |
|  !macaddr  |  Match everything except the specified MAC address  |
`,
		},

		// TagNodes

		// Nodes

		"geoip": schema.SingleNestedAttribute{
			Attributes: FirewallIPvsixNameRuleDestinationGeoIP{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `GeoIP options - Data provided by DB-IP.com

`,
		},

		"group": schema.SingleNestedAttribute{
			Attributes: FirewallIPvsixNameRuleDestinationGroup{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Group

`,
		},
	}
}
