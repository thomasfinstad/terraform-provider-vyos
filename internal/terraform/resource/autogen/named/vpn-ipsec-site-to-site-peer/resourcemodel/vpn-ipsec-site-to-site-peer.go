// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// VpnIPsecSiteToSitePeer describes the resource data model.
type VpnIPsecSiteToSitePeer struct {
	// LeafNodes
	VpnIPsecSiteToSitePeerDisable               customtypes.CustomStringValue `tfsdk:"disable" json:"disable,omitempty"`
	VpnIPsecSiteToSitePeerConnectionType        customtypes.CustomStringValue `tfsdk:"connection_type" json:"connection-type,omitempty"`
	VpnIPsecSiteToSitePeerDefaultEspGroup       customtypes.CustomStringValue `tfsdk:"default_esp_group" json:"default-esp-group,omitempty"`
	VpnIPsecSiteToSitePeerDescrIPtion           customtypes.CustomStringValue `tfsdk:"description" json:"description,omitempty"`
	VpnIPsecSiteToSitePeerDhcpInterface         customtypes.CustomStringValue `tfsdk:"dhcp_interface" json:"dhcp-interface,omitempty"`
	VpnIPsecSiteToSitePeerForceUDPEncapsulation customtypes.CustomStringValue `tfsdk:"force_udp_encapsulation" json:"force-udp-encapsulation,omitempty"`
	VpnIPsecSiteToSitePeerIkeGroup              customtypes.CustomStringValue `tfsdk:"ike_group" json:"ike-group,omitempty"`
	VpnIPsecSiteToSitePeerIkevtwoReauth         customtypes.CustomStringValue `tfsdk:"ikev2_reauth" json:"ikev2-reauth,omitempty"`
	VpnIPsecSiteToSitePeerLocalAddress          customtypes.CustomStringValue `tfsdk:"local_address" json:"local-address,omitempty"`
	VpnIPsecSiteToSitePeerRemoteAddress         customtypes.CustomStringValue `tfsdk:"remote_address" json:"remote-address,omitempty"`
	VpnIPsecSiteToSitePeerVirtualAddress        customtypes.CustomStringValue `tfsdk:"virtual_address" json:"virtual-address,omitempty"`

	// TagNodes
	VpnIPsecSiteToSitePeerTunnel types.Map `tfsdk:"tunnel" json:"tunnel,omitempty"`

	// Nodes
	VpnIPsecSiteToSitePeerAuthentication types.Object `tfsdk:"authentication" json:"authentication,omitempty"`
	VpnIPsecSiteToSitePeerVti            types.Object `tfsdk:"vti" json:"vti,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o VpnIPsecSiteToSitePeer) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"disable": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Disable instance

`,
		},

		"connection_type": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Connection type

|  Format  |  Description  |
|----------|---------------|
|  initiate  |  Bring the connection up immediately  |
|  respond  |  Wait for the peer to initiate the connection  |
|  none  |  Load the connection only  |
`,
		},

		"default_esp_group": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Defult ESP group name

`,
		},

		"description": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Description

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Description  |
`,
		},

		"dhcp_interface": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `DHCP interface supplying next-hop IP address

|  Format  |  Description  |
|----------|---------------|
|  txt  |  DHCP interface name  |
`,
		},

		"force_udp_encapsulation": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Force UDP encapsulation

`,
		},

		"ike_group": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Internet Key Exchange (IKE) group name

`,
		},

		"ikev2_reauth": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Re-authentication of the remote peer during an IKE re-key (IKEv2 only)

|  Format  |  Description  |
|----------|---------------|
|  yes  |  Enable remote host re-autentication during an IKE re-key. Currently broken due to a strong swan bug  |
|  no  |  Disable remote host re-authenticaton during an IKE re-key.  |
|  inherit  |  Inherit the reauth configuration form your IKE-group  |
`,
		},

		"local_address": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IPv4 or IPv6 address of a local interface to use for VPN

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  IPv4 address of a local interface for VPN  |
|  ipv6  |  IPv6 address of a local interface for VPN  |
|  any  |  Allow any IPv4 address present on the system to be used for VPN  |
`,
		},

		"remote_address": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IPv4 or IPv6 address of the remote peer

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  IPv4 address of the remote peer  |
|  ipv6  |  IPv6 address of the remote peer  |
|  hostname  |  Fully qualified domain name of the remote peer  |
|  any  |  Allow any IP address of the remote peer  |
`,
		},

		"virtual_address": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Initiator request virtual-address from peer

|  Format  |  Description  |
|----------|---------------|
|  ipv4  |  Request IPv4 address from peer  |
|  ipv6  |  Request IPv6 address from peer  |
`,
		},

		// TagNodes

		"tunnel": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: VpnIPsecSiteToSitePeerTunnel{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Peer tunnel

|  Format  |  Description  |
|----------|---------------|
|  u32  |  Peer tunnel  |
`,
		},

		// Nodes

		"authentication": schema.SingleNestedAttribute{
			Attributes: VpnIPsecSiteToSitePeerAuthentication{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Peer authentication

`,
		},

		"vti": schema.SingleNestedAttribute{
			Attributes: VpnIPsecSiteToSitePeerVti{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Virtual tunnel interface

`,
		},
	}
}
