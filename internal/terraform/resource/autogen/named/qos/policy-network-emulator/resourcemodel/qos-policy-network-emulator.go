// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// QosPolicyNetworkEmulator describes the resource data model.
type QosPolicyNetworkEmulator struct {
	ID types.String `tfsdk:"identifier" vyos:",self-id"`

	// LeafNodes
	LeafQosPolicyNetworkEmulatorDescrIPtion types.String `tfsdk:"description" vyos:"description,omitempty"`
	LeafQosPolicyNetworkEmulatorBandwIDth   types.String `tfsdk:"bandwidth" vyos:"bandwidth,omitempty"`
	LeafQosPolicyNetworkEmulatorDelay       types.String `tfsdk:"delay" vyos:"delay,omitempty"`
	LeafQosPolicyNetworkEmulatorCorruption  types.String `tfsdk:"corruption" vyos:"corruption,omitempty"`
	LeafQosPolicyNetworkEmulatorDuplicate   types.String `tfsdk:"duplicate" vyos:"duplicate,omitempty"`
	LeafQosPolicyNetworkEmulatorLoss        types.String `tfsdk:"loss" vyos:"loss,omitempty"`
	LeafQosPolicyNetworkEmulatorReordering  types.String `tfsdk:"reordering" vyos:"reordering,omitempty"`
	LeafQosPolicyNetworkEmulatorQueueLimit  types.Number `tfsdk:"queue_limit" vyos:"queue-limit,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *QosPolicyNetworkEmulator) GetVyosPath() []string {
	return []string{
		"qos",

		"policy",

		"network-emulator",
		o.ID.ValueString(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o QosPolicyNetworkEmulator) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"identifier": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Network emulator policy

    |  Format  |  Description  |
    |----------|---------------|
    |  txt  |  Policy name  |

`,
		},

		// LeafNodes

		"description": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Description

    |  Format  |  Description  |
    |----------|---------------|
    |  txt  |  Description  |

`,
		},

		"bandwidth": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Available bandwidth for this policy

    |  Format  |  Description  |
    |----------|---------------|
    |  <number>  |  Bits per second  |
    |  <number>bit  |  Bits per second  |
    |  <number>kbit  |  Kilobits per second  |
    |  <number>mbit  |  Megabits per second  |
    |  <number>gbit  |  Gigabits per second  |
    |  <number>tbit  |  Terabits per second  |
    |  <number>%  |  Percentage of interface link speed  |

`,
		},

		"delay": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Adds delay to packets outgoing to chosen network interface

    |  Format  |  Description  |
    |----------|---------------|
    |  <number>  |  Time in milliseconds  |

`,
		},

		"corruption": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Introducing error in a random position for chosen percent of packets

    |  Format  |  Description  |
    |----------|---------------|
    |  <number>  |  Percentage of packets affected  |

`,
		},

		"duplicate": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Cosen percent of packets is duplicated before queuing them

    |  Format  |  Description  |
    |----------|---------------|
    |  <number>  |  Percentage of packets affected  |

`,
		},

		"loss": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Add independent loss probability to the packets outgoing to chosen network interface

    |  Format  |  Description  |
    |----------|---------------|
    |  <number>  |  Percentage of packets affected  |

`,
		},

		"reordering": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Emulated packet reordering percentage

    |  Format  |  Description  |
    |----------|---------------|
    |  <number>  |  Percentage of packets affected  |

`,
		},

		"queue_limit": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Maximum queue size

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-4294967295  |  Queue size in packets  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *QosPolicyNetworkEmulator) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *QosPolicyNetworkEmulator) UnmarshalJSON(_ []byte) error {
	return nil
}
