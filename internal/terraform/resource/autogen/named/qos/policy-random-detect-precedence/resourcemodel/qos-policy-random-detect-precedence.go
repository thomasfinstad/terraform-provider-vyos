// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// QosPolicyRandomDetectPrecedence describes the resource data model.
type QosPolicyRandomDetectPrecedence struct {
	SelfIdentifier types.Number `tfsdk:"precedence_id" vyos:",self-id"`

	ParentIDQosPolicyRandomDetect types.String `tfsdk:"random_detect" vyos:"random-detect,parent-id"`

	// LeafNodes
	LeafQosPolicyRandomDetectPrecedenceQueueLimit       types.Number `tfsdk:"queue_limit" vyos:"queue-limit,omitempty"`
	LeafQosPolicyRandomDetectPrecedenceAveragePacket    types.Number `tfsdk:"average_packet" vyos:"average-packet,omitempty"`
	LeafQosPolicyRandomDetectPrecedenceMarkProbability  types.String `tfsdk:"mark_probability" vyos:"mark-probability,omitempty"`
	LeafQosPolicyRandomDetectPrecedenceMaximumThreshold types.Number `tfsdk:"maximum_threshold" vyos:"maximum-threshold,omitempty"`
	LeafQosPolicyRandomDetectPrecedenceMinimumThreshold types.Number `tfsdk:"minimum_threshold" vyos:"minimum-threshold,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *QosPolicyRandomDetectPrecedence) GetVyosPath() []string {
	return []string{
		"qos",

		"policy",

		"random-detect",
		o.ParentIDQosPolicyRandomDetect.ValueString(),

		"precedence",
		o.SelfIdentifier.ValueBigFloat().String(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o QosPolicyRandomDetectPrecedence) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, an amalgamation of the `precedence_id` and the parents `*_id` fields seperated by dunder `__` starting with top level ancestor.",
		},
		"precedence_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `IP precedence

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-7  &emsp; |  IP precedence value  |

`,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},

		"random_detect_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Weighted Random Early Detect policy

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Policy name  |

`,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},

		// LeafNodes

		"queue_limit": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Maximum queue size

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-4294967295  &emsp; |  Queue size in packets  |

`,
		},

		"average_packet": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Average packet size (bytes)

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 16-10240  &emsp; |  Average packet size in bytes  |

`,

			// Default:          stringdefault.StaticString(`1024`),
			Computed: true,
		},

		"mark_probability": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Mark probability for this precedence

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  <number>  &emsp; |  Numeric value (1/N)  |

`,

			// Default:          stringdefault.StaticString(`10`),
			Computed: true,
		},

		"maximum_threshold": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Maximum threshold for random detection

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-4096  &emsp; |  Maximum Threshold in packets  |

`,

			// Default:          stringdefault.StaticString(`18`),
			Computed: true,
		},

		"minimum_threshold": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Minimum  threshold for random detection

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 0-4096  &emsp; |  Maximum Threshold in packets  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *QosPolicyRandomDetectPrecedence) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *QosPolicyRandomDetectPrecedence) UnmarshalJSON(_ []byte) error {
	return nil
}
