// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// NatSourceRuleDestination describes the resource data model.
type NatSourceRuleDestination struct {
	// LeafNodes
	LeafNatSourceRuleDestinationAddress types.String `tfsdk:"address" vyos:"address,omitempty"`
	LeafNatSourceRuleDestinationPort    types.String `tfsdk:"port" vyos:"port,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
	NodeNatSourceRuleDestinationGroup *NatSourceRuleDestinationGroup `tfsdk:"group" vyos:"group,omitempty"`
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o NatSourceRuleDestination) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"address": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `IP address, subnet, or range

    |  Format  |  Description  |
    |----------|---------------|
    |  ipv4  |  IPv4 address to match  |
    |  ipv4net  |  IPv4 prefix to match  |
    |  ipv4range  |  IPv4 address range to match  |
    |  !ipv4  |  Match everything except the specified address  |
    |  !ipv4net  |  Match everything except the specified prefix  |
    |  !ipv4range  |  Match everything except the specified range  |

`,
		},

		"port": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Port number

    |  Format  |  Description  |
    |----------|---------------|
    |  txt  |  Named port (any name in /etc/services, e.g., http)  |
    |  u32:1-65535  |  Numeric IP port  |
    |  start-end  |  Numbered port range (e.g. 1001-1005)  |
    |   |   |

`,
		},

		// Nodes

		"group": schema.SingleNestedAttribute{
			Attributes: NatSourceRuleDestinationGroup{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Group

`,
		},
	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *NatSourceRuleDestination) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *NatSourceRuleDestination) UnmarshalJSON(_ []byte) error {
	return nil
}
