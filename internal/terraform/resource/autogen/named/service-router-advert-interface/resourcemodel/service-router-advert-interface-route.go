// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"encoding/json"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// ServiceRouterAdvertInterfaceRoute describes the resource data model.
type ServiceRouterAdvertInterfaceRoute struct {
	// LeafNodes
	LeafServiceRouterAdvertInterfaceRouteValIDLifetime   types.String `tfsdk:"valid_lifetime" json:"valid-lifetime,omitempty"`
	LeafServiceRouterAdvertInterfaceRouteRoutePreference types.String `tfsdk:"route_preference" json:"route-preference,omitempty"`
	LeafServiceRouterAdvertInterfaceRouteNoRemoveRoute   types.String `tfsdk:"no_remove_route" json:"no-remove-route,omitempty"`

	// TagNodes

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceRouterAdvertInterfaceRoute) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"valid_lifetime": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Time in seconds that the route will remain valid

|  Format  |  Description  |
|----------|---------------|
|  u32:1-4294967295  |  Time in seconds that the route will remain valid  |
|  infinity  |  Route will remain preferred forever  |

`,

			// Default:          stringdefault.StaticString(`1800`),
			Computed: true,
		},

		"route_preference": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Preference associated with the route,

|  Format  |  Description  |
|----------|---------------|
|  low  |  Route has low preference  |
|  medium  |  Route has medium preference  |
|  high  |  Route has high preference  |

`,

			// Default:          stringdefault.StaticString(`medium`),
			Computed: true,
		},

		"no_remove_route": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Do not announce this route with a zero second lifetime upon shutdown

`,
		},

		// TagNodes

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ServiceRouterAdvertInterfaceRoute) MarshalJSON() ([]byte, error) {
	jsonData := make(map[string]interface{})

	// Leafs

	if !o.LeafServiceRouterAdvertInterfaceRouteValIDLifetime.IsNull() && !o.LeafServiceRouterAdvertInterfaceRouteValIDLifetime.IsUnknown() {
		jsonData["valid-lifetime"] = o.LeafServiceRouterAdvertInterfaceRouteValIDLifetime.ValueString()
	}

	if !o.LeafServiceRouterAdvertInterfaceRouteRoutePreference.IsNull() && !o.LeafServiceRouterAdvertInterfaceRouteRoutePreference.IsUnknown() {
		jsonData["route-preference"] = o.LeafServiceRouterAdvertInterfaceRouteRoutePreference.ValueString()
	}

	if !o.LeafServiceRouterAdvertInterfaceRouteNoRemoveRoute.IsNull() && !o.LeafServiceRouterAdvertInterfaceRouteNoRemoveRoute.IsUnknown() {
		jsonData["no-remove-route"] = o.LeafServiceRouterAdvertInterfaceRouteNoRemoveRoute.ValueString()
	}

	// Tags

	// Nodes

	// Return compiled data
	ret, err := json.Marshal(jsonData)
	if err != nil {
		return nil, err
	}
	return ret, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ServiceRouterAdvertInterfaceRoute) UnmarshalJSON(jsonStr []byte) error {
	jsonData := make(map[string]interface{})
	err := json.Unmarshal(jsonStr, &jsonData)
	if err != nil {
		return err
	}

	// Leafs

	if value, ok := jsonData["valid-lifetime"]; ok {
		o.LeafServiceRouterAdvertInterfaceRouteValIDLifetime = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafServiceRouterAdvertInterfaceRouteValIDLifetime = basetypes.NewStringNull()
	}

	if value, ok := jsonData["route-preference"]; ok {
		o.LeafServiceRouterAdvertInterfaceRouteRoutePreference = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafServiceRouterAdvertInterfaceRouteRoutePreference = basetypes.NewStringNull()
	}

	if value, ok := jsonData["no-remove-route"]; ok {
		o.LeafServiceRouterAdvertInterfaceRouteNoRemoveRoute = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafServiceRouterAdvertInterfaceRouteNoRemoveRoute = basetypes.NewStringNull()
	}

	// Tags

	// Nodes

	return nil
}
