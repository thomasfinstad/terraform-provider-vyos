// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"encoding/json"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// ServiceRouterAdvertInterfacePrefix describes the resource data model.
type ServiceRouterAdvertInterfacePrefix struct {
	// LeafNodes
	LeafServiceRouterAdvertInterfacePrefixNoAutonomousFlag  types.String `tfsdk:"no_autonomous_flag" json:"no-autonomous-flag,omitempty"`
	LeafServiceRouterAdvertInterfacePrefixNoOnLinkFlag      types.String `tfsdk:"no_on_link_flag" json:"no-on-link-flag,omitempty"`
	LeafServiceRouterAdvertInterfacePrefixDeprecatePrefix   types.String `tfsdk:"deprecate_prefix" json:"deprecate-prefix,omitempty"`
	LeafServiceRouterAdvertInterfacePrefixDecrementLifetime types.String `tfsdk:"decrement_lifetime" json:"decrement-lifetime,omitempty"`
	LeafServiceRouterAdvertInterfacePrefixPreferredLifetime types.String `tfsdk:"preferred_lifetime" json:"preferred-lifetime,omitempty"`
	LeafServiceRouterAdvertInterfacePrefixValIDLifetime     types.String `tfsdk:"valid_lifetime" json:"valid-lifetime,omitempty"`

	// TagNodes

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceRouterAdvertInterfacePrefix) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"no_autonomous_flag": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Prefix can not be used for stateless address auto-configuration

`,
		},

		"no_on_link_flag": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Prefix can not be used for on-link determination

`,
		},

		"deprecate_prefix": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Upon shutdown, this option will deprecate the prefix by announcing it in the shutdown RA

`,
		},

		"decrement_lifetime": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Lifetime is decremented by the number of seconds since the last RA - use in conjunction with a DHCPv6-PD prefix

`,
		},

		"preferred_lifetime": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Time in seconds that the prefix will remain preferred

|  Format  |  Description  |
|----------|---------------|
|  u32  |  Time in seconds that the prefix will remain preferred  |
|  infinity  |  Prefix will remain preferred forever  |

`,

			// Default:          stringdefault.StaticString(`14400`),
			Computed: true,
		},

		"valid_lifetime": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Time in seconds that the prefix will remain valid

|  Format  |  Description  |
|----------|---------------|
|  u32:1-4294967295  |  Time in seconds that the prefix will remain valid  |
|  infinity  |  Prefix will remain preferred forever  |

`,

			// Default:          stringdefault.StaticString(`2592000`),
			Computed: true,
		},

		// TagNodes

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ServiceRouterAdvertInterfacePrefix) MarshalJSON() ([]byte, error) {
	jsonData := make(map[string]interface{})

	// Leafs

	if !o.LeafServiceRouterAdvertInterfacePrefixNoAutonomousFlag.IsNull() && !o.LeafServiceRouterAdvertInterfacePrefixNoAutonomousFlag.IsUnknown() {
		jsonData["no-autonomous-flag"] = o.LeafServiceRouterAdvertInterfacePrefixNoAutonomousFlag.ValueString()
	}

	if !o.LeafServiceRouterAdvertInterfacePrefixNoOnLinkFlag.IsNull() && !o.LeafServiceRouterAdvertInterfacePrefixNoOnLinkFlag.IsUnknown() {
		jsonData["no-on-link-flag"] = o.LeafServiceRouterAdvertInterfacePrefixNoOnLinkFlag.ValueString()
	}

	if !o.LeafServiceRouterAdvertInterfacePrefixDeprecatePrefix.IsNull() && !o.LeafServiceRouterAdvertInterfacePrefixDeprecatePrefix.IsUnknown() {
		jsonData["deprecate-prefix"] = o.LeafServiceRouterAdvertInterfacePrefixDeprecatePrefix.ValueString()
	}

	if !o.LeafServiceRouterAdvertInterfacePrefixDecrementLifetime.IsNull() && !o.LeafServiceRouterAdvertInterfacePrefixDecrementLifetime.IsUnknown() {
		jsonData["decrement-lifetime"] = o.LeafServiceRouterAdvertInterfacePrefixDecrementLifetime.ValueString()
	}

	if !o.LeafServiceRouterAdvertInterfacePrefixPreferredLifetime.IsNull() && !o.LeafServiceRouterAdvertInterfacePrefixPreferredLifetime.IsUnknown() {
		jsonData["preferred-lifetime"] = o.LeafServiceRouterAdvertInterfacePrefixPreferredLifetime.ValueString()
	}

	if !o.LeafServiceRouterAdvertInterfacePrefixValIDLifetime.IsNull() && !o.LeafServiceRouterAdvertInterfacePrefixValIDLifetime.IsUnknown() {
		jsonData["valid-lifetime"] = o.LeafServiceRouterAdvertInterfacePrefixValIDLifetime.ValueString()
	}

	// Tags

	// Nodes

	// Return compiled data
	ret, err := json.Marshal(jsonData)
	if err != nil {
		return nil, err
	}
	return ret, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ServiceRouterAdvertInterfacePrefix) UnmarshalJSON(jsonStr []byte) error {
	jsonData := make(map[string]interface{})
	err := json.Unmarshal(jsonStr, &jsonData)
	if err != nil {
		return err
	}

	// Leafs

	if value, ok := jsonData["no-autonomous-flag"]; ok {
		o.LeafServiceRouterAdvertInterfacePrefixNoAutonomousFlag = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafServiceRouterAdvertInterfacePrefixNoAutonomousFlag = basetypes.NewStringNull()
	}

	if value, ok := jsonData["no-on-link-flag"]; ok {
		o.LeafServiceRouterAdvertInterfacePrefixNoOnLinkFlag = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafServiceRouterAdvertInterfacePrefixNoOnLinkFlag = basetypes.NewStringNull()
	}

	if value, ok := jsonData["deprecate-prefix"]; ok {
		o.LeafServiceRouterAdvertInterfacePrefixDeprecatePrefix = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafServiceRouterAdvertInterfacePrefixDeprecatePrefix = basetypes.NewStringNull()
	}

	if value, ok := jsonData["decrement-lifetime"]; ok {
		o.LeafServiceRouterAdvertInterfacePrefixDecrementLifetime = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafServiceRouterAdvertInterfacePrefixDecrementLifetime = basetypes.NewStringNull()
	}

	if value, ok := jsonData["preferred-lifetime"]; ok {
		o.LeafServiceRouterAdvertInterfacePrefixPreferredLifetime = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafServiceRouterAdvertInterfacePrefixPreferredLifetime = basetypes.NewStringNull()
	}

	if value, ok := jsonData["valid-lifetime"]; ok {
		o.LeafServiceRouterAdvertInterfacePrefixValIDLifetime = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafServiceRouterAdvertInterfacePrefixValIDLifetime = basetypes.NewStringNull()
	}

	// Tags

	// Nodes

	return nil
}
