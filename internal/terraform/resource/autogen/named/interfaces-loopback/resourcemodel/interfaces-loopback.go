// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// InterfacesLoopback describes the resource data model.
type InterfacesLoopback struct {
	// LeafNodes
	InterfacesLoopbackAddress     customtypes.CustomStringValue `tfsdk:"address" json:"address,omitempty"`
	InterfacesLoopbackDescrIPtion customtypes.CustomStringValue `tfsdk:"description" json:"description,omitempty"`
	InterfacesLoopbackRedirect    customtypes.CustomStringValue `tfsdk:"redirect" json:"redirect,omitempty"`

	// TagNodes

	// Nodes
	InterfacesLoopbackIP     types.Object `tfsdk:"ip" json:"ip,omitempty"`
	InterfacesLoopbackMirror types.Object `tfsdk:"mirror" json:"mirror,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o InterfacesLoopback) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"address": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IP address

|  Format  |  Description  |
|----------|---------------|
|  ipv4net  |  IPv4 address and prefix length  |
|  ipv6net  |  IPv6 address and prefix length  |
`,
		},

		"description": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Description

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Description  |
`,
		},

		"redirect": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Redirect incoming packet to destination

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Destination interface name  |
`,
		},

		// TagNodes

		// Nodes

		"ip": schema.SingleNestedAttribute{
			Attributes: InterfacesLoopbackIP{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `IPv4 routing parameters

`,
		},

		"mirror": schema.SingleNestedAttribute{
			Attributes: InterfacesLoopbackMirror{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Mirror ingress/egress packets

`,
		},
	}
}
