// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// SystemConntrackIgnoreRule describes the resource data model.
type SystemConntrackIgnoreRule struct {
	ID types.Number `tfsdk:"identifier" vyos:",self-id"`

	// LeafNodes
	LeafSystemConntrackIgnoreRuleDescrIPtion      types.String `tfsdk:"description" vyos:"description,omitempty"`
	LeafSystemConntrackIgnoreRuleInboundInterface types.String `tfsdk:"inbound_interface" vyos:"inbound-interface,omitempty"`
	LeafSystemConntrackIgnoreRuleProtocol         types.String `tfsdk:"protocol" vyos:"protocol,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
	NodeSystemConntrackIgnoreRuleDestination *SystemConntrackIgnoreRuleDestination `tfsdk:"destination" vyos:"destination,omitempty"`
	NodeSystemConntrackIgnoreRuleSource      *SystemConntrackIgnoreRuleSource      `tfsdk:"source" vyos:"source,omitempty"`
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *SystemConntrackIgnoreRule) GetVyosPath() []string {
	return []string{
		"system",

		"conntrack",

		"ignore",

		"rule",
		o.ID.ValueBigFloat().String(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o SystemConntrackIgnoreRule) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"identifier": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Rule number

    |  Format  |  Description  |
    |----------|---------------|
    |  u32:1-999999  |  Number of conntrack ignore rule  |

`,
		},

		// LeafNodes

		"description": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Description

    |  Format  |  Description  |
    |----------|---------------|
    |  txt  |  Description  |

`,
		},

		"inbound_interface": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Interface to ignore connections tracking on

`,
		},

		"protocol": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Protocol

    |  Format  |  Description  |
    |----------|---------------|
    |  txt  |  Protocol name  |

`,
		},

		// Nodes

		"destination": schema.SingleNestedAttribute{
			Attributes: SystemConntrackIgnoreRuleDestination{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Destination parameters

`,
		},

		"source": schema.SingleNestedAttribute{
			Attributes: SystemConntrackIgnoreRuleSource{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Source parameters

`,
		},
	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *SystemConntrackIgnoreRule) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *SystemConntrackIgnoreRule) UnmarshalJSON(_ []byte) error {
	return nil
}
