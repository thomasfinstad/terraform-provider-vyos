// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// SystemLoginUserAuthenticationPublicKeys describes the resource data model.
type SystemLoginUserAuthenticationPublicKeys struct {
	SelfIdentifier types.String `tfsdk:"public_keys_id" vyos:",self-id"`

	ParentIDSystemLoginUser types.String `tfsdk:"user" vyos:"user,parent-id"`

	// LeafNodes
	LeafSystemLoginUserAuthenticationPublicKeysKey     types.String `tfsdk:"key" vyos:"key,omitempty"`
	LeafSystemLoginUserAuthenticationPublicKeysOptions types.String `tfsdk:"options" vyos:"options,omitempty"`
	LeafSystemLoginUserAuthenticationPublicKeysType    types.String `tfsdk:"type" vyos:"type,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *SystemLoginUserAuthenticationPublicKeys) GetVyosPath() []string {
	return []string{
		"system",

		"login",

		"user",
		o.ParentIDSystemLoginUser.ValueString(),

		"authentication",

		"public-keys",
		o.SelfIdentifier.ValueString(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o SystemLoginUserAuthenticationPublicKeys) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, an amalgamation of the `public_keys_id` and the parents `*_id` fields seperated by dunder `__` starting with top level ancestor.",
		},
		"public_keys_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Remote access public keys

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  Key identifier used by ssh-keygen (usually of form user@host)  |

`,
		},

		"user_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Local user account information

`,
		},

		// LeafNodes

		"key": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Public key value (Base64 encoded)

`,
		},

		"options": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Optional public key options

`,
		},

		"type": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `SSH public key type

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ssh-dss  &emsp; |  Digital Signature Algorithm (DSA) key support  |
    |  ssh-rsa  &emsp; |  Key pair based on RSA algorithm  |
    |  ecdsa-sha2-nistp256  &emsp; |  Elliptic Curve DSA with NIST P-256 curve  |
    |  ecdsa-sha2-nistp384  &emsp; |  Elliptic Curve DSA with NIST P-384 curve  |
    |  ecdsa-sha2-nistp521  &emsp; |  Elliptic Curve DSA with NIST P-521 curve  |
    |  ssh-ed25519  &emsp; |  Edwards-curve DSA with elliptic curve 25519  |
    |  sk-ecdsa-sha2-nistp256@openssh.com  &emsp; |  Elliptic Curve DSA security key  |
    |  sk-ssh-ed25519@openssh.com  &emsp; |  Elliptic curve 25519 security key  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *SystemLoginUserAuthenticationPublicKeys) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *SystemLoginUserAuthenticationPublicKeys) UnmarshalJSON(_ []byte) error {
	return nil
}
