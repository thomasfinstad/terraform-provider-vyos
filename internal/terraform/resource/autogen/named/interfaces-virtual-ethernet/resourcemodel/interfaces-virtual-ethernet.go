// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// InterfacesVirtualEthernet describes the resource data model.
type InterfacesVirtualEthernet struct {
	// LeafNodes
	InterfacesVirtualEthernetAddress     customtypes.CustomStringValue `tfsdk:"address" json:"address,omitempty"`
	InterfacesVirtualEthernetDescrIPtion customtypes.CustomStringValue `tfsdk:"description" json:"description,omitempty"`
	InterfacesVirtualEthernetDisable     customtypes.CustomStringValue `tfsdk:"disable" json:"disable,omitempty"`
	InterfacesVirtualEthernetVrf         customtypes.CustomStringValue `tfsdk:"vrf" json:"vrf,omitempty"`
	InterfacesVirtualEthernetPeerName    customtypes.CustomStringValue `tfsdk:"peer_name" json:"peer-name,omitempty"`

	// TagNodes

	// Nodes
	InterfacesVirtualEthernetDhcpOptions     types.Object `tfsdk:"dhcp_options" json:"dhcp-options,omitempty"`
	InterfacesVirtualEthernetDhcpvsixOptions types.Object `tfsdk:"dhcpv6_options" json:"dhcpv6-options,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o InterfacesVirtualEthernet) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"address": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `IP address

|  Format  |  Description  |
|----------|---------------|
|  ipv4net  |  IPv4 address and prefix length  |
|  ipv6net  |  IPv6 address and prefix length  |
|  dhcp  |  Dynamic Host Configuration Protocol  |
|  dhcpv6  |  Dynamic Host Configuration Protocol for IPv6  |
`,
		},

		"description": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Description

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Description  |
`,
		},

		"disable": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Administratively disable interface

`,
		},

		"vrf": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `VRF instance name

|  Format  |  Description  |
|----------|---------------|
|  txt  |  VRF instance name  |
`,
		},

		"peer_name": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Virtual ethernet peer interface name

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Name of peer interface  |
`,
		},

		// TagNodes

		// Nodes

		"dhcp_options": schema.SingleNestedAttribute{
			Attributes: InterfacesVirtualEthernetDhcpOptions{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `DHCP client settings/options

`,
		},

		"dhcpv6_options": schema.SingleNestedAttribute{
			Attributes: InterfacesVirtualEthernetDhcpvsixOptions{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `DHCPv6 client settings/options

`,
		},
	}
}
