// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// QosPolicyShaperHfscClass describes the resource data model.
type QosPolicyShaperHfscClass struct {
	// LeafNodes
	QosPolicyShaperHfscClassDescrIPtion customtypes.CustomStringValue `tfsdk:"description" json:"description,omitempty"`

	// TagNodes
	QosPolicyShaperHfscClassMatch types.Map `tfsdk:"match" json:"match,omitempty"`

	// Nodes
	QosPolicyShaperHfscClassLinkshare  types.Object `tfsdk:"linkshare" json:"linkshare,omitempty"`
	QosPolicyShaperHfscClassRealtime   types.Object `tfsdk:"realtime" json:"realtime,omitempty"`
	QosPolicyShaperHfscClassUpperlimit types.Object `tfsdk:"upperlimit" json:"upperlimit,omitempty"`
}

// ResourceAttributes generates the attributes for the resource at this level
func (o QosPolicyShaperHfscClass) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"description": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Description

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Description  |

`,
		},

		// TagNodes

		"match": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: QosPolicyShaperHfscClassMatch{}.ResourceAttributes(),
			},
			Optional: true,
			MarkdownDescription: `Class matching rule name

`,
		},

		// Nodes

		"linkshare": schema.SingleNestedAttribute{
			Attributes: QosPolicyShaperHfscClassLinkshare{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Linkshare class settings

`,
		},

		"realtime": schema.SingleNestedAttribute{
			Attributes: QosPolicyShaperHfscClassRealtime{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Realtime class settings

`,
		},

		"upperlimit": schema.SingleNestedAttribute{
			Attributes: QosPolicyShaperHfscClassUpperlimit{}.ResourceAttributes(),
			Optional:   true,
			MarkdownDescription: `Upperlimit class settings

`,
		},
	}
}
