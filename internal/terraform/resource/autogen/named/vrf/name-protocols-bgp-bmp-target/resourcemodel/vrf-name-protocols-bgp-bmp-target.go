// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// VrfNameProtocolsBgpBmpTarget describes the resource data model.
type VrfNameProtocolsBgpBmpTarget struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	SelfIdentifier types.String `tfsdk:"target_id" vyos:"-,self-id"`

	ParentIDVrfName types.String `tfsdk:"name" vyos:"name,parent-id"`

	// LeafNodes
	LeafVrfNameProtocolsBgpBmpTargetAddress  types.String `tfsdk:"address" vyos:"address,omitempty"`
	LeafVrfNameProtocolsBgpBmpTargetPort     types.Number `tfsdk:"port" vyos:"port,omitempty"`
	LeafVrfNameProtocolsBgpBmpTargetMinRetry types.Number `tfsdk:"min_retry" vyos:"min-retry,omitempty"`
	LeafVrfNameProtocolsBgpBmpTargetMaxRetry types.Number `tfsdk:"max_retry" vyos:"max-retry,omitempty"`
	LeafVrfNameProtocolsBgpBmpTargetMirror   types.Bool   `tfsdk:"mirror" vyos:"mirror,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
	NodeVrfNameProtocolsBgpBmpTargetMonitor *VrfNameProtocolsBgpBmpTargetMonitor `tfsdk:"monitor" vyos:"monitor,omitempty"`
}

// SetID configures the resource ID
func (o *VrfNameProtocolsBgpBmpTarget) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *VrfNameProtocolsBgpBmpTarget) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return []string{
		"vrf",

		"name",
		o.ParentIDVrfName.ValueString(),

		"protocols",

		"bgp",

		"bmp",

		"target",
		o.SelfIdentifier.ValueString(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VrfNameProtocolsBgpBmpTarget) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field seperated by dunder (`__`).",
		},
		"target_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `BMP target

`,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},

		"name_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Virtual Routing and Forwarding instance

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  VRF instance name  |

`,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},

		// LeafNodes

		"address": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `IP address

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv4  &emsp; |  IPv4 address  |
    |  ipv6  &emsp; |  IPv6 address  |

`,
		},

		"port": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Port number used by connection

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 1-65535  &emsp; |  Numeric IP port  |

`,

			// Default:          stringdefault.StaticString(`5000`),
			Computed: true,
		},

		"min_retry": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Minimum connection retry interval (in milliseconds)

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 100-86400000  &emsp; |  Minimum connection retry interval  |

`,

			// Default:          stringdefault.StaticString(`1000`),
			Computed: true,
		},

		"max_retry": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Maximum connection retry interval

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  number: 100-4294967295  &emsp; |  Maximum connection retry interval  |

`,

			// Default:          stringdefault.StaticString(`2000`),
			Computed: true,
		},

		"mirror": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Send BMP route mirroring messages

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		// Nodes

		"monitor": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpBmpTargetMonitor{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Send BMP route monitoring messages

`,
		},
	}
}
