// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// VrfNameProtocolsOspfvthreeAreaRange describes the resource data model.
type VrfNameProtocolsOspfvthreeAreaRange struct {
	SelfIdentifier types.String `tfsdk:"range_id" vyos:",self-id"`

	ParentIDVrfName types.String `tfsdk:"name" vyos:"name,parent-id"`

	ParentIDVrfNameProtocolsOspfvthreeArea types.String `tfsdk:"area" vyos:"area,parent-id"`

	// LeafNodes
	LeafVrfNameProtocolsOspfvthreeAreaRangeAdvertise    types.Bool `tfsdk:"advertise" vyos:"advertise,omitempty"`
	LeafVrfNameProtocolsOspfvthreeAreaRangeNotAdvertise types.Bool `tfsdk:"not_advertise" vyos:"not-advertise,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *VrfNameProtocolsOspfvthreeAreaRange) GetVyosPath() []string {
	return []string{
		"vrf",

		"name",
		o.ParentIDVrfName.ValueString(),

		"protocols",

		"ospfv3",

		"area",
		o.ParentIDVrfNameProtocolsOspfvthreeArea.ValueString(),

		"range",
		o.SelfIdentifier.ValueString(),
	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VrfNameProtocolsOspfvthreeAreaRange) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"range_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Specify IPv6 prefix (border routers only)

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  ipv6net  &emsp; |  Specify IPv6 prefix (border routers only)  |

`,
		},

		"name_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `Virtual Routing and Forwarding instance

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  txt  &emsp; |  VRF instance name  |

`,
		},

		"area_id": schema.StringAttribute{
			Required: true,
			MarkdownDescription: `OSPFv3 Area

    |  Format &emsp; | Description  |
    |----------|---------------|
    |  u32  &emsp; |  Area ID as a decimal value  |
    |  ipv4  &emsp; |  Area ID in IP address forma  |

`,
		},

		// LeafNodes

		"advertise": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Advertise this range

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"not_advertise": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Do not advertise this range

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *VrfNameProtocolsOspfvthreeAreaRange) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *VrfNameProtocolsOspfvthreeAreaRange) UnmarshalJSON(_ []byte) error {
	return nil
}
