// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

// VrfNameProtocolsBgpAddressFamilyIPvfourUnicast describes the resource data model.
type VrfNameProtocolsBgpAddressFamilyIPvfourUnicast struct {
	// LeafNodes

	// TagNodes (Bools that show if child resources have been configured)
	ExistsTagVrfNameProtocolsBgpAddressFamilyIPvfourUnicastAggregateAddress bool `tfsdk:"aggregate_address" vyos:"aggregate-address,child"`
	ExistsTagVrfNameProtocolsBgpAddressFamilyIPvfourUnicastNetwork          bool `tfsdk:"network" vyos:"network,child"`

	// Nodes
	NodeVrfNameProtocolsBgpAddressFamilyIPvfourUnicastDistance     *VrfNameProtocolsBgpAddressFamilyIPvfourUnicastDistance     `tfsdk:"distance" vyos:"distance,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvfourUnicastExport       *VrfNameProtocolsBgpAddressFamilyIPvfourUnicastExport       `tfsdk:"export" vyos:"export,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvfourUnicastImport       *VrfNameProtocolsBgpAddressFamilyIPvfourUnicastImport       `tfsdk:"import" vyos:"import,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvfourUnicastLabel        *VrfNameProtocolsBgpAddressFamilyIPvfourUnicastLabel        `tfsdk:"label" vyos:"label,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvfourUnicastMaximumPaths *VrfNameProtocolsBgpAddressFamilyIPvfourUnicastMaximumPaths `tfsdk:"maximum_paths" vyos:"maximum-paths,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvfourUnicastRd           *VrfNameProtocolsBgpAddressFamilyIPvfourUnicastRd           `tfsdk:"rd" vyos:"rd,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvfourUnicastRouteMap     *VrfNameProtocolsBgpAddressFamilyIPvfourUnicastRouteMap     `tfsdk:"route_map" vyos:"route-map,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvfourUnicastRouteTarget  *VrfNameProtocolsBgpAddressFamilyIPvfourUnicastRouteTarget  `tfsdk:"route_target" vyos:"route-target,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvfourUnicastRedistribute *VrfNameProtocolsBgpAddressFamilyIPvfourUnicastRedistribute `tfsdk:"redistribute" vyos:"redistribute,omitempty"`
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VrfNameProtocolsBgpAddressFamilyIPvfourUnicast) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		// Nodes

		"distance": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvfourUnicastDistance{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Administrative distances for BGP routes

`,
		},

		"export": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvfourUnicastExport{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Export routes from this address-family

`,
		},

		"import": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvfourUnicastImport{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Import routes to this address-family

`,
		},

		"label": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvfourUnicastLabel{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Label value for VRF

`,
		},

		"maximum_paths": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvfourUnicastMaximumPaths{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Forward packets over multiple paths

`,
		},

		"rd": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvfourUnicastRd{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Specify route distinguisher

`,
		},

		"route_map": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvfourUnicastRouteMap{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Route-map to filter route updates to/from this peer

`,
		},

		"route_target": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvfourUnicastRouteTarget{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Specify route target list

`,
		},

		"redistribute": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvfourUnicastRedistribute{}.ResourceSchemaAttributes(),
			Optional:   true,
			MarkdownDescription: `Redistribute routes from other protocols into BGP

`,
		},
	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *VrfNameProtocolsBgpAddressFamilyIPvfourUnicast) MarshalJSON() ([]byte, error) {
	return nil, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *VrfNameProtocolsBgpAddressFamilyIPvfourUnicast) UnmarshalJSON(_ []byte) error {
	return nil
}
