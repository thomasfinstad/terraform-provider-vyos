// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/terraform/customtypes"
)

// PolicyExtcommunityListRule describes the resource data model.
type PolicyExtcommunityListRule struct {
	// LeafNodes
	PolicyExtcommunityListRuleAction      customtypes.CustomStringValue `tfsdk:"action" json:"action,omitempty"`
	PolicyExtcommunityListRuleDescrIPtion customtypes.CustomStringValue `tfsdk:"description" json:"description,omitempty"`
	PolicyExtcommunityListRuleRegex       customtypes.CustomStringValue `tfsdk:"regex" json:"regex,omitempty"`

	// TagNodes

	// Nodes
}

// ResourceAttributes generates the attributes for the resource at this level
func (o PolicyExtcommunityListRule) ResourceAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"action": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Action to take on entries matching this rule

|  Format  |  Description  |
|----------|---------------|
|  permit  |  Permit matching entries  |
|  deny  |  Deny matching entries  |

`,
		},

		"description": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Description

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Description  |

`,
		},

		"regex": schema.StringAttribute{
			CustomType: customtypes.CustomStringType{},
			Optional:   true,
			MarkdownDescription: `Regular expression to match against an extended community list

|  Format  |  Description  |
|----------|---------------|
|  <aa:nn:nn>  |  Extended community list regular expression  |
|  <rt aa:nn:nn>  |  Route Target regular expression  |
|  <soo aa:nn:nn>  |  Site of Origin regular expression  |

`,
		},

		// TagNodes

		// Nodes

	}
}
