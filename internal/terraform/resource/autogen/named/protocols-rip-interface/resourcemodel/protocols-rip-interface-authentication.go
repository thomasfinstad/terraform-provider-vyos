// Package resourcemodel code generated by /workspaces/terraform-provider-vyos/tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"encoding/json"
	"reflect"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// ProtocolsRIPInterfaceAuthentication describes the resource data model.
type ProtocolsRIPInterfaceAuthentication struct {
	// LeafNodes
	LeafProtocolsRIPInterfaceAuthenticationPlaintextPassword types.String `tfsdk:"plaintext_password" json:"plaintext-password,omitempty"`

	// TagNodes
	TagProtocolsRIPInterfaceAuthenticationMdfive *map[string]ProtocolsRIPInterfaceAuthenticationMdfive `tfsdk:"md5" json:"md5,omitempty"`

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsRIPInterfaceAuthentication) ResourceSchemaAttributes() map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"plaintext_password": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Plain text password

|  Format  |  Description  |
|----------|---------------|
|  txt  |  Plain text password (16 characters or less)  |

`,
		},

		// TagNodes

		"md5": schema.MapNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: ProtocolsRIPInterfaceAuthenticationMdfive{}.ResourceSchemaAttributes(),
			},
			Optional: true,
			MarkdownDescription: `MD5 key id

|  Format  |  Description  |
|----------|---------------|
|  u32:1-255  |  OSPF key id  |

`,
		},

		// Nodes

	}
}

// MarshalJSON returns json encoded string as bytes or error if marshalling did not go well
func (o *ProtocolsRIPInterfaceAuthentication) MarshalJSON() ([]byte, error) {
	jsonData := make(map[string]interface{})

	// Leafs

	if !o.LeafProtocolsRIPInterfaceAuthenticationPlaintextPassword.IsNull() && !o.LeafProtocolsRIPInterfaceAuthenticationPlaintextPassword.IsUnknown() {
		jsonData["plaintext-password"] = o.LeafProtocolsRIPInterfaceAuthenticationPlaintextPassword.ValueString()
	}

	// Tags

	if !reflect.ValueOf(o.TagProtocolsRIPInterfaceAuthenticationMdfive).IsZero() {
		subJSONStr, err := json.Marshal(o.TagProtocolsRIPInterfaceAuthenticationMdfive)
		if err != nil {
			return nil, err
		}

		subData := make(map[string]interface{})
		err = json.Unmarshal(subJSONStr, &subData)
		if err != nil {
			return nil, err
		}
		jsonData["md5"] = subData
	}

	// Nodes

	// Return compiled data
	ret, err := json.Marshal(jsonData)
	if err != nil {
		return nil, err
	}
	return ret, nil
}

// UnmarshalJSON unmarshals json byte array into this object
func (o *ProtocolsRIPInterfaceAuthentication) UnmarshalJSON(jsonStr []byte) error {
	jsonData := make(map[string]interface{})
	err := json.Unmarshal(jsonStr, &jsonData)
	if err != nil {
		return err
	}

	// Leafs

	if value, ok := jsonData["plaintext-password"]; ok {
		o.LeafProtocolsRIPInterfaceAuthenticationPlaintextPassword = basetypes.NewStringValue(value.(string))
	} else {
		o.LeafProtocolsRIPInterfaceAuthenticationPlaintextPassword = basetypes.NewStringNull()
	}

	// Tags
	if value, ok := jsonData["md5"]; ok {
		subJSONStr, err := json.Marshal(value)
		if err != nil {
			return err
		}

		o.TagProtocolsRIPInterfaceAuthenticationMdfive = &map[string]ProtocolsRIPInterfaceAuthenticationMdfive{}

		err = json.Unmarshal(subJSONStr, o.TagProtocolsRIPInterfaceAuthenticationMdfive)
		if err != nil {
			return err
		}
	}

	// Nodes

	return nil
}
