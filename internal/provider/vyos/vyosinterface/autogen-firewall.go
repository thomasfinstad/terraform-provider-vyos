// Code generated by /workspaces/terraform-provider-vyos/tools/build-resource-terraform-schemas/main.go. DO NOT EDIT.

package vyosinterface

import (
	"encoding/xml"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/provider/vyos/schema/interfacedefinition"
)

func firewall() interfacedefinition.InterfaceDefinition {
	return interfacedefinition.InterfaceDefinition{
		XMLName: xml.Name{Local: "interfaceDefinition"},
		Node: []*interfacedefinition.Node{{
			XMLName: xml.Name{Local: "node"}, NodeNameAttr: "firewall", OwnerAttr: "${vyos_conf_scripts_dir}/firewall.py",
			Properties: []*interfacedefinition.Properties{{
				XMLName:  xml.Name{Local: "properties"},
				Help:     []string{"Firewall"},
				Priority: []string{"199"},
			}},
			Children: []*interfacedefinition.Children{{
				XMLName: xml.Name{Local: "children"},
				Node: []*interfacedefinition.Node{{
					XMLName: xml.Name{Local: "node"}, NodeNameAttr: "group",
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Firewall group"},
					}},
					Children: []*interfacedefinition.Children{{
						XMLName: xml.Name{Local: "children"},
						TagNode: []*interfacedefinition.TagNode{{
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "address-group",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Firewall address-group"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[a-zA-Z0-9][\\w\\-\\.]&"},
								}},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Address-group member"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-range"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4", Description: "IPv4 address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4range", Description: "IPv4 range to match (e.g. 10.0.0.1-10.0.0.200)"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "include",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Include another address-group"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall group address-group"},
										}},
										Multi: []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "domain-group",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Firewall domain-group"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[a-zA-Z_][a-zA-Z0-9][\\w\\-\\.]&"},
								}},
								ConstraintErrorMessage: []string{"Name of domain-group can only contain alpha-numeric letters, hyphen, underscores and not start with numeric"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Domain-group member"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "fqdn"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Domain address to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "interface-group",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Firewall interface-group"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[a-zA-Z0-9][\\w\\-\\.]&"},
								}},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "interface",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Interface-group member"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Script:  []string{"${vyos_completion_dir}/list_interfaces"},
										}},
										Multi: []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "include",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Include another interface-group"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall group interface-group"},
										}},
										Multi: []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "ipv6-address-group",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Firewall ipv6-address-group"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[a-zA-Z0-9][\\w\\-\\.]&"},
								}},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Address-group member"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6-address"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6-range"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6", Description: "IPv6 address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6range", Description: "IPv6 range to match (e.g. 2002::1-2002::ff)"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "include",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Include another ipv6-address-group"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall group ipv6-address-group"},
										}},
										Multi: []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "ipv6-network-group",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Firewall ipv6-network-group"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[a-zA-Z0-9][\\w\\-\\.]&"},
								}},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "network",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Network-group member"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6-prefix"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6net", Description: "IPv6 address to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "include",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Include another ipv6-network-group"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall group ipv6-network-group"},
										}},
										Multi: []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "mac-group",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Firewall mac-group"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[a-zA-Z0-9][\\w\\-\\.]&"},
								}},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mac-address",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Mac-group member"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "mac-address"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "macaddr", Description: "MAC address to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "include",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Include another mac-group"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall group mac-group"},
										}},
										Multi: []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "network-group",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Firewall network-group"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[a-zA-Z0-9][\\w\\-\\.]&"},
								}},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "network",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Network-group member"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-prefix"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4net", Description: "IPv4 Subnet to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "include",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Include another network-group"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall group network-group"},
										}},
										Multi: []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "port-group",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Firewall port-group"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[a-zA-Z0-9][\\w\\-\\.]&"},
								}},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Port-group member"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "port-range"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Named port (any name in /etc/services, e.g., http)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Numbered port"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "start-end", Description: "Numbered port range (e.g. 1001-1050)"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "include",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Include another port-group"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall group port-group"},
										}},
										Multi: []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}},
							}},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "node"}, NodeNameAttr: "state-policy",
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Global firewall state-policy"},
					}},
					Children: []*interfacedefinition.Children{{
						XMLName: xml.Name{Local: "children"},
						Node: []*interfacedefinition.Node{{
							XMLName: xml.Name{Local: "node"}, NodeNameAttr: "established",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Global firewall policy for packets part of an established connection"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								Node: []*interfacedefinition.Node{{
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "log",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Option to log packets"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "enable",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Enable logging"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}},
									}},
								}},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "action",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Action for packets"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(accept|drop|reject)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "accept", Description: "Action to accept"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "drop", Description: "Action to drop"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "reject", Description: "Action to reject"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"accept drop reject"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "log-level",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Set log-level. Log must be enable."},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(emerg|alert|crit|err|warn|notice|info|debug)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "emerg", Description: "Emerg log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "alert", Description: "Alert log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "crit", Description: "Critical log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "err", Description: "Error log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "warn", Description: "Warning log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "notice", Description: "Notice log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "info", Description: "Info log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "debug", Description: "Debug log level"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"emerg alert crit err warn notice info debug"},
										}},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "node"}, NodeNameAttr: "invalid",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Global firewall policy for packets part of an invalid connection"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								Node: []*interfacedefinition.Node{{
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "log",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Option to log packets"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "enable",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Enable logging"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}},
									}},
								}},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "action",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Action for packets"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(accept|drop|reject)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "accept", Description: "Action to accept"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "drop", Description: "Action to drop"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "reject", Description: "Action to reject"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"accept drop reject"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "log-level",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Set log-level. Log must be enable."},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(emerg|alert|crit|err|warn|notice|info|debug)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "emerg", Description: "Emerg log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "alert", Description: "Alert log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "crit", Description: "Critical log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "err", Description: "Error log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "warn", Description: "Warning log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "notice", Description: "Notice log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "info", Description: "Info log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "debug", Description: "Debug log level"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"emerg alert crit err warn notice info debug"},
										}},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "node"}, NodeNameAttr: "related",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Global firewall policy for packets part of a related connection"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								Node: []*interfacedefinition.Node{{
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "log",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Option to log packets"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "enable",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Enable logging"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}},
									}},
								}},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "action",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Action for packets"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(accept|drop|reject)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "accept", Description: "Action to accept"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "drop", Description: "Action to drop"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "reject", Description: "Action to reject"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"accept drop reject"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "log-level",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Set log-level. Log must be enable."},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(emerg|alert|crit|err|warn|notice|info|debug)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "emerg", Description: "Emerg log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "alert", Description: "Alert log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "crit", Description: "Critical log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "err", Description: "Error log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "warn", Description: "Warning log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "notice", Description: "Notice log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "info", Description: "Info log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "debug", Description: "Debug log level"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"emerg alert crit err warn notice info debug"},
										}},
									}},
								}},
							}},
						}},
					}},
				}},
				TagNode: []*interfacedefinition.TagNode{{
					XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "interface",
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Interface name to apply firewall configuration"},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							Script:  []string{"${vyos_completion_dir}/list_interfaces"},
						}},
					}},
					Children: []*interfacedefinition.Children{{
						XMLName: xml.Name{Local: "children"},
						Node: []*interfacedefinition.Node{{
							XMLName: xml.Name{Local: "node"}, NodeNameAttr: "in",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Forwarded packets on inbound interface"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "name",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Local IPv4 firewall ruleset name for interface"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall name"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ipv6-name",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Local IPv6 firewall ruleset name for interface"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall ipv6-name"},
										}},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "node"}, NodeNameAttr: "out",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Forwarded packets on outbound interface"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "name",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Local IPv4 firewall ruleset name for interface"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall name"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ipv6-name",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Local IPv6 firewall ruleset name for interface"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall ipv6-name"},
										}},
									}},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "node"}, NodeNameAttr: "local",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Packets destined for this router"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "name",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Local IPv4 firewall ruleset name for interface"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall name"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ipv6-name",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Local IPv6 firewall ruleset name for interface"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall ipv6-name"},
										}},
									}},
								}},
							}},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "ipv6-name",
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"IPv6 firewall rule-set name"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"[a-zA-Z0-9][\\w\\-\\.]&"},
						}},
					}},
					Children: []*interfacedefinition.Children{{
						XMLName: xml.Name{Local: "children"},
						TagNode: []*interfacedefinition.TagNode{{
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "rule",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Firewall rule number (IPv6)"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName:   xml.Name{Local: "constraint"},
									Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 1-999999"}},
								}},
								ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-999999", Description: "Number for this Firewall rule"}},
								ConstraintErrorMessage: []string{"Firewall rule number must be between 1 and 999999"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								Node: []*interfacedefinition.Node{{
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "destination",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Destination parameters"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										Node: []*interfacedefinition.Node{{
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "geoip",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"GeoIP options - Data provided by DB-IP.com"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "country-code",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"GeoIP country code"},
														Constraint: []*interfacedefinition.Constraint{{
															XMLName: xml.Name{Local: "constraint"},
															Regex:   []string{"^(ad|ae|af|ag|ai|al|am|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bl|bm|bn|bo|bq|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mf|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tr|tt|tv|tw|tz|ua|ug|um|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw)$"},
														}},
														ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "<country>", Description: "Country code (2 characters)"}},
														Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "inverse-match",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Inverse match of country-codes"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "group",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Group"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group ipv6-address-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "domain-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of domains"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group domain-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mac-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of MAC addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group mac-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "network-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of networks"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group ipv6-network-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of ports"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group port-group"},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IP address, subnet, or range"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6-exclude"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6-range"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6-range-exclude"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6", Description: "IP address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6net", Description: "Subnet to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6range", Description: "IP range to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv6", Description: "Match everything except the specified address"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv6net", Description: "Match everything except the specified prefix"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv6range", Description: "Match everything except the specified range"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "fqdn",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Fully qualified domain name"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "fqdn"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "<fqdn>", Description: "Fully qualified domain name"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Port"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "port-multi"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Named port (any name in /etc/services, e.g., http)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Numbered port"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "Numbered port range (e.g. 1001-1005)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: " ", Description: "\\n\\n  Multiple destination ports can be specified as a comma-separated list.\\n  For example: 'telnet,http,123,1001-1005'"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address-mask",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IP mask"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6", Description: "IP mask to apply"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "source",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Source parameters"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										Node: []*interfacedefinition.Node{{
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "geoip",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"GeoIP options - Data provided by DB-IP.com"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "country-code",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"GeoIP country code"},
														Constraint: []*interfacedefinition.Constraint{{
															XMLName: xml.Name{Local: "constraint"},
															Regex:   []string{"^(ad|ae|af|ag|ai|al|am|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bl|bm|bn|bo|bq|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mf|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tr|tt|tv|tw|tz|ua|ug|um|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw)$"},
														}},
														ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "<country>", Description: "Country code (2 characters)"}},
														Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "inverse-match",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Inverse match of country-codes"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "group",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Group"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group ipv6-address-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "domain-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of domains"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group domain-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mac-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of MAC addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group mac-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "network-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of networks"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group ipv6-network-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of ports"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group port-group"},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IP address, subnet, or range"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6-exclude"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6-range"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6-range-exclude"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6", Description: "IP address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6net", Description: "Subnet to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6range", Description: "IP range to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv6", Description: "Match everything except the specified address"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv6net", Description: "Match everything except the specified prefix"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv6range", Description: "Match everything except the specified range"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "fqdn",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Fully qualified domain name"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "fqdn"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "<fqdn>", Description: "Fully qualified domain name"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Port"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "port-multi"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Named port (any name in /etc/services, e.g., http)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Numbered port"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "Numbered port range (e.g. 1001-1005)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: " ", Description: "\\n\\n  Multiple destination ports can be specified as a comma-separated list.\\n  For example: 'telnet,http,123,1001-1005'"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address-mask",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IP mask"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv6"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv6", Description: "IP mask to apply"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "destination",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Destination parameters"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mac-address",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"MAC address"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "mac-address"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "mac-address-exclude"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "macaddr", Description: "MAC address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!macaddr", Description: "Match everything except the specified MAC address"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "fragment",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"IP fragment match"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "match-frag",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Second and further fragments of fragmented packets"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "match-non-frag",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Head fragments or unfragmented packets"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "inbound-interface",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Match inbound-interface"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "interface-name",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match interface"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Script:  []string{"${vyos_completion_dir}/list_interfaces"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "interface-group",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match interface-group"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Path:    []string{"firewall group interface-group"},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "outbound-interface",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Match outbound-interface"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "interface-name",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match interface"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Script:  []string{"${vyos_completion_dir}/list_interfaces"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "interface-group",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match interface-group"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Path:    []string{"firewall group interface-group"},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "ipsec",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Inbound IPsec packets"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "match-ipsec",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Inbound IPsec packets"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "match-none",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Inbound non-IPsec packets"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "limit",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Rate limit using a token bucket filter"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "burst",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Maximum number of packets to allow in excess of rate"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-4294967295"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-4294967295", Description: "Maximum number of packets to allow in excess of rate"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "rate",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Maximum average matching rate"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"\\d+/(second|minute|hour|day)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "integer/unit (Example: 5/minute)"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "connection-status",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Connection status"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "nat",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"NAT connection status"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"^(destination|source)$"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "destination", Description: "Match connections that are subject to destination NAT"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "source", Description: "Match connections that are subject to source NAT"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"destination source"},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "recent",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Parameters for matching recently seen sources"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "count",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Source addresses seen more than N times"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 1-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-255", Description: "Source addresses seen more than N times"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "time",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Source addresses seen in the last second/minute/hour"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(second|minute|hour)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "second", Description: "Source addresses seen COUNT times in the last second"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "minute", Description: "Source addresses seen COUNT times in the last minute"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "hour", Description: "Source addresses seen COUNT times in the last hour"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"second minute hour"},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "source",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Source parameters"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										Node: []*interfacedefinition.Node{{
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "group",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Group"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group address-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "domain-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of domains"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group domain-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mac-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of MAC addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group mac-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "network-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of networks"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group network-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of ports"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group port-group"},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IP address, subnet, or range"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-prefix"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-range"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address-exclude"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-prefix-exclude"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-range-exclude"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4", Description: "IPv4 address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4net", Description: "IPv4 prefix to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4range", Description: "IPv4 address range to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4", Description: "Match everything except the specified address"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4net", Description: "Match everything except the specified prefix"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4range", Description: "Match everything except the specified range"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mac-address",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"MAC address"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "mac-address"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "mac-address-exclude"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "macaddr", Description: "MAC address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!macaddr", Description: "Match everything except the specified MAC address"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Port"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "port-multi"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Named port (any name in /etc/services, e.g., http)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Numbered port"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "Numbered port range (e.g. 1001-1005)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: " ", Description: "\\n\\n  Multiple destination ports can be specified as a comma-separated list.\\n  For example: 'telnet,http,123,1001-1005'"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "state",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Session state"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "established",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Established state"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(enable|disable)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"enable disable"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "invalid",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Invalid state"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(enable|disable)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"enable disable"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "new",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"New state"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(enable|disable)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"enable disable"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "related",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Related state"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(enable|disable)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"enable disable"},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "tcp",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"TCP flags to match"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										Node: []*interfacedefinition.Node{{
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "flags",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"TCP flags to match"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												Node: []*interfacedefinition.Node{{
													XMLName: xml.Name{Local: "node"}, NodeNameAttr: "not",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Match flags not set"},
													}},
													Children: []*interfacedefinition.Children{{
														XMLName: xml.Name{Local: "children"},
														LeafNode: []*interfacedefinition.LeafNode{{
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "syn",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Synchronise flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ack",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Acknowledge flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "fin",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Finish flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "rst",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Reset flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "urg",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Urgent flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "psh",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Push flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ecn",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Explicit Congestion Notification flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "cwr",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Congestion Window Reduced flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}},
													}},
												}},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "syn",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Synchronise flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ack",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Acknowledge flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "fin",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Finish flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "rst",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Reset flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "urg",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Urgent flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "psh",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Push flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ecn",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Explicit Congestion Notification flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "cwr",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Congestion Window Reduced flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}},
											}},
										}},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mss",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Maximum segment size (MSS)"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 1-16384"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-16384", Description: "Maximum segment size"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<min>-<max>", Description: "TCP MSS range (use '-' as delimiter)"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "time",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Time to match rule"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "startdate",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Date to start matching rule"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(\\d{4}\\-\\d{2}\\-\\d{2})"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Enter date using following notation - YYYY-MM-DD"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "starttime",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Time of day to start matching rule"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"([0-2][0-9](\\:[0-5][0-9]){1,2})"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Enter time using using 24 hour notation - hh:mm:ss"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "stopdate",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Date to stop matching rule"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(\\d{4}\\-\\d{2}\\-\\d{2})"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Enter date using following notation - YYYY-MM-DD"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "stoptime",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Time of day to stop matching rule"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"([0-2][0-9](\\:[0-5][0-9]){1,2})"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Enter time using using 24 hour notation - hh:mm:ss"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "weekdays",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Comma separated weekdays to match rule on"},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Name of day (Monday, Tuesday, Wednesday, Thursdays, Friday, Saturday, Sunday)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-6", Description: "Day number (0 = Sunday ... 6 = Saturday)"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "hop-limit",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Hop limit"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "eq",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match on equal value"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "Equal to value"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "gt",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match on greater then value"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "Greater then value"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "lt",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match on less then value"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "Less then value"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "icmpv6",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"ICMPv6 type and code information"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "code",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"ICMPv6 code"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "ICMPv6 code (0-255)"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "type",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"ICMPv6 type"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "ICMPv6 type (0-255)"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "type-name",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"ICMPv6 type-name"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(destination-unreachable|packet-too-big|time-exceeded|echo-request|echo-reply|mld-listener-query|mld-listener-report|mld-listener-reduction|nd-router-solicit|nd-router-advert|nd-neighbor-solicit|nd-neighbor-advert|nd-redirect|parameter-problem|router-renumbering|ind-neighbor-solicit|ind-neighbor-advert|mld2-listener-report)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "destination-unreachable", Description: "ICMPv6 type 1: destination-unreachable"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "packet-too-big", Description: "ICMPv6 type 2: packet-too-big"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "time-exceeded", Description: "ICMPv6 type 3: time-exceeded"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "echo-request", Description: "ICMPv6 type 128: echo-request"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "echo-reply", Description: "ICMPv6 type 129: echo-reply"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "mld-listener-query", Description: "ICMPv6 type 130: mld-listener-query"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "mld-listener-report", Description: "ICMPv6 type 131: mld-listener-report"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "mld-listener-reduction", Description: "ICMPv6 type 132: mld-listener-reduction"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "nd-router-solicit", Description: "ICMPv6 type 133: nd-router-solicit"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "nd-router-advert", Description: "ICMPv6 type 134: nd-router-advert"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "nd-neighbor-solicit", Description: "ICMPv6 type 135: nd-neighbor-solicit"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "nd-neighbor-advert", Description: "ICMPv6 type 136: nd-neighbor-advert"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "nd-redirect", Description: "ICMPv6 type 137: nd-redirect"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "parameter-problem", Description: "ICMPv6 type 4: parameter-problem"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "router-renumbering", Description: "ICMPv6 type 138: router-renumbering"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ind-neighbor-solicit", Description: "ICMPv6 type 141: ind-neighbor-solicit"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ind-neighbor-advert", Description: "ICMPv6 type 142: ind-neighbor-advert"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "mld2-listener-report", Description: "ICMPv6 type 143: mld2-listener-report"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"destination-unreachable packet-too-big time-exceeded echo-request echo-reply mld-listener-query mld-listener-report mld-listener-reduction nd-router-solicit nd-router-advert nd-neighbor-solicit nd-neighbor-advert nd-redirect parameter-problem router-renumbering ind-neighbor-solicit ind-neighbor-advert mld2-listener-report"},
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "action",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Rule action"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(accept|jump|reject|return|drop|queue)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "accept", Description: "Accept matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "jump", Description: "Jump to another chain"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "reject", Description: "Reject matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "return", Description: "Return from the current chain and continue at the next rule of the last chain"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "drop", Description: "Drop matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "queue", Description: "Enqueue packet to userspace"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"accept jump reject return drop queue"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "action",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Rule action"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(accept|jump|reject|return|drop|queue)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "accept", Description: "Accept matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "jump", Description: "Jump to another chain"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "reject", Description: "Reject matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "return", Description: "Return from the current chain and continue at the next rule of the last chain"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "drop", Description: "Drop matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "queue", Description: "Enqueue packet to userspace"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"accept jump reject return drop queue"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "disable",
									Properties: []*interfacedefinition.Properties{{
										XMLName:   xml.Name{Local: "properties"},
										Help:      []string{"Option to disable firewall rule"},
										Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "log",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Option to log packets matching rule"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(enable|disable)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable log"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable log"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"enable disable"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "log-level",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Set log-level. Log must be enable."},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(emerg|alert|crit|err|warn|notice|info|debug)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "emerg", Description: "Emerg log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "alert", Description: "Alert log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "crit", Description: "Critical log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "err", Description: "Error log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "warn", Description: "Warning log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "notice", Description: "Notice log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "info", Description: "Info log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "debug", Description: "Debug log level"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"emerg alert crit err warn notice info debug"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "protocol",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Protocol to match (protocol name, number, or \"all\")"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ip-protocol"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "all", Description: "All IP protocols"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "tcp_udp", Description: "Both TCP and UDP"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "IP protocol number"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<protocol>", Description: "IP protocol name"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!<protocol>", Description: "IP protocol name"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"all tcp_udp"},
											Script:  []string{"${vyos_completion_dir}/list_protocols.sh"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "dscp",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"DSCP value"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 0-63"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-63", Description: "DSCP value to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "DSCP range to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "dscp-exclude",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"DSCP value not to match"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 0-63"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-63", Description: "DSCP value not to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "DSCP range not to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "packet-length",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Payload size in bytes, including header and data to match"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 1-65535"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Packet length to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "Packet length range to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "packet-length-exclude",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Payload size in bytes, including header and data not to match"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 1-65535"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Packet length not to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "Packet length range not to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "packet-type",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Packet type"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(broadcast|host|multicast|other)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "broadcast", Description: "Match broadcast packet type"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "host", Description: "Match host packet type, addressed to local host"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "multicast", Description: "Match multicast packet type"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "other", Description: "Match packet addressed to another host"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"broadcast host multicast other"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "connection-mark",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Connection mark"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-2147483647"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-2147483647", Description: "Connection-mark to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "jump-target",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Set jump target. Action jump must be defined to use this setting"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall ipv6-name"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "queue",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Queue target to use. Action queue must be defined to use this setting"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 0-65535"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-65535", Description: "Queue target"}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "queue-options",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Options used for queue target. Action queue must be defined to use this setting"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(bypass|fanout)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "bypass", Description: "Let packets go through if userspace application cannot back off"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "fanout", Description: "Distribute packets between several queues"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"bypass fanout"},
										}},
										Multi: []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}},
							}},
						}},
						LeafNode: []*interfacedefinition.LeafNode{{
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "default-action",
							DefaultValue: []string{"drop"},
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Default-action for rule-set"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"(drop|jump|reject|return|accept)"},
								}},
								ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "drop", Description: "Drop if no prior rules are hit"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "jump", Description: "Jump to another chain if no prior rules are hit"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "reject", Description: "Drop and notify source if no prior rules are hit"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "return", Description: "Return from the current chain and continue at the next rule of the last chain"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "accept", Description: "Accept if no prior rules are hit"}},
								CompletionHelp: []*interfacedefinition.CompletionHelp{{
									XMLName: xml.Name{Local: "completionHelp"},
									List:    []string{"drop jump reject return accept"},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "enable-default-log",
							Properties: []*interfacedefinition.Properties{{
								XMLName:   xml.Name{Local: "properties"},
								Help:      []string{"Log packets hitting default-action"},
								Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
							}},
						}, {
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Description"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[[:ascii:]]{0,256}"},
								}},
								ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
								ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
							}},
						}, {
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "default-jump-target",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Set jump target. Action jump must be defined in default-action to use this setting"},
								CompletionHelp: []*interfacedefinition.CompletionHelp{{
									XMLName: xml.Name{Local: "completionHelp"},
									Path:    []string{"firewall ipv6-name"},
								}},
							}},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "name",
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"IPv4 firewall rule-set name"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"[a-zA-Z0-9][\\w\\-\\.]&"},
						}},
					}},
					Children: []*interfacedefinition.Children{{
						XMLName: xml.Name{Local: "children"},
						TagNode: []*interfacedefinition.TagNode{{
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "rule",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Firewall rule number (IPv4)"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName:   xml.Name{Local: "constraint"},
									Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 1-999999"}},
								}},
								ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-999999", Description: "Number for this Firewall rule"}},
								ConstraintErrorMessage: []string{"Firewall rule number must be between 1 and 999999"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								Node: []*interfacedefinition.Node{{
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "destination",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Destination parameters"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										Node: []*interfacedefinition.Node{{
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "geoip",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"GeoIP options - Data provided by DB-IP.com"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "country-code",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"GeoIP country code"},
														Constraint: []*interfacedefinition.Constraint{{
															XMLName: xml.Name{Local: "constraint"},
															Regex:   []string{"^(ad|ae|af|ag|ai|al|am|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bl|bm|bn|bo|bq|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mf|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tr|tt|tv|tw|tz|ua|ug|um|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw)$"},
														}},
														ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "<country>", Description: "Country code (2 characters)"}},
														Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "inverse-match",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Inverse match of country-codes"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "group",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Group"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group address-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "domain-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of domains"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group domain-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mac-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of MAC addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group mac-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "network-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of networks"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group network-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of ports"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group port-group"},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IP address, subnet, or range"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-prefix"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-range"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address-exclude"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-prefix-exclude"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-range-exclude"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4", Description: "IPv4 address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4net", Description: "IPv4 prefix to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4range", Description: "IPv4 address range to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4", Description: "Match everything except the specified address"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4net", Description: "Match everything except the specified prefix"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4range", Description: "Match everything except the specified range"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "fqdn",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Fully qualified domain name"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "fqdn"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "<fqdn>", Description: "Fully qualified domain name"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Port"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "port-multi"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Named port (any name in /etc/services, e.g., http)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Numbered port"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "Numbered port range (e.g. 1001-1005)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: " ", Description: "\\n\\n  Multiple destination ports can be specified as a comma-separated list.\\n  For example: 'telnet,http,123,1001-1005'"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address-mask",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IP mask"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4", Description: "IPv4 mask to apply"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "source",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Source parameters"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										Node: []*interfacedefinition.Node{{
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "geoip",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"GeoIP options - Data provided by DB-IP.com"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "country-code",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"GeoIP country code"},
														Constraint: []*interfacedefinition.Constraint{{
															XMLName: xml.Name{Local: "constraint"},
															Regex:   []string{"^(ad|ae|af|ag|ai|al|am|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bl|bm|bn|bo|bq|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mf|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tr|tt|tv|tw|tz|ua|ug|um|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw)$"},
														}},
														ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "<country>", Description: "Country code (2 characters)"}},
														Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "inverse-match",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Inverse match of country-codes"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "group",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Group"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group address-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "domain-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of domains"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group domain-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mac-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of MAC addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group mac-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "network-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of networks"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group network-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of ports"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group port-group"},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IP address, subnet, or range"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-prefix"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-range"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address-exclude"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-prefix-exclude"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-range-exclude"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4", Description: "IPv4 address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4net", Description: "IPv4 prefix to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4range", Description: "IPv4 address range to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4", Description: "Match everything except the specified address"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4net", Description: "Match everything except the specified prefix"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4range", Description: "Match everything except the specified range"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "fqdn",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Fully qualified domain name"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "fqdn"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "<fqdn>", Description: "Fully qualified domain name"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Port"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "port-multi"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Named port (any name in /etc/services, e.g., http)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Numbered port"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "Numbered port range (e.g. 1001-1005)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: " ", Description: "\\n\\n  Multiple destination ports can be specified as a comma-separated list.\\n  For example: 'telnet,http,123,1001-1005'"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address-mask",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IP mask"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4", Description: "IPv4 mask to apply"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "destination",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Destination parameters"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mac-address",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"MAC address"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "mac-address"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "mac-address-exclude"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "macaddr", Description: "MAC address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!macaddr", Description: "Match everything except the specified MAC address"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "fragment",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"IP fragment match"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "match-frag",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Second and further fragments of fragmented packets"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "match-non-frag",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Head fragments or unfragmented packets"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "inbound-interface",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Match inbound-interface"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "interface-name",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match interface"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Script:  []string{"${vyos_completion_dir}/list_interfaces"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "interface-group",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match interface-group"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Path:    []string{"firewall group interface-group"},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "outbound-interface",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Match outbound-interface"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "interface-name",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match interface"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Script:  []string{"${vyos_completion_dir}/list_interfaces"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "interface-group",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match interface-group"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Path:    []string{"firewall group interface-group"},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "ipsec",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Inbound IPsec packets"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "match-ipsec",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Inbound IPsec packets"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "match-none",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Inbound non-IPsec packets"},
												Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "limit",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Rate limit using a token bucket filter"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "burst",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Maximum number of packets to allow in excess of rate"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-4294967295"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-4294967295", Description: "Maximum number of packets to allow in excess of rate"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "rate",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Maximum average matching rate"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"\\d+/(second|minute|hour|day)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "integer/unit (Example: 5/minute)"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "connection-status",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Connection status"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "nat",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"NAT connection status"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"^(destination|source)$"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "destination", Description: "Match connections that are subject to destination NAT"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "source", Description: "Match connections that are subject to source NAT"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"destination source"},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "recent",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Parameters for matching recently seen sources"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "count",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Source addresses seen more than N times"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 1-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-255", Description: "Source addresses seen more than N times"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "time",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Source addresses seen in the last second/minute/hour"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(second|minute|hour)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "second", Description: "Source addresses seen COUNT times in the last second"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "minute", Description: "Source addresses seen COUNT times in the last minute"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "hour", Description: "Source addresses seen COUNT times in the last hour"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"second minute hour"},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "source",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Source parameters"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										Node: []*interfacedefinition.Node{{
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "group",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Group"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group address-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "domain-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of domains"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group domain-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mac-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of MAC addresses"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group mac-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "network-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of networks"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group network-group"},
														}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port-group",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Group of ports"},
														CompletionHelp: []*interfacedefinition.CompletionHelp{{
															XMLName: xml.Name{Local: "completionHelp"},
															Path:    []string{"firewall group port-group"},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "address",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IP address, subnet, or range"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-prefix"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-range"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-address-exclude"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-prefix-exclude"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "ipv4-range-exclude"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4", Description: "IPv4 address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4net", Description: "IPv4 prefix to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "ipv4range", Description: "IPv4 address range to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4", Description: "Match everything except the specified address"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4net", Description: "Match everything except the specified prefix"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!ipv4range", Description: "Match everything except the specified range"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mac-address",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"MAC address"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "mac-address"}, {XMLName: xml.Name{Local: "validator"}, NameAttr: "mac-address-exclude"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "macaddr", Description: "MAC address to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!macaddr", Description: "Match everything except the specified MAC address"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "port",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Port"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "port-multi"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Named port (any name in /etc/services, e.g., http)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Numbered port"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "Numbered port range (e.g. 1001-1005)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: " ", Description: "\\n\\n  Multiple destination ports can be specified as a comma-separated list.\\n  For example: 'telnet,http,123,1001-1005'"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "state",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Session state"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "established",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Established state"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(enable|disable)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"enable disable"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "invalid",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Invalid state"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(enable|disable)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"enable disable"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "new",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"New state"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(enable|disable)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"enable disable"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "related",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Related state"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(enable|disable)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"enable disable"},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "tcp",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"TCP flags to match"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										Node: []*interfacedefinition.Node{{
											XMLName: xml.Name{Local: "node"}, NodeNameAttr: "flags",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"TCP flags to match"},
											}},
											Children: []*interfacedefinition.Children{{
												XMLName: xml.Name{Local: "children"},
												Node: []*interfacedefinition.Node{{
													XMLName: xml.Name{Local: "node"}, NodeNameAttr: "not",
													Properties: []*interfacedefinition.Properties{{
														XMLName: xml.Name{Local: "properties"},
														Help:    []string{"Match flags not set"},
													}},
													Children: []*interfacedefinition.Children{{
														XMLName: xml.Name{Local: "children"},
														LeafNode: []*interfacedefinition.LeafNode{{
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "syn",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Synchronise flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ack",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Acknowledge flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "fin",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Finish flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "rst",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Reset flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "urg",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Urgent flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "psh",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Push flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ecn",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Explicit Congestion Notification flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}, {
															XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "cwr",
															Properties: []*interfacedefinition.Properties{{
																XMLName:   xml.Name{Local: "properties"},
																Help:      []string{"Congestion Window Reduced flag"},
																Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
															}},
														}},
													}},
												}},
												LeafNode: []*interfacedefinition.LeafNode{{
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "syn",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Synchronise flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ack",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Acknowledge flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "fin",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Finish flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "rst",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Reset flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "urg",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Urgent flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "psh",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Push flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ecn",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Explicit Congestion Notification flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}, {
													XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "cwr",
													Properties: []*interfacedefinition.Properties{{
														XMLName:   xml.Name{Local: "properties"},
														Help:      []string{"Congestion Window Reduced flag"},
														Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
													}},
												}},
											}},
										}},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "mss",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Maximum segment size (MSS)"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 1-16384"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-16384", Description: "Maximum segment size"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<min>-<max>", Description: "TCP MSS range (use '-' as delimiter)"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "time",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Time to match rule"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "startdate",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Date to start matching rule"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(\\d{4}\\-\\d{2}\\-\\d{2})"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Enter date using following notation - YYYY-MM-DD"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "starttime",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Time of day to start matching rule"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"([0-2][0-9](\\:[0-5][0-9]){1,2})"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Enter time using using 24 hour notation - hh:mm:ss"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "stopdate",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Date to stop matching rule"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(\\d{4}\\-\\d{2}\\-\\d{2})"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Enter date using following notation - YYYY-MM-DD"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "stoptime",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Time of day to stop matching rule"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"([0-2][0-9](\\:[0-5][0-9]){1,2})"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Enter time using using 24 hour notation - hh:mm:ss"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "weekdays",
											Properties: []*interfacedefinition.Properties{{
												XMLName:   xml.Name{Local: "properties"},
												Help:      []string{"Comma separated weekdays to match rule on"},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Name of day (Monday, Tuesday, Wednesday, Thursdays, Friday, Saturday, Sunday)"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-6", Description: "Day number (0 = Sunday ... 6 = Saturday)"}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "icmp",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"ICMP type and code information"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "code",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"ICMP code"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "ICMP code (0-255)"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "type",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"ICMP type"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "ICMP type (0-255)"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "type-name",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"ICMP type-name"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName: xml.Name{Local: "constraint"},
													Regex:   []string{"(echo-reply|destination-unreachable|source-quench|redirect|echo-request|router-advertisement|router-solicitation|time-exceeded|parameter-problem|timestamp-request|timestamp-reply|info-request|info-reply|address-mask-request|address-mask-reply)"},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "echo-reply", Description: "ICMP type 0: echo-reply"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "destination-unreachable", Description: "ICMP type 3: destination-unreachable"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "source-quench", Description: "ICMP type 4: source-quench"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "redirect", Description: "ICMP type 5: redirect"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "echo-request", Description: "ICMP type 8: echo-request"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "router-advertisement", Description: "ICMP type 9: router-advertisement"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "router-solicitation", Description: "ICMP type 10: router-solicitation"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "time-exceeded", Description: "ICMP type 11: time-exceeded"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "parameter-problem", Description: "ICMP type 12: parameter-problem"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "timestamp-request", Description: "ICMP type 13: timestamp-request"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "timestamp-reply", Description: "ICMP type 14: timestamp-reply"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "info-request", Description: "ICMP type 15: info-request"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "info-reply", Description: "ICMP type 16: info-reply"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "address-mask-request", Description: "ICMP type 17: address-mask-request"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "address-mask-reply", Description: "ICMP type 18: address-mask-reply"}},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													List:    []string{"echo-reply destination-unreachable source-quench redirect echo-request router-advertisement router-solicitation time-exceeded parameter-problem timestamp-request timestamp-reply info-request info-reply address-mask-request address-mask-reply"},
												}},
											}},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "ttl",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Time to live limit"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "eq",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match on equal value"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "Equal to value"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "gt",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match on greater then value"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "Greater then value"}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "lt",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"Match on less then value"},
												Constraint: []*interfacedefinition.Constraint{{
													XMLName:   xml.Name{Local: "constraint"},
													Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-255"}},
												}},
												ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "Less then value"}},
											}},
										}},
									}},
								}},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "action",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Rule action"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(accept|jump|reject|return|drop|queue)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "accept", Description: "Accept matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "jump", Description: "Jump to another chain"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "reject", Description: "Reject matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "return", Description: "Return from the current chain and continue at the next rule of the last chain"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "drop", Description: "Drop matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "queue", Description: "Enqueue packet to userspace"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"accept jump reject return drop queue"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "action",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Rule action"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(accept|jump|reject|return|drop|queue)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "accept", Description: "Accept matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "jump", Description: "Jump to another chain"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "reject", Description: "Reject matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "return", Description: "Return from the current chain and continue at the next rule of the last chain"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "drop", Description: "Drop matching entries"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "queue", Description: "Enqueue packet to userspace"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"accept jump reject return drop queue"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Description"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"[[:ascii:]]{0,256}"},
										}},
										ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
										ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "disable",
									Properties: []*interfacedefinition.Properties{{
										XMLName:   xml.Name{Local: "properties"},
										Help:      []string{"Option to disable firewall rule"},
										Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "log",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Option to log packets matching rule"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(enable|disable)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable log"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable log"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"enable disable"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "log-level",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Set log-level. Log must be enable."},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(emerg|alert|crit|err|warn|notice|info|debug)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "emerg", Description: "Emerg log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "alert", Description: "Alert log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "crit", Description: "Critical log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "err", Description: "Error log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "warn", Description: "Warning log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "notice", Description: "Notice log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "info", Description: "Info log level"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "debug", Description: "Debug log level"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"emerg alert crit err warn notice info debug"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "protocol",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Protocol to match (protocol name, number, or \"all\")"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "ip-protocol"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "all", Description: "All IP protocols"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "tcp_udp", Description: "Both TCP and UDP"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-255", Description: "IP protocol number"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<protocol>", Description: "IP protocol name"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "!<protocol>", Description: "IP protocol name"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"all tcp_udp"},
											Script:  []string{"${vyos_completion_dir}/list_protocols.sh"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "dscp",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"DSCP value"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 0-63"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-63", Description: "DSCP value to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "DSCP range to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "dscp-exclude",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"DSCP value not to match"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 0-63"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-63", Description: "DSCP value not to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "DSCP range not to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "packet-length",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Payload size in bytes, including header and data to match"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 1-65535"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Packet length to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "Packet length range to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "packet-length-exclude",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Payload size in bytes, including header and data not to match"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 1-65535"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:1-65535", Description: "Packet length not to match"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "<start-end>", Description: "Packet length range not to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "packet-type",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Packet type"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(broadcast|host|multicast|other)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "broadcast", Description: "Match broadcast packet type"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "host", Description: "Match host packet type, addressed to local host"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "multicast", Description: "Match multicast packet type"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "other", Description: "Match packet addressed to another host"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"broadcast host multicast other"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "connection-mark",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Connection mark"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 0-2147483647"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-2147483647", Description: "Connection-mark to match"}},
										Multi:     []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "jump-target",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Set jump target. Action jump must be defined to use this setting"},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											Path:    []string{"firewall name"},
										}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "queue",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Queue target to use. Action queue must be defined to use this setting"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName:   xml.Name{Local: "constraint"},
											Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--allow-range --range 0-65535"}},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:0-65535", Description: "Queue target"}},
									}},
								}, {
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "queue-options",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Options used for queue target. Action queue must be defined to use this setting"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(bypass|fanout)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "bypass", Description: "Let packets go through if userspace application cannot back off"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "fanout", Description: "Distribute packets between several queues"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"bypass fanout"},
										}},
										Multi: []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
									}},
								}},
							}},
						}},
						LeafNode: []*interfacedefinition.LeafNode{{
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "default-action",
							DefaultValue: []string{"drop"},
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Default-action for rule-set"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"(drop|jump|reject|return|accept)"},
								}},
								ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "drop", Description: "Drop if no prior rules are hit"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "jump", Description: "Jump to another chain if no prior rules are hit"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "reject", Description: "Drop and notify source if no prior rules are hit"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "return", Description: "Return from the current chain and continue at the next rule of the last chain"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "accept", Description: "Accept if no prior rules are hit"}},
								CompletionHelp: []*interfacedefinition.CompletionHelp{{
									XMLName: xml.Name{Local: "completionHelp"},
									List:    []string{"drop jump reject return accept"},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "enable-default-log",
							Properties: []*interfacedefinition.Properties{{
								XMLName:   xml.Name{Local: "properties"},
								Help:      []string{"Log packets hitting default-action"},
								Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
							}},
						}, {
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Description"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[[:ascii:]]{0,256}"},
								}},
								ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
								ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
							}},
						}, {
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "default-jump-target",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Set jump target. Action jump must be defined in default-action to use this setting"},
								CompletionHelp: []*interfacedefinition.CompletionHelp{{
									XMLName: xml.Name{Local: "completionHelp"},
									Path:    []string{"firewall name"},
								}},
							}},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "zone",
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Zone-policy"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"[a-zA-Z0-9][\\w\\-\\.]&"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Zone name"}},
					}},
					Children: []*interfacedefinition.Children{{
						XMLName: xml.Name{Local: "children"},
						Node: []*interfacedefinition.Node{{
							XMLName: xml.Name{Local: "node"}, NodeNameAttr: "intra-zone-filtering",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Intra-zone filtering"},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								Node: []*interfacedefinition.Node{{
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "firewall",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Use the specified firewall chain"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ipv6-name",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IPv6 firewall ruleset"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Path:    []string{"firewall ipv6-name"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "name",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IPv4 firewall ruleset"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Path:    []string{"firewall name"},
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*interfacedefinition.LeafNode{{
									XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "action",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Action for intra-zone traffic"},
										Constraint: []*interfacedefinition.Constraint{{
											XMLName: xml.Name{Local: "constraint"},
											Regex:   []string{"(accept|drop)"},
										}},
										ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "accept", Description: "Accept traffic"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "drop", Description: "Drop silently"}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{{
											XMLName: xml.Name{Local: "completionHelp"},
											List:    []string{"accept drop"},
										}},
									}},
								}},
							}},
						}},
						TagNode: []*interfacedefinition.TagNode{{
							XMLName: xml.Name{Local: "tagNode"}, NodeNameAttr: "from",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Zone from which to filter traffic"},
								CompletionHelp: []*interfacedefinition.CompletionHelp{{
									XMLName: xml.Name{Local: "completionHelp"},
									Path:    []string{"zone-policy zone"},
								}},
							}},
							Children: []*interfacedefinition.Children{{
								XMLName: xml.Name{Local: "children"},
								Node: []*interfacedefinition.Node{{
									XMLName: xml.Name{Local: "node"}, NodeNameAttr: "firewall",
									Properties: []*interfacedefinition.Properties{{
										XMLName: xml.Name{Local: "properties"},
										Help:    []string{"Firewall options"},
									}},
									Children: []*interfacedefinition.Children{{
										XMLName: xml.Name{Local: "children"},
										LeafNode: []*interfacedefinition.LeafNode{{
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ipv6-name",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IPv6 firewall ruleset"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Path:    []string{"firewall ipv6-name"},
												}},
											}},
										}, {
											XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "name",
											Properties: []*interfacedefinition.Properties{{
												XMLName: xml.Name{Local: "properties"},
												Help:    []string{"IPv4 firewall ruleset"},
												CompletionHelp: []*interfacedefinition.CompletionHelp{{
													XMLName: xml.Name{Local: "completionHelp"},
													Path:    []string{"firewall name"},
												}},
											}},
										}},
									}},
								}},
							}},
						}},
						LeafNode: []*interfacedefinition.LeafNode{{
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "description",
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Description"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"[[:ascii:]]{0,256}"},
								}},
								ValueHelp:              []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Description"}},
								ConstraintErrorMessage: []string{"Description too long (limit 256 characters)"},
							}},
						}, {
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "enable-default-log",
							Properties: []*interfacedefinition.Properties{{
								XMLName:   xml.Name{Local: "properties"},
								Help:      []string{"Log packets hitting default-action"},
								Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
							}},
						}, {
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "default-action",
							DefaultValue: []string{"drop"},
							Properties: []*interfacedefinition.Properties{{
								XMLName: xml.Name{Local: "properties"},
								Help:    []string{"Default-action for traffic coming into this zone"},
								Constraint: []*interfacedefinition.Constraint{{
									XMLName: xml.Name{Local: "constraint"},
									Regex:   []string{"(drop|reject)"},
								}},
								ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "drop", Description: "Drop silently"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "reject", Description: "Drop and notify source"}},
								CompletionHelp: []*interfacedefinition.CompletionHelp{{
									XMLName: xml.Name{Local: "completionHelp"},
									List:    []string{"drop reject"},
								}},
							}},
						}, {
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "interface",
							Properties: []*interfacedefinition.Properties{{
								XMLName:   xml.Name{Local: "properties"},
								Help:      []string{"Interface associated with zone"},
								ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "txt", Description: "Interface associated with zone"}},
								CompletionHelp: []*interfacedefinition.CompletionHelp{{
									XMLName: xml.Name{Local: "completionHelp"},
									Script:  []string{"${vyos_completion_dir}/list_interfaces"},
								}},
								Multi: []*interfacedefinition.Multi{{XMLName: xml.Name{Local: "multi"}}},
							}},
						}, {
							XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "local-zone",
							Properties: []*interfacedefinition.Properties{{
								XMLName:   xml.Name{Local: "properties"},
								Help:      []string{"Zone to be local-zone"},
								Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
							}},
						}},
					}},
				}},
				LeafNode: []*interfacedefinition.LeafNode{{
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "all-ping",
					DefaultValue: []string{"enable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Policy for handling of all IPv4 ICMP echo requests"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(enable|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable processing of all IPv4 ICMP echo requests"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable processing of all IPv4 ICMP echo requests"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"enable disable"},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "broadcast-ping",
					DefaultValue: []string{"disable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Policy for handling broadcast IPv4 ICMP echo and timestamp requests"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(enable|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable processing of broadcast IPv4 ICMP echo/timestamp requests"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable processing of broadcast IPv4 ICMP echo/timestamp requests"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"enable disable"},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "config-trap",
					DefaultValue: []string{"disable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"SNMP trap generation on firewall configuration changes"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(enable|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable sending SNMP trap on firewall configuration change"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable sending SNMP trap on firewall configuration change"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"enable disable"},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ip-src-route",
					DefaultValue: []string{"disable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Policy for handling IPv4 packets with source route option"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(enable|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable processing of IPv4 packets with source route option"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable processing of IPv4 packets with source route option"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"enable disable"},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ipv6-receive-redirects",
					DefaultValue: []string{"disable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Policy for handling received ICMPv6 redirect messages"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(enable|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable processing of received ICMPv6 redirect messages"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable processing of received ICMPv6 redirect messages"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"enable disable"},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "ipv6-src-route",
					DefaultValue: []string{"disable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Policy for handling IPv6 packets with routing extension header"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(enable|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable processing of IPv6 packets with routing header type 2"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable processing of IPv6 packets with routing header"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"enable disable"},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "log-martians",
					DefaultValue: []string{"enable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Policy for logging IPv4 packets with invalid addresses"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(enable|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable logging of IPv4 packets with invalid addresses"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable logging of Ipv4 packets with invalid addresses"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"enable disable"},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "receive-redirects",
					DefaultValue: []string{"disable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Policy for handling received IPv4 ICMP redirect messages"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(enable|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable processing of received IPv4 ICMP redirect messages"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable processing of received IPv4 ICMP redirect messages"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"enable disable"},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "resolver-cache",
					Properties: []*interfacedefinition.Properties{{
						XMLName:   xml.Name{Local: "properties"},
						Help:      []string{"Retains last successful value if domain resolution fails"},
						Valueless: []*interfacedefinition.Valueless{{XMLName: xml.Name{Local: "valueless"}}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "resolver-interval",
					DefaultValue: []string{"300"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Domain resolver update interval"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName:   xml.Name{Local: "constraint"},
							Validator: []*interfacedefinition.Validator{{XMLName: xml.Name{Local: "validator"}, NameAttr: "numeric", ArgumentAttr: "--range 10-3600"}},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "u32:10-3600", Description: "Interval (seconds)"}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "send-redirects",
					DefaultValue: []string{"enable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Policy for sending IPv4 ICMP redirect messages"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(enable|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable sending IPv4 ICMP redirect messages"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable sending IPv4 ICMP redirect messages"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"enable disable"},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "source-validation",
					DefaultValue: []string{"disable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Policy for source validation by reversed path, as specified in RFC3704"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(strict|loose|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "strict", Description: "Enable Strict Reverse Path Forwarding as defined in RFC3704"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "loose", Description: "Enable Loose Reverse Path Forwarding as defined in RFC3704"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "No source validation"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"strict loose disable"},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "syn-cookies",
					DefaultValue: []string{"enable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"Policy for using TCP SYN cookies with IPv4"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(enable|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable use of TCP SYN cookies with IPv4"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable use of TCP SYN cookies with IPv4"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"enable disable"},
						}},
					}},
				}, {
					XMLName: xml.Name{Local: "leafNode"}, NodeNameAttr: "twa-hazards-protection",
					DefaultValue: []string{"disable"},
					Properties: []*interfacedefinition.Properties{{
						XMLName: xml.Name{Local: "properties"},
						Help:    []string{"RFC1337 TCP TIME-WAIT assasination hazards protection"},
						Constraint: []*interfacedefinition.Constraint{{
							XMLName: xml.Name{Local: "constraint"},
							Regex:   []string{"(enable|disable)"},
						}},
						ValueHelp: []*interfacedefinition.ValueHelp{{XMLName: xml.Name{Local: "valueHelp"}, Format: "enable", Description: "Enable RFC1337 TIME-WAIT hazards protection"}, {XMLName: xml.Name{Local: "valueHelp"}, Format: "disable", Description: "Disable RFC1337 TIME-WAIT hazards protection"}},
						CompletionHelp: []*interfacedefinition.CompletionHelp{{
							XMLName: xml.Name{Local: "completionHelp"},
							List:    []string{"enable disable"},
						}},
					}},
				}},
			}},
		}},
	}
}
