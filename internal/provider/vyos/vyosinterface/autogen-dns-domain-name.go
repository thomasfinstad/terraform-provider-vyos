// Code generated by /workspaces/terraform-provider-vyos/tools/build-resource-terraform-schemas/main.go. DO NOT EDIT.

package vyosinterface

import (
	"encoding/xml"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/provider/vyos/schema/interfacedefinition"
)

func DnsDomainName() interfacedefinition.InterfaceDefinition {
	return interfacedefinition.InterfaceDefinition{
		XMLName: xml.Name{
			Local: `interfaceDefinition`},
		Node: []*interfacedefinition.Node{
			{
				XMLName: xml.Name{
					Local: `node`},
				Children: []*interfacedefinition.Children{
					{
						XMLName: xml.Name{
							Local: `children`},
						Node: []*interfacedefinition.Node{
							{
								XMLName: xml.Name{
									Local: `node`},
								OwnerAttr: `${vyos_conf_scripts_dir}/host_name.py`,
								Properties: []*interfacedefinition.Properties{
									{
										XMLName: xml.Name{
											Local: `properties`},
										Help: []string{
											`Domain Name Server (DNS) domain completion order`},
										Priority: []string{
											`400`},
										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
								Children: []*interfacedefinition.Children{
									{
										XMLName: xml.Name{
											Local: `children`},
										LeafNode: []*interfacedefinition.LeafNode{
											{
												XMLName: xml.Name{
													Local: `leafNode`},
												Properties: []*interfacedefinition.Properties{
													{
														XMLName: xml.Name{
															Local: `properties`},
														Help: []string{
															`DNS domain completion order`},
														Constraint: []*interfacedefinition.Constraint{
															{
																XMLName: xml.Name{
																	Local: `constraint`},
																Regex: []string{
																	`[-a-zA-Z0-9.]+`},
																Validator: []*interfacedefinition.Validator(nil)}},
														ConstraintErrorMessage: []string{
															`Invalid domain name`},
														Multi: []*interfacedefinition.Multi{
															{
																XMLName: xml.Name{
																	Local: `multi`}}},
														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}},
							{
								XMLName: xml.Name{
									Local: `node`},
								OwnerAttr: `${vyos_conf_scripts_dir}/host_name.py`,
								Properties: []*interfacedefinition.Properties{
									{
										XMLName: xml.Name{
											Local: `properties`},
										Help: []string{
											`Map host names to addresses`},
										Priority: []string{
											`400`},
										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
								Children: []*interfacedefinition.Children{
									{
										XMLName: xml.Name{
											Local: `children`},
										TagNode: []*interfacedefinition.TagNode{
											{
												XMLName: xml.Name{
													Local: `tagNode`},
												Properties: []*interfacedefinition.Properties{
													{
														XMLName: xml.Name{
															Local: `properties`},
														Help: []string{
															`Host name for static address mapping`},
														Constraint: []*interfacedefinition.Constraint{
															{
																XMLName: xml.Name{
																	Local: `constraint`},
																Regex: []string{
																	`[A-Za-z0-9][-.A-Za-z0-9]&[A-Za-z0-9]`},
																Validator: []*interfacedefinition.Validator(nil)}},
														ConstraintErrorMessage: []string{
															`invalid hostname`},
														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
												Children: []*interfacedefinition.Children{
													{
														XMLName: xml.Name{
															Local: `children`},
														LeafNode: []*interfacedefinition.LeafNode{
															{
																XMLName: xml.Name{
																	Local: `leafNode`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`Alias for this address`},
																		Constraint: []*interfacedefinition.Constraint{
																			{
																				XMLName: xml.Name{
																					Local: `constraint`},
																				Regex: []string{
																					`.{1,
63}`},
																				Validator: []*interfacedefinition.Validator(nil)}},
																		ConstraintErrorMessage: []string{
																			`invalid alias hostname,
 needs to be between 1 and 63 charactes`},
																		Multi: []*interfacedefinition.Multi{
																			{
																				XMLName: xml.Name{
																					Local: `multi`}}},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
															{
																XMLName: xml.Name{
																	Local: `leafNode`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`IP Address`},
																		Constraint: []*interfacedefinition.Constraint{
																			{
																				XMLName: xml.Name{
																					Local: `constraint`},
																				Validator: []*interfacedefinition.Validator{
																					{
																						XMLName: xml.Name{
																							Local: `validator`},
																						NameAttr:     `ip-address`,
																						ArgumentAttr: ``}}}},
																		ValueHelp: []*interfacedefinition.ValueHelp{
																			{
																				XMLName: xml.Name{
																					Local: `valueHelp`},
																				Format:      `ipv4`,
																				Description: `IPv4 address`},
																			{
																				XMLName: xml.Name{
																					Local: `valueHelp`},
																				Format:      `ipv6`,
																				Description: `IPv6 address`}},
																		Multi: []*interfacedefinition.Multi{
																			{
																				XMLName: xml.Name{
																					Local: `multi`}}},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}},
										LeafNode: []*interfacedefinition.LeafNode(nil)}}}},
						LeafNode: []*interfacedefinition.LeafNode{
							{
								XMLName: xml.Name{
									Local: `leafNode`},
								OwnerAttr: `${vyos_conf_scripts_dir}/host_name.py`,
								Properties: []*interfacedefinition.Properties{
									{
										XMLName: xml.Name{
											Local: `properties`},
										Help: []string{
											`System Domain Name Servers (DNS)`},
										Constraint: []*interfacedefinition.Constraint{
											{
												XMLName: xml.Name{
													Local: `constraint`},
												Regex: []string{
													`(bond|br|dum|en|ersp|eth|gnv|ifb|lan|l2tp|l2tpeth|macsec|peth|ppp|pppoe|pptp|sstp|tun|veth|vti|vtun|vxlan|wg|wlan|wwan)[0-9]+(.\\d+)?|lo`},
												Validator: []*interfacedefinition.Validator{
													{
														XMLName: xml.Name{
															Local: `validator`},
														NameAttr:     `ipv4-address`,
														ArgumentAttr: ``},
													{
														XMLName: xml.Name{
															Local: `validator`},
														NameAttr:     `ipv6-address`,
														ArgumentAttr: ``},
													{
														XMLName: xml.Name{
															Local: `validator`},
														NameAttr:     `file-path --lookup-path /sys/class/net --directory`,
														ArgumentAttr: ``}}}},
										ValueHelp: []*interfacedefinition.ValueHelp{
											{
												XMLName: xml.Name{
													Local: `valueHelp`},
												Format:      `ipv4`,
												Description: `Domain Name Server IPv4 address`},
											{
												XMLName: xml.Name{
													Local: `valueHelp`},
												Format:      `ipv6`,
												Description: `Domain Name Server IPv6 address`},
											{
												XMLName: xml.Name{
													Local: `valueHelp`},
												Format:      `txt`,
												Description: `Use Domain Name Server from DHCP interface`}},
										CompletionHelp: []*interfacedefinition.CompletionHelp{
											{
												XMLName: xml.Name{
													Local: `completionHelp`},
												Script: []string{
													`${vyos_completion_dir}/list_interfaces`}}},
										Multi: []*interfacedefinition.Multi{
											{
												XMLName: xml.Name{
													Local: `multi`}}},
										Priority: []string{
											`400`},
										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
							{
								XMLName: xml.Name{
									Local: `leafNode`},
								OwnerAttr: `${vyos_conf_scripts_dir}/host_name.py`,
								Properties: []*interfacedefinition.Properties{
									{
										XMLName: xml.Name{
											Local: `properties`},
										Help: []string{
											`System host name (default: vyos)`},
										Constraint: []*interfacedefinition.Constraint{
											{
												XMLName: xml.Name{
													Local: `constraint`},
												Regex: []string{
													`[A-Za-z0-9][-.A-Za-z0-9]&[A-Za-z0-9]`},
												Validator: []*interfacedefinition.Validator(nil)}},
										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
							{
								XMLName: xml.Name{
									Local: `leafNode`},
								OwnerAttr: `${vyos_conf_scripts_dir}/host_name.py`,
								Properties: []*interfacedefinition.Properties{
									{
										XMLName: xml.Name{
											Local: `properties`},
										Help: []string{
											`System domain name`},
										Constraint: []*interfacedefinition.Constraint{
											{
												XMLName: xml.Name{
													Local: `constraint`},
												Validator: []*interfacedefinition.Validator{
													{
														XMLName: xml.Name{
															Local: `validator`},
														NameAttr:     `fqdn`,
														ArgumentAttr: ``}}}},
										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}}}
}
