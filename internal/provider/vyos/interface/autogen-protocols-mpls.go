// Code generated by /workspaces/terraform-provider-vyos/tools/build-resource-terraform-schemas/main.go. DO NOT EDIT.

package vyosinterface

import (
	"encoding/xml"

	"github.com/thomasfinstad/terraform-provider-vyos/internal/provider/vyos/schema/interfacedefinition"
)

func ProtocolsMpls() interfacedefinition.InterfaceDefinition {
	return interfacedefinition.InterfaceDefinition{
		XMLName: xml.Name{
			Local: `interfaceDefinition`},
		Node: []*interfacedefinition.Node{
			{
				XMLName: xml.Name{
					Local: `node`},
				Children: []*interfacedefinition.Children{
					{
						XMLName: xml.Name{
							Local: `children`},
						Node: []*interfacedefinition.Node{
							{
								XMLName: xml.Name{
									Local: `node`},
								OwnerAttr: `${vyos_conf_scripts_dir}/protocols_mpls.py`,
								Properties: []*interfacedefinition.Properties{
									{
										XMLName: xml.Name{
											Local: `properties`},
										Help: []string{
											`Multiprotocol Label Switching (MPLS)`},
										Priority: []string{
											`400`},
										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
								Children: []*interfacedefinition.Children{
									{
										XMLName: xml.Name{
											Local: `children`},
										Node: []*interfacedefinition.Node{
											{
												XMLName: xml.Name{
													Local: `node`},
												Properties: []*interfacedefinition.Properties{
													{
														XMLName: xml.Name{
															Local: `properties`},
														Help: []string{
															`Label Distribution Protocol (LDP)`},
														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
												Children: []*interfacedefinition.Children{
													{
														XMLName: xml.Name{
															Local: `children`},
														Node: []*interfacedefinition.Node{
															{
																XMLName: xml.Name{
																	Local: `node`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`Forwarding equivalence class allocation from local routes`},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																Children: []*interfacedefinition.Children{
																	{
																		XMLName: xml.Name{
																			Local: `children`},
																		Node: []*interfacedefinition.Node{
																			{
																				XMLName: xml.Name{
																					Local: `node`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`IPv4 routes`},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																				Children: []*interfacedefinition.Children{
																					{
																						XMLName: xml.Name{
																							Local: `children`},
																						LeafNode: []*interfacedefinition.LeafNode{
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Access-list number`},
																										Constraint: []*interfacedefinition.Constraint{
																											{
																												XMLName: xml.Name{
																													Local: `constraint`},
																												Validator: []*interfacedefinition.Validator{
																													{
																														XMLName: xml.Name{
																															Local: `validator`},
																														NameAttr:     `numeric`,
																														ArgumentAttr: `--range 1-2699`}}}},
																										ValueHelp: []*interfacedefinition.ValueHelp{
																											{
																												XMLName: xml.Name{
																													Local: `valueHelp`},
																												Format:      `u32:1-2699`,
																												Description: `Access list number`}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}},
																			{
																				XMLName: xml.Name{
																					Local: `node`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`IPv6 routes`},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																				Children: []*interfacedefinition.Children{
																					{
																						XMLName: xml.Name{
																							Local: `children`},
																						LeafNode: []*interfacedefinition.LeafNode{
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Access-list6 number`},
																										Constraint: []*interfacedefinition.Constraint{
																											{
																												XMLName: xml.Name{
																													Local: `constraint`},
																												Validator: []*interfacedefinition.Validator{
																													{
																														XMLName: xml.Name{
																															Local: `validator`},
																														NameAttr:     `numeric`,
																														ArgumentAttr: `--range 1-2699`}}}},
																										ValueHelp: []*interfacedefinition.ValueHelp{
																											{
																												XMLName: xml.Name{
																													Local: `valueHelp`},
																												Format:      `u32:1-2699`,
																												Description: `Access list number`}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}},
																		LeafNode: []*interfacedefinition.LeafNode(nil)}}},
															{
																XMLName: xml.Name{
																	Local: `node`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`Discovery parameters`},
																		ValueHelp: []*interfacedefinition.ValueHelp{
																			{
																				XMLName: xml.Name{
																					Local: `valueHelp`},
																				Format:      `ipv4`,
																				Description: `Discovery parameters`}},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																Children: []*interfacedefinition.Children{
																	{
																		XMLName: xml.Name{
																			Local: `children`},
																		LeafNode: []*interfacedefinition.LeafNode{
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Hello IPv4 hold time`},
																						Constraint: []*interfacedefinition.Constraint{
																							{
																								XMLName: xml.Name{
																									Local: `constraint`},
																								Validator: []*interfacedefinition.Validator{
																									{
																										XMLName: xml.Name{
																											Local: `validator`},
																										NameAttr:     `numeric`,
																										ArgumentAttr: `--range 1-65535`}}}},
																						ValueHelp: []*interfacedefinition.ValueHelp{
																							{
																								XMLName: xml.Name{
																									Local: `valueHelp`},
																								Format:      `u32:1-65535`,
																								Description: `Time in seconds`}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Hello IPv4 interval`},
																						Constraint: []*interfacedefinition.Constraint{
																							{
																								XMLName: xml.Name{
																									Local: `constraint`},
																								Validator: []*interfacedefinition.Validator{
																									{
																										XMLName: xml.Name{
																											Local: `validator`},
																										NameAttr:     `numeric`,
																										ArgumentAttr: `--range 1-65535`}}}},
																						ValueHelp: []*interfacedefinition.ValueHelp{
																							{
																								XMLName: xml.Name{
																									Local: `valueHelp`},
																								Format:      `u32:1-65535`,
																								Description: `Time in seconds`}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Hello IPv6 hold time`},
																						Constraint: []*interfacedefinition.Constraint{
																							{
																								XMLName: xml.Name{
																									Local: `constraint`},
																								Validator: []*interfacedefinition.Validator{
																									{
																										XMLName: xml.Name{
																											Local: `validator`},
																										NameAttr:     `numeric`,
																										ArgumentAttr: `--range 1-65535`}}}},
																						ValueHelp: []*interfacedefinition.ValueHelp{
																							{
																								XMLName: xml.Name{
																									Local: `valueHelp`},
																								Format:      `u32:1-65535`,
																								Description: `Time in seconds`}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Hello IPv6 interval`},
																						Constraint: []*interfacedefinition.Constraint{
																							{
																								XMLName: xml.Name{
																									Local: `constraint`},
																								Validator: []*interfacedefinition.Validator{
																									{
																										XMLName: xml.Name{
																											Local: `validator`},
																										NameAttr:     `numeric`,
																										ArgumentAttr: `--range 1-65535`}}}},
																						ValueHelp: []*interfacedefinition.ValueHelp{
																							{
																								XMLName: xml.Name{
																									Local: `valueHelp`},
																								Format:      `u32:1-65535`,
																								Description: `Time in seconds`}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Session IPv4 hold time`},
																						Constraint: []*interfacedefinition.Constraint{
																							{
																								XMLName: xml.Name{
																									Local: `constraint`},
																								Validator: []*interfacedefinition.Validator{
																									{
																										XMLName: xml.Name{
																											Local: `validator`},
																										NameAttr:     `numeric`,
																										ArgumentAttr: `--range 15-65535`}}}},
																						ValueHelp: []*interfacedefinition.ValueHelp{
																							{
																								XMLName: xml.Name{
																									Local: `valueHelp`},
																								Format:      `u32:15-65535`,
																								Description: `Time in seconds`}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Session IPv6 hold time`},
																						Constraint: []*interfacedefinition.Constraint{
																							{
																								XMLName: xml.Name{
																									Local: `constraint`},
																								Validator: []*interfacedefinition.Validator{
																									{
																										XMLName: xml.Name{
																											Local: `validator`},
																										NameAttr:     `numeric`,
																										ArgumentAttr: `--range 15-65535`}}}},
																						ValueHelp: []*interfacedefinition.ValueHelp{
																							{
																								XMLName: xml.Name{
																									Local: `valueHelp`},
																								Format:      `u32:15-65535`,
																								Description: `Time in seconds`}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Transport IPv4 address`},
																						Constraint: []*interfacedefinition.Constraint{
																							{
																								XMLName: xml.Name{
																									Local: `constraint`},
																								Validator: []*interfacedefinition.Validator{
																									{
																										XMLName: xml.Name{
																											Local: `validator`},
																										NameAttr:     `ipv4-address`,
																										ArgumentAttr: ``}}}},
																						ValueHelp: []*interfacedefinition.ValueHelp{
																							{
																								XMLName: xml.Name{
																									Local: `valueHelp`},
																								Format:      `ipv4`,
																								Description: `IPv4 bind as transport`}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Transport IPv6 address`},
																						Constraint: []*interfacedefinition.Constraint{
																							{
																								XMLName: xml.Name{
																									Local: `constraint`},
																								Validator: []*interfacedefinition.Validator{
																									{
																										XMLName: xml.Name{
																											Local: `validator`},
																										NameAttr:     `ipv6-address`,
																										ArgumentAttr: ``}}}},
																						ValueHelp: []*interfacedefinition.ValueHelp{
																							{
																								XMLName: xml.Name{
																									Local: `valueHelp`},
																								Format:      `ipv6`,
																								Description: `IPv6 bind as transport`}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}},
															{
																XMLName: xml.Name{
																	Local: `node`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`Targeted LDP neighbor/session parameters`},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																Children: []*interfacedefinition.Children{
																	{
																		XMLName: xml.Name{
																			Local: `children`},
																		Node: []*interfacedefinition.Node{
																			{
																				XMLName: xml.Name{
																					Local: `node`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Targeted IPv4 neighbor/session parameters`},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																				Children: []*interfacedefinition.Children{
																					{
																						XMLName: xml.Name{
																							Local: `children`},
																						LeafNode: []*interfacedefinition.LeafNode{
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Neighbor/session address`},
																										Constraint: []*interfacedefinition.Constraint{
																											{
																												XMLName: xml.Name{
																													Local: `constraint`},
																												Validator: []*interfacedefinition.Validator{
																													{
																														XMLName: xml.Name{
																															Local: `validator`},
																														NameAttr:     `ipv4-address`,
																														ArgumentAttr: ``}}}},
																										ValueHelp: []*interfacedefinition.ValueHelp{
																											{
																												XMLName: xml.Name{
																													Local: `valueHelp`},
																												Format:      `ipv4`,
																												Description: `Neighbor/session address`}},
																										Multi: []*interfacedefinition.Multi{
																											{
																												XMLName: xml.Name{
																													Local: `multi`}}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Accept and respond to targeted hellos`},
																										Valueless: []*interfacedefinition.Valueless{
																											{
																												XMLName: xml.Name{
																													Local: `valueless`}}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Hello interval`},
																										Constraint: []*interfacedefinition.Constraint{
																											{
																												XMLName: xml.Name{
																													Local: `constraint`},
																												Validator: []*interfacedefinition.Validator{
																													{
																														XMLName: xml.Name{
																															Local: `validator`},
																														NameAttr:     `numeric`,
																														ArgumentAttr: `--range 1-65535`}}}},
																										ValueHelp: []*interfacedefinition.ValueHelp{
																											{
																												XMLName: xml.Name{
																													Local: `valueHelp`},
																												Format:      `u32:1-65535`,
																												Description: `Time in seconds`}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Hello hold time`},
																										Constraint: []*interfacedefinition.Constraint{
																											{
																												XMLName: xml.Name{
																													Local: `constraint`},
																												Validator: []*interfacedefinition.Validator{
																													{
																														XMLName: xml.Name{
																															Local: `validator`},
																														NameAttr:     `numeric`,
																														ArgumentAttr: `--range 1-65535`}}}},
																										ValueHelp: []*interfacedefinition.ValueHelp{
																											{
																												XMLName: xml.Name{
																													Local: `valueHelp`},
																												Format:      `u32:1-65535`,
																												Description: `Time in seconds`}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}},
																			{
																				XMLName: xml.Name{
																					Local: `node`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Targeted IPv6 neighbor/session parameters`},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																				Children: []*interfacedefinition.Children{
																					{
																						XMLName: xml.Name{
																							Local: `children`},
																						LeafNode: []*interfacedefinition.LeafNode{
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Neighbor/session address`},
																										Constraint: []*interfacedefinition.Constraint{
																											{
																												XMLName: xml.Name{
																													Local: `constraint`},
																												Validator: []*interfacedefinition.Validator{
																													{
																														XMLName: xml.Name{
																															Local: `validator`},
																														NameAttr:     `ipv6-address`,
																														ArgumentAttr: ``}}}},
																										ValueHelp: []*interfacedefinition.ValueHelp{
																											{
																												XMLName: xml.Name{
																													Local: `valueHelp`},
																												Format:      `ipv6`,
																												Description: `Neighbor/session address`}},
																										Multi: []*interfacedefinition.Multi{
																											{
																												XMLName: xml.Name{
																													Local: `multi`}}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Accept and respond to targeted hellos`},
																										Valueless: []*interfacedefinition.Valueless{
																											{
																												XMLName: xml.Name{
																													Local: `valueless`}}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Hello interval`},
																										Constraint: []*interfacedefinition.Constraint{
																											{
																												XMLName: xml.Name{
																													Local: `constraint`},
																												Validator: []*interfacedefinition.Validator{
																													{
																														XMLName: xml.Name{
																															Local: `validator`},
																														NameAttr:     `numeric`,
																														ArgumentAttr: `--range 1-65535`}}}},
																										ValueHelp: []*interfacedefinition.ValueHelp{
																											{
																												XMLName: xml.Name{
																													Local: `valueHelp`},
																												Format:      `u32:1-65535`,
																												Description: `Time in seconds`}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Hello hold time`},
																										Constraint: []*interfacedefinition.Constraint{
																											{
																												XMLName: xml.Name{
																													Local: `constraint`},
																												Validator: []*interfacedefinition.Validator{
																													{
																														XMLName: xml.Name{
																															Local: `validator`},
																														NameAttr:     `numeric`,
																														ArgumentAttr: `--range 1-65535`}}}},
																										ValueHelp: []*interfacedefinition.ValueHelp{
																											{
																												XMLName: xml.Name{
																													Local: `valueHelp`},
																												Format:      `u32:1-65535`,
																												Description: `Time in seconds`}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}},
																		LeafNode: []*interfacedefinition.LeafNode(nil)}}},
															{
																XMLName: xml.Name{
																	Local: `node`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`Label Distribution Protocol miscellaneous parameters`},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																Children: []*interfacedefinition.Children{
																	{
																		XMLName: xml.Name{
																			Local: `children`},
																		LeafNode: []*interfacedefinition.LeafNode{
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Enable Cisco non-compliant format capability TLV`},
																						Valueless: []*interfacedefinition.Valueless{
																							{
																								XMLName: xml.Name{
																									Local: `valueless`}}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Prefer IPv4 for TCP peer transport connection`},
																						Valueless: []*interfacedefinition.Valueless{
																							{
																								XMLName: xml.Name{
																									Local: `valueless`}}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Enable LDP ordered label distribution control mode`},
																						Valueless: []*interfacedefinition.Valueless{
																							{
																								XMLName: xml.Name{
																									Local: `valueless`}}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}},
															{
																XMLName: xml.Name{
																	Local: `node`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`Export parameters`},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																Children: []*interfacedefinition.Children{
																	{
																		XMLName: xml.Name{
																			Local: `children`},
																		Node: []*interfacedefinition.Node{
																			{
																				XMLName: xml.Name{
																					Local: `node`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`IPv4 parameters`},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																				Children: []*interfacedefinition.Children{
																					{
																						XMLName: xml.Name{
																							Local: `children`},
																						Node: []*interfacedefinition.Node{
																							{
																								XMLName: xml.Name{
																									Local: `node`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Forwarding equivalence class export filter`},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																								Children: []*interfacedefinition.Children{
																									{
																										XMLName: xml.Name{
																											Local: `children`},
																										LeafNode: []*interfacedefinition.LeafNode{
																											{
																												XMLName: xml.Name{
																													Local: `leafNode`},
																												Properties: []*interfacedefinition.Properties{
																													{
																														XMLName: xml.Name{
																															Local: `properties`},
																														Help: []string{
																															`Access-list number to apply FEC filtering`},
																														Constraint: []*interfacedefinition.Constraint{
																															{
																																XMLName: xml.Name{
																																	Local: `constraint`},
																																Validator: []*interfacedefinition.Validator{
																																	{
																																		XMLName: xml.Name{
																																			Local: `validator`},
																																		NameAttr:     `numeric`,
																																		ArgumentAttr: `--range 1-2699`}}}},
																														ValueHelp: []*interfacedefinition.ValueHelp{
																															{
																																XMLName: xml.Name{
																																	Local: `valueHelp`},
																																Format:      `u32:1-2699`,
																																Description: `Access list number`}},
																														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																											{
																												XMLName: xml.Name{
																													Local: `leafNode`},
																												Properties: []*interfacedefinition.Properties{
																													{
																														XMLName: xml.Name{
																															Local: `properties`},
																														Help: []string{
																															`Access-list number for IPv4 neighbor selection to apply filtering`},
																														Constraint: []*interfacedefinition.Constraint{
																															{
																																XMLName: xml.Name{
																																	Local: `constraint`},
																																Validator: []*interfacedefinition.Validator{
																																	{
																																		XMLName: xml.Name{
																																			Local: `validator`},
																																		NameAttr:     `numeric`,
																																		ArgumentAttr: `--range 1-2699`}}}},
																														ValueHelp: []*interfacedefinition.ValueHelp{
																															{
																																XMLName: xml.Name{
																																	Local: `valueHelp`},
																																Format:      `u32:1-2699`,
																																Description: `Access list number`}},
																														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}},
																						LeafNode: []*interfacedefinition.LeafNode{
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Explicit-Null Label`},
																										Valueless: []*interfacedefinition.Valueless{
																											{
																												XMLName: xml.Name{
																													Local: `valueless`}}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}},
																			{
																				XMLName: xml.Name{
																					Local: `node`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`IPv6 parameters`},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																				Children: []*interfacedefinition.Children{
																					{
																						XMLName: xml.Name{
																							Local: `children`},
																						Node: []*interfacedefinition.Node{
																							{
																								XMLName: xml.Name{
																									Local: `node`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Forwarding equivalence class export filter`},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																								Children: []*interfacedefinition.Children{
																									{
																										XMLName: xml.Name{
																											Local: `children`},
																										LeafNode: []*interfacedefinition.LeafNode{
																											{
																												XMLName: xml.Name{
																													Local: `leafNode`},
																												Properties: []*interfacedefinition.Properties{
																													{
																														XMLName: xml.Name{
																															Local: `properties`},
																														Help: []string{
																															`Access-list6 number to apply FEC filtering`},
																														Constraint: []*interfacedefinition.Constraint{
																															{
																																XMLName: xml.Name{
																																	Local: `constraint`},
																																Validator: []*interfacedefinition.Validator{
																																	{
																																		XMLName: xml.Name{
																																			Local: `validator`},
																																		NameAttr:     `numeric`,
																																		ArgumentAttr: `--range 1-2699`}}}},
																														ValueHelp: []*interfacedefinition.ValueHelp{
																															{
																																XMLName: xml.Name{
																																	Local: `valueHelp`},
																																Format:      `u32:1-2699`,
																																Description: `Access list number`}},
																														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																											{
																												XMLName: xml.Name{
																													Local: `leafNode`},
																												Properties: []*interfacedefinition.Properties{
																													{
																														XMLName: xml.Name{
																															Local: `properties`},
																														Help: []string{
																															`Access-list6 number for IPv6 neighbor selection to apply filtering`},
																														Constraint: []*interfacedefinition.Constraint{
																															{
																																XMLName: xml.Name{
																																	Local: `constraint`},
																																Validator: []*interfacedefinition.Validator{
																																	{
																																		XMLName: xml.Name{
																																			Local: `validator`},
																																		NameAttr:     `numeric`,
																																		ArgumentAttr: `--range 1-2699`}}}},
																														ValueHelp: []*interfacedefinition.ValueHelp{
																															{
																																XMLName: xml.Name{
																																	Local: `valueHelp`},
																																Format:      `u32:1-2699`,
																																Description: `Access list number`}},
																														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}},
																						LeafNode: []*interfacedefinition.LeafNode{
																							{
																								XMLName: xml.Name{
																									Local: `leafNode`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Explicit-Null Label`},
																										Valueless: []*interfacedefinition.Valueless{
																											{
																												XMLName: xml.Name{
																													Local: `valueless`}}},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}},
																		LeafNode: []*interfacedefinition.LeafNode(nil)}}},
															{
																XMLName: xml.Name{
																	Local: `node`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`Import parameters`},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																Children: []*interfacedefinition.Children{
																	{
																		XMLName: xml.Name{
																			Local: `children`},
																		Node: []*interfacedefinition.Node{
																			{
																				XMLName: xml.Name{
																					Local: `node`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`IPv4 parameters`},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																				Children: []*interfacedefinition.Children{
																					{
																						XMLName: xml.Name{
																							Local: `children`},
																						Node: []*interfacedefinition.Node{
																							{
																								XMLName: xml.Name{
																									Local: `node`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Forwarding equivalence class import filter`},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																								Children: []*interfacedefinition.Children{
																									{
																										XMLName: xml.Name{
																											Local: `children`},
																										LeafNode: []*interfacedefinition.LeafNode{
																											{
																												XMLName: xml.Name{
																													Local: `leafNode`},
																												Properties: []*interfacedefinition.Properties{
																													{
																														XMLName: xml.Name{
																															Local: `properties`},
																														Help: []string{
																															`Access-list number to apply FEC filtering`},
																														Constraint: []*interfacedefinition.Constraint{
																															{
																																XMLName: xml.Name{
																																	Local: `constraint`},
																																Validator: []*interfacedefinition.Validator{
																																	{
																																		XMLName: xml.Name{
																																			Local: `validator`},
																																		NameAttr:     `numeric`,
																																		ArgumentAttr: `--range 1-2699`}}}},
																														ValueHelp: []*interfacedefinition.ValueHelp{
																															{
																																XMLName: xml.Name{
																																	Local: `valueHelp`},
																																Format:      `u32:1-2699`,
																																Description: `Access list number`}},
																														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																											{
																												XMLName: xml.Name{
																													Local: `leafNode`},
																												Properties: []*interfacedefinition.Properties{
																													{
																														XMLName: xml.Name{
																															Local: `properties`},
																														Help: []string{
																															`Access-list number for IPv4 neighbor selection to apply filtering`},
																														Constraint: []*interfacedefinition.Constraint{
																															{
																																XMLName: xml.Name{
																																	Local: `constraint`},
																																Validator: []*interfacedefinition.Validator{
																																	{
																																		XMLName: xml.Name{
																																			Local: `validator`},
																																		NameAttr:     `numeric`,
																																		ArgumentAttr: `--range 1-2699`}}}},
																														ValueHelp: []*interfacedefinition.ValueHelp{
																															{
																																XMLName: xml.Name{
																																	Local: `valueHelp`},
																																Format:      `u32:1-2699`,
																																Description: `Access list number`}},
																														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}},
																						LeafNode: []*interfacedefinition.LeafNode(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `node`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`IPv6 parameters`},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																				Children: []*interfacedefinition.Children{
																					{
																						XMLName: xml.Name{
																							Local: `children`},
																						Node: []*interfacedefinition.Node{
																							{
																								XMLName: xml.Name{
																									Local: `node`},
																								Properties: []*interfacedefinition.Properties{
																									{
																										XMLName: xml.Name{
																											Local: `properties`},
																										Help: []string{
																											`Forwarding equivalence class import filter`},
																										KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																								Children: []*interfacedefinition.Children{
																									{
																										XMLName: xml.Name{
																											Local: `children`},
																										LeafNode: []*interfacedefinition.LeafNode{
																											{
																												XMLName: xml.Name{
																													Local: `leafNode`},
																												Properties: []*interfacedefinition.Properties{
																													{
																														XMLName: xml.Name{
																															Local: `properties`},
																														Help: []string{
																															`Access-list6 number to apply FEC filtering`},
																														Constraint: []*interfacedefinition.Constraint{
																															{
																																XMLName: xml.Name{
																																	Local: `constraint`},
																																Validator: []*interfacedefinition.Validator{
																																	{
																																		XMLName: xml.Name{
																																			Local: `validator`},
																																		NameAttr:     `numeric`,
																																		ArgumentAttr: `--range 1-2699`}}}},
																														ValueHelp: []*interfacedefinition.ValueHelp{
																															{
																																XMLName: xml.Name{
																																	Local: `valueHelp`},
																																Format:      `u32:1-2699`,
																																Description: `Access list number`}},
																														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																											{
																												XMLName: xml.Name{
																													Local: `leafNode`},
																												Properties: []*interfacedefinition.Properties{
																													{
																														XMLName: xml.Name{
																															Local: `properties`},
																														Help: []string{
																															`Access-list6 number for IPv6 neighbor selection to apply filtering`},
																														Constraint: []*interfacedefinition.Constraint{
																															{
																																XMLName: xml.Name{
																																	Local: `constraint`},
																																Validator: []*interfacedefinition.Validator{
																																	{
																																		XMLName: xml.Name{
																																			Local: `validator`},
																																		NameAttr:     `numeric`,
																																		ArgumentAttr: `--range 1-2699`}}}},
																														ValueHelp: []*interfacedefinition.ValueHelp{
																															{
																																XMLName: xml.Name{
																																	Local: `valueHelp`},
																																Format:      `u32:1-2699`,
																																Description: `Access list number`}},
																														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}},
																						LeafNode: []*interfacedefinition.LeafNode(nil)}}}},
																		LeafNode: []*interfacedefinition.LeafNode(nil)}}}},
														TagNode: []*interfacedefinition.TagNode{
															{
																XMLName: xml.Name{
																	Local: `tagNode`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`LDP neighbor parameters`},
																		Constraint: []*interfacedefinition.Constraint{
																			{
																				XMLName: xml.Name{
																					Local: `constraint`},
																				Validator: []*interfacedefinition.Validator{
																					{
																						XMLName: xml.Name{
																							Local: `validator`},
																						NameAttr:     `ipv4-address`,
																						ArgumentAttr: ``}}}},
																		ValueHelp: []*interfacedefinition.ValueHelp{
																			{
																				XMLName: xml.Name{
																					Local: `valueHelp`},
																				Format:      `ipv4`,
																				Description: `Neighbor IPv4 address`}},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
																Children: []*interfacedefinition.Children{
																	{
																		XMLName: xml.Name{
																			Local: `children`},
																		LeafNode: []*interfacedefinition.LeafNode{
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Neighbor password`},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Neighbor TTL security`},
																						ValueHelp: []*interfacedefinition.ValueHelp{
																							{
																								XMLName: xml.Name{
																									Local: `valueHelp`},
																								Format:      `u32:1-254`,
																								Description: `TTL`},
																							{
																								XMLName: xml.Name{
																									Local: `valueHelp`},
																								Format:      `disable`,
																								Description: `Disable neighbor TTL security`}},
																						CompletionHelp: []*interfacedefinition.CompletionHelp{
																							{
																								XMLName: xml.Name{
																									Local: `completionHelp`},
																								List: []string{
																									`disable`},
																								Script: []string(nil)}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
																			{
																				XMLName: xml.Name{
																					Local: `leafNode`},
																				Properties: []*interfacedefinition.Properties{
																					{
																						XMLName: xml.Name{
																							Local: `properties`},
																						Help: []string{
																							`Session IPv4 hold time`},
																						Constraint: []*interfacedefinition.Constraint{
																							{
																								XMLName: xml.Name{
																									Local: `constraint`},
																								Validator: []*interfacedefinition.Validator{
																									{
																										XMLName: xml.Name{
																											Local: `validator`},
																										NameAttr:     `numeric`,
																										ArgumentAttr: `--range 15-65535`}}}},
																						ValueHelp: []*interfacedefinition.ValueHelp{
																							{
																								XMLName: xml.Name{
																									Local: `valueHelp`},
																								Format:      `u32:15-65535`,
																								Description: `Time in seconds`}},
																						KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}},
														LeafNode: []*interfacedefinition.LeafNode{
															{
																XMLName: xml.Name{
																	Local: `leafNode`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`Override default router identifier`},
																		Constraint: []*interfacedefinition.Constraint{
																			{
																				XMLName: xml.Name{
																					Local: `constraint`},
																				Validator: []*interfacedefinition.Validator{
																					{
																						XMLName: xml.Name{
																							Local: `validator`},
																						NameAttr:     `ipv4-address`,
																						ArgumentAttr: ``}}}},
																		ValueHelp: []*interfacedefinition.ValueHelp{
																			{
																				XMLName: xml.Name{
																					Local: `valueHelp`},
																				Format:      `ipv4`,
																				Description: `Router-ID in IP address format`}},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
															{
																XMLName: xml.Name{
																	Local: `leafNode`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`Interface to use`},
																		Constraint: []*interfacedefinition.Constraint{
																			{
																				XMLName: xml.Name{
																					Local: `constraint`},
																				Regex: []string{
																					`(bond|br|dum|en|ersp|eth|gnv|ifb|lan|l2tp|l2tpeth|macsec|peth|ppp|pppoe|pptp|sstp|tun|veth|vti|vtun|vxlan|wg|wlan|wwan)[0-9]+(.\\d+)?|lo`},
																				Validator: []*interfacedefinition.Validator{
																					{
																						XMLName: xml.Name{
																							Local: `validator`},
																						NameAttr:     `file-path --lookup-path /sys/class/net --directory`,
																						ArgumentAttr: ``}}}},
																		ValueHelp: []*interfacedefinition.ValueHelp{
																			{
																				XMLName: xml.Name{
																					Local: `valueHelp`},
																				Format:      `txt`,
																				Description: `Interface name`}},
																		CompletionHelp: []*interfacedefinition.CompletionHelp{
																			{
																				XMLName: xml.Name{
																					Local: `completionHelp`},
																				Script: []string{
																					`${vyos_completion_dir}/list_interfaces`}}},
																		Multi: []*interfacedefinition.Multi{
																			{
																				XMLName: xml.Name{
																					Local: `multi`}}},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}},
											{
												XMLName: xml.Name{
													Local: `node`},
												Properties: []*interfacedefinition.Properties{
													{
														XMLName: xml.Name{
															Local: `properties`},
														Help: []string{
															`Multiprotocol Label Switching miscellaneous parameters`},
														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}},
												Children: []*interfacedefinition.Children{
													{
														XMLName: xml.Name{
															Local: `children`},
														LeafNode: []*interfacedefinition.LeafNode{
															{
																XMLName: xml.Name{
																	Local: `leafNode`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`Disable copy of IP TTL to MPLS TTL`},
																		Valueless: []*interfacedefinition.Valueless{
																			{
																				XMLName: xml.Name{
																					Local: `valueless`}}},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}},
															{
																XMLName: xml.Name{
																	Local: `leafNode`},
																Properties: []*interfacedefinition.Properties{
																	{
																		XMLName: xml.Name{
																			Local: `properties`},
																		Help: []string{
																			`Maximum TTL for MPLS packets`},
																		Constraint: []*interfacedefinition.Constraint{
																			{
																				XMLName: xml.Name{
																					Local: `constraint`},
																				Validator: []*interfacedefinition.Validator{
																					{
																						XMLName: xml.Name{
																							Local: `validator`},
																						NameAttr:     `numeric`,
																						ArgumentAttr: `--range 1-255`}}}},
																		ValueHelp: []*interfacedefinition.ValueHelp{
																			{
																				XMLName: xml.Name{
																					Local: `valueHelp`},
																				Format:      `u32:1-255`,
																				Description: `Maximum hops allowed`}},
																		KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}},
										LeafNode: []*interfacedefinition.LeafNode{
											{
												XMLName: xml.Name{
													Local: `leafNode`},
												Properties: []*interfacedefinition.Properties{
													{
														XMLName: xml.Name{
															Local: `properties`},
														Help: []string{
															`Interface to use`},
														Constraint: []*interfacedefinition.Constraint{
															{
																XMLName: xml.Name{
																	Local: `constraint`},
																Regex: []string{
																	`(bond|br|dum|en|ersp|eth|gnv|ifb|lan|l2tp|l2tpeth|macsec|peth|ppp|pppoe|pptp|sstp|tun|veth|vti|vtun|vxlan|wg|wlan|wwan)[0-9]+(.\\d+)?|lo`},
																Validator: []*interfacedefinition.Validator{
																	{
																		XMLName: xml.Name{
																			Local: `validator`},
																		NameAttr:     `file-path --lookup-path /sys/class/net --directory`,
																		ArgumentAttr: ``}}}},
														ValueHelp: []*interfacedefinition.ValueHelp{
															{
																XMLName: xml.Name{
																	Local: `valueHelp`},
																Format:      `txt`,
																Description: `Interface name`}},
														CompletionHelp: []*interfacedefinition.CompletionHelp{
															{
																XMLName: xml.Name{
																	Local: `completionHelp`},
																Script: []string{
																	`${vyos_completion_dir}/list_interfaces`}}},
														Multi: []*interfacedefinition.Multi{
															{
																XMLName: xml.Name{
																	Local: `multi`}}},
														KeepChildOrder: []*interfacedefinition.KeepChildOrder(nil)}}}}}}}},
						LeafNode: []*interfacedefinition.LeafNode(nil)}}}}}
}
