
SHELL:=/usr/bin/bash
GO_IMPORT_ROOT:=github.com/thomasfinstad/terraform-provider-vyos

###
# Default helper target
help:
	@echo "Most targets are not ment for manual usage, these are the private targets starting with dot"
	@echo "Valid targets listed below"
	@echo "<target>: <dependency> <dependency ...>" | egrep --color '^[^ ]*:'
	@make -rpn | sed -n -e '/^$$/ { n ; /^[^ .#][^ ]*:/p ; }' | egrep --color '^[^ ]*:'

###
# VyOS ISO Upload timestamp

# Fetch and format newest successful rolling ISO build time
data/vyos/rolling-iso-build.txt:
	-mkdir -p .build
	curl -L \
		-H "Accept: application/vnd.github+json" \
		-H "X-GitHub-Api-Version: 2022-11-28" \
		--url "https://api.github.com/repos/vyos/vyos-rolling-nightly-builds/actions/runs?status=success&per_page=10" \
			| jq -r '[.workflow_runs[] | select(.name | "VyOS rolling nightly build")].[0].run_started_at' \
				> ".build/rolling-iso-build.txt"

	-head -n1 "data/vyos/rolling-iso-build.txt"
	-head -n1 ".build/rolling-iso-build.txt"

	if [ "$$(head -n1 "data/vyos/rolling-iso-build.txt")" != "$$(head -n1 ".build/rolling-iso-build.txt")" ]; then \
		echo "updating timestamp file"; \
		mv ".build/rolling-iso-build.txt" "data/vyos/rolling-iso-build.txt"; \
	fi

###
# VyOS src repo at correct commit
data/vyos/submodule.sha: data/vyos/rolling-iso-build.txt
	git submodule update --init --single-branch -- data/vyos/vyos-1x

	cd data/vyos/vyos-1x && \
	commit="$$(git rev-list --date=iso-strict -n 1 --before="$$(cat "data/vyos/rolling-iso-build.txt")" "current")" && \
	git checkout "$$commit" && \
	echo "$$commit" > ../submodule.sha

###
# Autogenerate Schemas

# Convert from relaxng to XSD
data/vyos/schema/interface-definition.xsd: data/vyos/submodule.sha
	mkdir -p .build/vyos/schema/
	java -jar tools/trang-20091111/trang.jar -I rnc -O xsd data/vyos/vyos-1x/schema/interface_definition.rnc data/vyos/schema/interface-definition.xsd

# Generate go structs from XSD
internal/vyos/schema/interfacedefinition/autogen-structs.go: data/vyos/schema/interface-definition.xsd internal/vyos/schema/interfacedefinition/interface-definition.go

	@-rm -v internal/vyos/schema/interfacedefinition/autogen-structs.go

	# Generate structs from schema
	go run github.com/xuri/xgen/cmd/xgen -p interfacedefinition -i data/vyos/schema/interface-definition.xsd -o internal/vyos/schema/interfacedefinition/autogen-structs.go -l Go

	# Ensure the nodes name atter will be properly unmarshaled from xml
	sed -i 's|\*NodeNameAttr.*|string `xml:"name,attr,omitempty"`|' internal/vyos/schema/interfacedefinition/autogen-structs.go

	# Convert any undefined value as string type to stop unmarshaling from breaking
	sed -i 's|interface{}|string|' internal/vyos/schema/interfacedefinition/autogen-structs.go

	# Add option to set if this is used as a root node
	sed -i 's|\(type [A-Za-z]*Node struct {\)|\1\nIsBaseNode bool|' internal/vyos/schema/interfacedefinition/autogen-structs.go

	# Add a parent value to node structs
	sed -i 's|\(type [A-Za-z]*Node struct {\)|\1\nParent NodeParent|' internal/vyos/schema/interfacedefinition/autogen-structs.go

	# Format output
	gofumpt -w ./internal/vyos/schema/interfacedefinition/


###
# Terraform Resource Schemas

# Compile interface devfinitions
data/vyos/interface-definitions: data/vyos/submodule.sha

	@rm -rf "data/vyos/interface-definitions"
	python -m venv .build/vyos/vyos-1x/venv

	bash -c " \
		source .build/vyos/vyos-1x/venv/bin/activate && \
		cd data/vyos/vyos-1x && \
		pip install -r test-requirements.txt && \
		make interface_definitions \
	"

	mv data/vyos/vyos-1x/build/interface-definitions data/vyos/interface-definitions
	find data/vyos/interface-definitions/ -type f -name "*.xml" -execdir xmllint --format --recover --output '{}' '{}' \;

internal/vyos/vyosinterface/auto-package.go: data/vyos/interface-definitions tools/build-vyos-infterface-definition-structs/main.go
	mkdir -p "internal/vyos/vyosinterface"

	@rm -fv internal/vyos/vyosinterface/auto-package.go
	@rm -fv internal/vyos/vyosinterface/autogen-*.go

	# Generate interfaces, skip xml component version metadata file
	for xmlFile in $$(ls "data/vyos/interface-definitions/" | grep -v "xml-component-version.xml"); do \
		echo -en "Input xml: '$${xmlFile}'\t"; \
		go run tools/build-vyos-infterface-definition-structs/*.go "data/vyos/interface-definitions/$${xmlFile}" "internal/vyos/vyosinterface" "vyosinterface" || exit 1; \
	done

	echo -e "// Package vyosinterface generated by Makefile on $$(date -u -Iseconds). DO NOT EDIT." > "internal/vyos/vyosinterface/auto-package.go"
	echo -e "package vyosinterface\n\n" >> "internal/vyos/vyosinterface/auto-package.go"

	echo -e 'import "$(GO_IMPORT_ROOT)/internal/vyos/schema/interfacedefinition"\n\n' >> "internal/vyos/vyosinterface/auto-package.go"

	echo -e "// GetInterfaces returns all autogenerated interface definitions" >> "internal/vyos/vyosinterface/auto-package.go"
	echo -e "func GetInterfaces() []interfacedefinition.InterfaceDefinition {" >> "internal/vyos/vyosinterface/auto-package.go"
	echo -e "return []interfacedefinition.InterfaceDefinition{" >> "internal/vyos/vyosinterface/auto-package.go"
	grep -r -o -h "func [a-z]*()" internal/vyos/vyosinterface/| sort | sed 's/func \(.*\)/\1,/g' >> "internal/vyos/vyosinterface/auto-package.go"
	echo -e "}" >> "internal/vyos/vyosinterface/auto-package.go"
	echo -e "}" >> "internal/vyos/vyosinterface/auto-package.go"

	gofumpt -w ./internal/vyos/vyosinterface/*.go

internal/terraform/resource/autogen/named: internal/vyos/vyosinterface/auto-package.go tools/build-terraform-resource-full/template.gotmpl

	@rm -rfv internal/terraform/resource/autogen/named/
	mkdir -p "internal/terraform/resource/autogen/named"

	go run tools/build-terraform-resource-full/main.go \
		internal/terraform/resource/autogen/named \
		named \
		$(GO_IMPORT_ROOT) \
		"system/conntrack-timeout-custom-rule"

	gofumpt -w internal/terraform/resource/autogen/named/

	echo -e "// Package named generated by Makefile on $$(date -u -Iseconds). DO NOT EDIT." > "internal/terraform/resource/autogen/named/autogen-package.go"
	echo -e "package named\n\n" >> "internal/terraform/resource/autogen/named/autogen-package.go"

	echo -e 'import (' >> "internal/terraform/resource/autogen/named/autogen-package.go"
	echo -e '"github.com/hashicorp/terraform-plugin-framework/resource"' >> "internal/terraform/resource/autogen/named/autogen-package.go"
	for f in $$(find internal/terraform/resource/autogen/named/ -name "resource.go"); do \
		grep -H "^package " "$$f" \
			| sed 's|^\(.*\)/[^/]\+:package \(.*\)$$|\2 "$(GO_IMPORT_ROOT)/\1"|' \
				>> "internal/terraform/resource/autogen/named/autogen-package.go"; \
	done
	echo -e ')\n\n' >> "internal/terraform/resource/autogen/named/autogen-package.go"

	echo -e "// GetResources returns all autogenerated resources" >> "internal/terraform/resource/autogen/named/autogen-package.go"
	echo -e "func GetResources() []func() resource.Resource {" >> "internal/terraform/resource/autogen/named/autogen-package.go"
	echo -e "return []func() resource.Resource{" >> "internal/terraform/resource/autogen/named/autogen-package.go"

	for f in $$(find internal/terraform/resource/autogen/named/ -name "resource.go"); do \
		sed -n \
			-e 's|^package \(.*\)$$|\1|p' \
			-e 's|func \(New.*\)().*|\1|p' \
			"$$f" \
				| tr '\n' '.' \
				| sed 's|.$$|,\n|'  \
					>> "internal/terraform/resource/autogen/named/autogen-package.go"; \
	done

	echo -e "}" >> "internal/terraform/resource/autogen/named/autogen-package.go"
	echo -e "}" >> "internal/terraform/resource/autogen/named/autogen-package.go"

	gofumpt -w "./internal/terraform/resource/autogen/named/autogen-package.go"

	goimports -w "./internal/terraform/resource/autogen/named"

	go generate main.go

.PHONY: test
test: internal/terraform/resource/autogen/named
	cd internal/terraform/tests; \
	go test -v

.PHONY: ci-build
ci-build:
	make clean
	make --always-make data/vyos/rolling-iso-build.txt
	make test
	make clean

	git add -A
	-pre-commit run
	git add -A

.PHONY: build
build: test

.PHONY: install
install: internal/terraform/resource/autogen/named
	go install .

.PHONY: clean
clean:
	rm -rfv .build
	git submodule deinit --all
