
SHELL:=/usr/bin/bash

###
# Default helper target
help:
	@echo "Most targets are not ment for manual usage, these are the private targets starting with dot"
	@echo "Valid targets listed below"
	@echo "<target>: <dependency> <dependency ...>" | egrep --color '^[^ ]*:'
	@make -rpn | sed -n -e '/^$$/ { n ; /^[^ .#][^ ]*:/p ; }' | egrep --color '^[^ ]*:'

###
# VyOS ISO Upload timestamp

# Fetch and format newest ISO modification timestamp
data/vyos/rolling-iso-time.txt:
	curl -s --location --head \
		"https://s3-us.vyos.io/rolling/current/vyos-rolling-latest.iso" \
		> ".build/vyos/iso-headers.txt"

	mkdir -p data/vyos
	date \
		-d "$(shell sed -n '/last-modified:/s/last-modified: //p' ".build/vyos/iso-headers.txt")" \
		-Iseconds \
		> "data/vyos/rolling-iso-time.txt"

###
# VyOS src repo at correct commit
data/vyos/vyos-1x/submodule.log: data/vyos/rolling-iso-time.txt
	git submodule update --init --single-branch -- data/vyos/vyos-1x

	cd data/vyos/vyos-1x && \
	commit="$$(git rev-list --date=iso-strict -n 1 --before="$(shell cat "data/vyos/rolling-iso-time.txt")" "current")" && \
	git checkout "$$commit" && \
	echo "$$commit" > submodule.log

###
# Autogenerate Schemas

# Convert from relaxng to XSD
.build/vyos/schema/interface-definition.xsd: data/vyos/vyos-1x/submodule.log
	mkdir -p .build/vyos/schema/
	java -jar scripts/trang-20091111/trang.jar -I rnc -O xsd data/vyos/vyos-1x/schema/interface_definition.rnc .build/vyos/schema/interface-definition.xsd

# Generate go structs from XSD
internal/vyos/schema/interfacedefinition/autogen-structs.go: .build/vyos/schema/interface-definition.xsd internal/vyos/schema/interfacedefinition/interface-definition.go
	go run github.com/xuri/xgen/cmd/xgen -p interfacedefinition -i .build/vyos/schema/interface-definition.xsd -o internal/vyos/schema/interfacedefinition/autogen-structs.go -l Go
	sed -i 's|\*NodeNameAttr.*|string `xml:"name,attr,omitempty"`|' internal/vyos/schema/interfacedefinition/autogen-structs.go
	sed -i 's|interface{}|string|' internal/vyos/schema/interfacedefinition/autogen-structs.go
	go fmt ./internal/vyos/schema/interfacedefinition/


###
# Terraform Resource Schemas

# Compile interface devfinitions
.build/vyos/interface-definitions: data/vyos/vyos-1x/submodule.log

	@rm -rf ".build/vyos/interface-definitions"
	python -m venv .build/vyos/vyos-1x/venv

	bash -c " \
		source .build/vyos/vyos-1x/venv/bin/activate && \
		cd data/vyos/vyos-1x && \
		pip install -r test-requirements.txt && \
		make interface_definitions \
	"

	mv data/vyos/vyos-1x/build/interface-definitions .build/vyos/interface-definitions

internal/vyos/vyosinterface/auto-package.go: .build/vyos/interface-definitions tools/build-vyos-infterface-definition-structs/main.go
	mkdir -p "internal/vyos/vyosinterface"

	@rm -fv internal/vyos/vyosinterface/auto-package.go
	@rm -fv internal/vyos/vyosinterface/autogen-*.go

	for xmlFile in $(shell ls ".build/vyos/interface-definitions/" | grep -v "xml-component-version.xml"); do \
		echo -en "Input xml: '$${xmlFile}'\t"; \
		go run tools/build-vyos-infterface-definition-structs/main.go ".build/vyos/interface-definitions/$${xmlFile}" "internal/vyos/vyosinterface" "vyosinterface" || exit 1; \
		echo -n "Formatting: "; \
		gofumpt -l -w "./internal/vyos/vyosinterface/autogen-$$(echo $${xmlFile} | cut -d. -f1).go" || exit 1; \
	done

	echo -e "// Package vyosinterface generated by Makefile on $(shell date -u -Iseconds). DO NOT EDIT." > "internal/vyos/vyosinterface/auto-package.go"
	echo -e "package vyosinterface\n\n" >> "internal/vyos/vyosinterface/auto-package.go"

	echo -e 'import "github.com/thomasfinstad/terraform-provider-vyos/internal/vyos/schema/interfacedefinition"\n\n' >> "internal/vyos/vyosinterface/auto-package.go"

	echo -e "// GetInterfaces returns all autogenerated interface definitions" >> "internal/vyos/vyosinterface/auto-package.go"
	echo -e "func GetInterfaces() []interfacedefinition.InterfaceDefinition {" >> "internal/vyos/vyosinterface/auto-package.go"
	echo -e "return []interfacedefinition.InterfaceDefinition{" >> "internal/vyos/vyosinterface/auto-package.go"
	grep -r -o -h "func [a-z]*()" internal/vyos/vyosinterface/| sort | sed 's/func \(.*\)/\1,/g' >> "internal/vyos/vyosinterface/auto-package.go"
	echo -e "}" >> "internal/vyos/vyosinterface/auto-package.go"
	echo -e "}" >> "internal/vyos/vyosinterface/auto-package.go"

	gofumpt -l -w "./internal/vyos/vyosinterface/auto-package.go"

tf-resources:
	mkdir -p "internal/terraform/resource/full/"

	@rm -fv internal/terraform/resource/full/package.go
	@rm -fv internal/terraform/resource/full/autogen-*.go

	go run tools/build-terraform-resource-full/main.go internal/terraform/resource/full resourcefull

	gofumpt -w -l internal/terraform/resource/full/

	echo -e "// Package resourcefull generated by Makefile on $(shell date -u -Iseconds). DO NOT EDIT." > "internal/terraform/resource/full/package.go"
	echo -e "package resourcefull\n\n" >> "internal/terraform/resource/full/package.go"

	echo -e 'import "github.com/hashicorp/terraform-plugin-framework/resource"\n\n' >> "internal/terraform/resource/full/package.go"

	echo -e "// GetResources returns all autogenerated resources" >> "internal/terraform/resource/full/package.go"
	echo -e "func GetResources() []func() resource.Resource {" >> "internal/terraform/resource/full/package.go"
	echo -e "return []func() resource.Resource{" >> "internal/terraform/resource/full/package.go"
	grep -r -o -h "func [A-Za-z_]*Resource()" internal/terraform/resource/full/| sort | sed 's/func \(.*\)()/\1,/g' >> "internal/terraform/resource/full/package.go"
	echo -e "}" >> "internal/terraform/resource/full/package.go"
	echo -e "}" >> "internal/terraform/resource/full/package.go"

	gofumpt -l -w "./internal/terraform/resource/full/package.go"

	goimports -l -w "./internal/terraform/resource/full"

	go generate main.go

.PHONY: clean
clean:
	rm -rfv .build
	git submodule deinit --all
